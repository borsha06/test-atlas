{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Timepicker/VaTimepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Timepicker/VaTimepicker.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EventListener from '../utils/EventListener';\nimport inputMixin from '../Mixin/inputMixin';\nimport localeMixin from '../Mixin/localeMixin';\nexport default {\n  name: 'VaTimepicker',\n  mixins: [inputMixin, localeMixin('VaTimepicker')],\n  props: {\n    value: {\n      type: String\n    },\n    format: {\n      type: String,\n      default: 'hh:mm:ss',\n      required: false\n    },\n    hourRange: {\n      type: Array,\n      default: function _default() {\n        return [0, 23];\n      }\n    },\n    minuteRange: {\n      type: Array,\n      default: function _default() {\n        return [0, 59];\n      }\n    },\n    secondRange: {\n      type: Array,\n      default: function _default() {\n        return [0, 59];\n      }\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      time: {\n        hour: 0,\n        minute: 0,\n        second: 0\n      },\n      currentValue: this.value\n    };\n  },\n  watch: {\n    show: function show(val) {\n      if (!val) this.$emit('hide', this.currentValue);\n    },\n    value: function value(val) {\n      if (this.inner) {\n        this.inner = false;\n        return;\n      }\n\n      this.inner = true;\n      this.currentValue = val;\n    },\n    currentValue: function currentValue(val) {\n      if (this.inner) {\n        this.inner = false;\n        return;\n      }\n\n      this.inner = true;\n      this.$emit('input', val);\n      this.$emit('change', val);\n    },\n    time: {\n      deep: true,\n      handler: function handler(val) {\n        var ret = '';\n        this.time.hour > this.hourRange[1] ? this.time.hour = this.hourRange[1] : 0;\n        this.time.minute > this.minuteRange[1] ? this.time.minute = this.minuteRange[1] : 0;\n        this.time.second > this.secondRange[1] ? this.time.second = this.secondRange[1] : 0;\n        this.time.hour < this.hourRange[0] ? this.time.hour = this.hourRange[0] : 0;\n        this.time.minute < this.minuteRange[0] ? this.time.minute = this.minuteRange[0] : 0;\n        this.time.second < this.secondRange[0] ? this.time.second = this.secondRange[0] : 0;\n\n        if (this.hour) {\n          ret += this.fix(this.time.hour, 2) + ':';\n        }\n\n        if (this.minute) {\n          ret += this.fix(this.time.minute, 2) + ':';\n        }\n\n        if (this.second) {\n          ret += this.fix(this.time.second, 2) + ':';\n        }\n\n        ret = ret.substr(0, ret.length - 1);\n        this.currentValue = ret;\n      }\n    }\n  },\n  methods: {\n    clean: function clean() {\n      var _this = this;\n\n      this.time = {\n        hour: 0,\n        minute: 0,\n        second: 0\n      };\n      this.$nextTick(function () {\n        _this.currentValue = '';\n      });\n    },\n    close: function close() {\n      this.show = false;\n    },\n    inputClick: function inputClick() {\n      if (this.disabled) return;\n      this.show = !this.show;\n    },\n    fix: function fix(num, length) {\n      num = parseInt(num);\n      num = isNaN(num) ? 0 : num;\n      return ('' + num).length < length ? (new Array(length + 1).join('0') + num).slice(-length) : '' + num;\n    },\n    _format: function _format(str) {\n      if (str) {\n        var a = str.split(':');\n\n        if (this.hour) {\n          this.time.hour = parseInt(a[0] ? a[0] : 0);\n        }\n\n        if (this.minute) {\n          this.time.minute = parseInt(a[1] ? a[1] : 0);\n        }\n\n        if (this.second) {\n          this.time.second = parseInt(a[2] ? a[2] : 0);\n        }\n      }\n    }\n  },\n  computed: {\n    hour: function hour() {\n      return this.format.indexOf('hh') > -1;\n    },\n    minute: function minute() {\n      return this.format.indexOf('mm') > -1;\n    },\n    second: function second() {\n      return this.format.indexOf('ss') > -1;\n    }\n  },\n  created: function created() {\n    this._format(this.currentValue);\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this._closeEvent = EventListener.listen(window, 'click', function (e) {\n      if (!_this2.$el.contains(e.target)) _this2.close();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this._closeEvent) this._closeEvent.remove();\n  }\n};",{"version":3,"sources":["VaTimepicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"`${prefixCls}-timepicker`\">\n    <va-input\n      :width=\"width\"\n      :name=\"name\"\n      :rules=\"rules\"\n      :placeholder=\"placeholder\"\n      :custom-validate=\"customValidate\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      @clean=\"clean\"\n      @click.native=\"inputClick\"\n      :show-clean=\"true\"\n      icon=\"clock\"\n      icon-style=\"regular\"\n      v-model=\"currentValue\">\n    </va-input>\n    <transition name=\"fadeDown\">\n      <div v-show=\"show\" v-va-position=\"show\" :class=\"`${prefixCls}-timepicker-popup`\">\n        <div v-if=\"hour\" data-role=\"hour\" :class=\"`${prefixCls}-timepicker-range-wrap`\">\n          <span>{{getL('hour')}}</span>\n          <va-range :width=\"190\" v-model=\"time.hour\" :min=\"hourRange[0]\" :max=\"hourRange[1]\" :class=\"`${prefixCls}-timepicker-range`\"></va-range>\n        </div>\n        <div v-if=\"minute\" data-role=\"minute\" :class=\"`${prefixCls}-timepicker-range-wrap`\">\n          <span>{{getL('minute')}}</span>\n          <va-range :width=\"190\" v-model=\"time.minute\" :min=\"minuteRange[0]\" :max=\"minuteRange[1]\" :class=\"`${prefixCls}-timepicker-range`\"></va-range>\n        </div>\n        <div v-if=\"second\" data-role=\"second\" :class=\"`${prefixCls}-timepicker-range-wrap`\">\n          <span>{{getL('second')}}</span>\n          <va-range :width=\"190\" v-model=\"time.second\" :min=\"secondRange[0]\" :max=\"secondRange[1]\" :class=\"`${prefixCls}-timepicker-range`\"></va-range>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport EventListener from '../utils/EventListener'\nimport inputMixin from '../Mixin/inputMixin'\nimport localeMixin from '../Mixin/localeMixin'\n\nexport default {\n  name: 'VaTimepicker',\n  mixins: [inputMixin, localeMixin('VaTimepicker')],\n  props: {\n    value: {\n      type: String\n    },\n    format: {\n      type: String,\n      default: 'hh:mm:ss',\n      required: false\n    },\n    hourRange: {\n      type: Array,\n      default () {\n        return [0, 23]\n      }\n    },\n    minuteRange: {\n      type: Array,\n      default () {\n        return [0, 59]\n      }\n    },\n    secondRange: {\n      type: Array,\n      default () {\n        return [0, 59]\n      }\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      show: false,\n      time: {\n        hour: 0,\n        minute: 0,\n        second: 0\n      },\n      currentValue: this.value\n    }\n  },\n  watch: {\n    show (val) {\n      if (!val) this.$emit('hide', this.currentValue)\n    },\n    value (val) {\n      if (this.inner) {\n        this.inner = false\n        return\n      }\n      this.inner = true\n      this.currentValue = val\n    },\n    currentValue (val) {\n      if (this.inner) {\n        this.inner = false\n        return\n      }\n      this.inner = true\n      this.$emit('input', val)\n      this.$emit('change', val)\n    },\n    time: {\n      deep: true,\n      handler (val) {\n        var ret = ''\n        this.time.hour > this.hourRange[1] ? this.time.hour = this.hourRange[1] : 0\n        this.time.minute > this.minuteRange[1] ? this.time.minute = this.minuteRange[1] : 0\n        this.time.second > this.secondRange[1] ? this.time.second = this.secondRange[1] : 0\n        this.time.hour < this.hourRange[0] ? this.time.hour = this.hourRange[0] : 0\n        this.time.minute < this.minuteRange[0] ? this.time.minute = this.minuteRange[0] : 0\n        this.time.second < this.secondRange[0] ? this.time.second = this.secondRange[0] : 0\n        if (this.hour) {\n          ret += this.fix(this.time.hour, 2) + ':'\n        }\n        if (this.minute) {\n          ret += this.fix(this.time.minute, 2) + ':'\n        }\n        if (this.second) {\n          ret += this.fix(this.time.second, 2) + ':'\n        }\n        ret = ret.substr(0, ret.length - 1)\n        this.currentValue = ret\n      }\n    }\n  },\n  methods: {\n    clean () {\n      this.time = {\n        hour: 0,\n        minute: 0,\n        second: 0\n      }\n      this.$nextTick(() => {\n        this.currentValue = ''\n      })\n    },\n    close () {\n      this.show = false\n    },\n    inputClick () {\n      if (this.disabled) return\n      this.show = !this.show\n    },\n    fix (num, length) {\n      num = parseInt(num)\n      num = isNaN(num) ? 0 : num\n      return ('' + num).length < length ? ((new Array(length + 1)).join('0') + num).slice(-length) : '' + num\n    },\n    _format (str) {\n      if (str) {\n        var a = str.split(':')\n        if (this.hour) {\n          this.time.hour = parseInt(a[0] ? a[0] : 0)\n        }\n        if (this.minute) {\n          this.time.minute = parseInt(a[1] ? a[1] : 0)\n        }\n        if (this.second) {\n          this.time.second = parseInt(a[2] ? a[2] : 0)\n        }\n      }\n    }\n  },\n  computed: {\n    hour () {\n      return this.format.indexOf('hh') > -1\n    },\n    minute () {\n      return this.format.indexOf('mm') > -1\n    },\n    second () {\n      return this.format.indexOf('ss') > -1\n    }\n  },\n  created () {\n    this._format(this.currentValue)\n  },\n  mounted () {\n    this._closeEvent = EventListener.listen(window, 'click', (e) => {\n      if (!this.$el.contains(e.target)) this.close()\n    })\n  },\n  beforeDestroy () {\n    if (this._closeEvent) this._closeEvent.remove()\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Timepicker"}]}