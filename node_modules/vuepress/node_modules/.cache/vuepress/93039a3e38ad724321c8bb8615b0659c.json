{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/validate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/validate.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\nimport type from './utils/type';\nimport events from './utils/events';\nimport localeMixin from './Mixin/localeMixin';\nexport default {\n  name: 'VaValidate',\n  mixins: [events, localeMixin('VaValidate')],\n  props: {\n    value: {\n      type: String\n    },\n    customValidate: {\n      type: Function\n    },\n    rules: {\n      type: Array\n    },\n    name: {\n      type: String\n    },\n    current: {},\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      tips: '',\n      validate: false,\n      status: '',\n      vStatus: this.value,\n      results: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('Va@openValidate', function (val) {\n      _this.validate = val;\n      val ? _this.vStatus = _this.status : _this.vStatus = '';\n    });\n  },\n  computed: {\n    _results: {\n      get: function get() {\n        return this.resuts;\n      },\n      set: function set(val, oldVal) {\n        var self = this;\n        var tips = '';\n        var status = '';\n\n        for (var key in val) {\n          var obj = val[key];\n\n          if (type.isObject(obj)) {\n            obj.tips ? tips += obj.tips + '  ' : '';\n\n            if (obj.validStatus !== 'success') {\n              status = 'error';\n            }\n          }\n        }\n\n        status !== 'error' ? status = 'success' : 0;\n        self.status = status;\n\n        if (self.validate) {\n          self.vStatus = self.status;\n        }\n\n        var isvalid = true;\n        self.tips = tips;\n\n        for (var i in val) {\n          var validStatus = val[i]['validStatus'];\n\n          if (validStatus === 'error') {\n            isvalid = false;\n            break;\n          }\n        }\n\n        var newVal = Object.assign({}, val);\n        newVal.isvalid = isvalid;\n\n        if (this.isEqual(newVal, this.results)) {\n          return;\n        }\n\n        this.results = newVal;\n        self.dispatch('VaForm', 'Va@validateChange', {\n          name: self.name,\n          result: self.results\n        });\n      }\n    }\n  },\n  watch: {\n    current: {\n      handler: function handler(newVal, oldVal) {\n        this.valid(newVal);\n      },\n      immediate: true\n    },\n    vStatus: function vStatus(val) {\n      this.$emit('input', val);\n    }\n  },\n  methods: {\n    isEqual: function isEqual(a, b) {\n      var e = true;\n      var propsA = Object.keys(a);\n      var propsB = Object.keys(b);\n\n      if (propsA.length !== propsB.length) {\n        return false;\n      }\n\n      propsA.forEach(function (i) {\n        if (a[i]['validStatus'] !== b[i]['validStatus']) {\n          e = false;\n          return false;\n        }\n      });\n      return e;\n    },\n    setResult: function setResult(key, value) {\n      var o = Object.assign({}, this.results);\n      o[key] = value;\n      this._results = o;\n    },\n    valid: function valid(val) {\n      if (this.rules || type.isFunction(this.customValidate)) {\n        this.rulesValid(val);\n      }\n    },\n    rulesItemValid: function rulesItemValid(rule, value) {\n      var self = this;\n      var tip = rule.tip;\n      var type = rule.type;\n\n      switch (type) {\n        case 'required':\n          self.requiredValid(value, tip);\n          break;\n\n        case 'phone':\n          self.phoneValid(value, tip);\n          break;\n\n        case 'number':\n          self.numberValid(value, tip);\n          break;\n\n        case 'telephone':\n          self.telValid(value, tip);\n          break;\n\n        case 'email':\n          self.emailValid(value, tip);\n          break;\n      }\n\n      if (type.indexOf('maxlength') > -1) {\n        self.maxlengthValid(type, value, tip); // eslint-disable-next-line\n\n        return;\n      }\n\n      if (type.indexOf('minlength') > -1) {\n        self.minlengthValid(type, value, tip); // eslint-disable-next-line\n\n        return;\n      }\n    },\n    customValid: function customValid(val) {\n      this.setResult('customValidate', this.customValidate(val));\n    },\n    requiredValid: function requiredValid(val, tip) {\n      var self = this;\n      self._results = self._results || {};\n\n      if (type.isNullOrUndefined(val) || val.length === 0) {\n        self.setResult('requiredValid', {\n          validStatus: 'error',\n          tips: tip || self.getL('required')\n        });\n      } else {\n        self.setResult('requiredValid', {\n          validStatus: 'success',\n          tips: ''\n        });\n      }\n    },\n    maxlengthValid: function maxlengthValid(type, val, tip) {\n      var self = this;\n      var maxlength = type.split('=')[1] - 0;\n      self._results = self._results || {};\n\n      if (val) {\n        if (val.length > maxlength) {\n          self.setResult('maxlengthValid', {\n            validStatus: 'error',\n            tips: tip || self.getL('maxLength') + maxlength\n          });\n        } else {\n          self.setResult('maxlengthValid', {\n            validStatus: 'success',\n            tips: ''\n          });\n        }\n      }\n    },\n    minlengthValid: function minlengthValid(type, val, tip) {\n      var self = this;\n      var minlength = type.split('=')[1] - 0;\n      self._results = self._results || {};\n\n      if (val) {\n        if (val.length < minlength) {\n          self.setResult('minlengthValid', {\n            validStatus: 'error',\n            tips: tip || self.getL('minLength') + minlength\n          });\n        } else {\n          self.setResult('minlengthValid', {\n            validStatus: 'success',\n            tips: ''\n          });\n        }\n      }\n    },\n    rulesValid: function rulesValid(value) {\n      var self = this;\n      self.rules.forEach(function (val, index) {\n        self.rulesItemValid(val, value);\n      });\n\n      if (type.isFunction(self.customValidate)) {\n        self.customValid(value);\n      }\n    },\n    phoneValid: function phoneValid(value, tip) {\n      var rule = /^1\\d{10}$/;\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isPhoneValid', {\n          validStatus: 'success',\n          tips: ''\n        });\n      } else {\n        this.setResult('isPhoneValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('phone')\n        });\n      }\n    },\n    numberValid: function numberValid(value, tip) {\n      var rule = /^\\d*$/;\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isNumberValid', {\n          validStatus: 'success',\n          tips: ''\n        });\n      } else {\n        this.setResult('isNumberValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('number')\n        });\n      }\n    },\n    telValid: function telValid(value, tip) {\n      // eslint-disable-next-line\n      var rule = /^(([0\\+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/;\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isTelValid', {\n          validStatus: 'success',\n          tips: ''\n        });\n      } else {\n        this.setResult('isTelValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('telephone')\n        });\n      }\n    },\n    emailValid: function emailValid(value, tip) {\n      var rule = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isEmailValid', {\n          validStatus: 'success',\n          tips: ''\n        });\n      } else {\n        this.setResult('isEmailValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('email')\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["validate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"`${prefixCls}-err-tip`\" v-if=\"validate && tips\">\n    <va-icon type=\"exclamation-triangle\" color=\"#DE350B\"></va-icon>\n    {{tips}}\n  </div>\n</template>\n\n<script>\nimport type from './utils/type'\nimport events from './utils/events'\nimport localeMixin from './Mixin/localeMixin'\n\nexport default {\n  name: 'VaValidate',\n  mixins: [events, localeMixin('VaValidate')],\n  props: {\n    value: {\n      type: String\n    },\n    customValidate: {\n      type: Function\n    },\n    rules: {\n      type: Array\n    },\n    name: {\n      type: String\n    },\n    current: {\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      tips: '',\n      validate: false,\n      status: '',\n      vStatus: this.value,\n      results: {}\n    }\n  },\n  created () {\n    this.$on('Va@openValidate', (val) => {\n      this.validate = val\n      val ? this.vStatus = this.status : this.vStatus = ''\n    })\n  },\n  computed: {\n    _results: {\n      get () {\n        return this.resuts\n      },\n      set (val, oldVal) {\n        let self = this\n        let tips = ''\n        let status = ''\n\n        for (let key in val) {\n          let obj = val[key]\n          if (type.isObject(obj)) {\n            obj.tips ? tips += obj.tips + '  ' : ''\n            if (obj.validStatus !== 'success') {\n              status = 'error'\n            }\n          }\n        }\n\n        status !== 'error' ? status = 'success' : 0\n\n        self.status = status\n\n        if (self.validate) {\n          self.vStatus = self.status\n        }\n\n        let isvalid = true\n        self.tips = tips\n\n        for (let i in val) {\n          let validStatus = val[i]['validStatus']\n          if (validStatus === 'error') {\n            isvalid = false\n            break\n          }\n        }\n\n        let newVal = Object.assign({}, val)\n        newVal.isvalid = isvalid\n\n        if (this.isEqual(newVal, this.results)) {\n          return\n        }\n\n        this.results = newVal\n\n        self.dispatch('VaForm', 'Va@validateChange', {\n          name: self.name,\n          result: self.results\n        })\n      }\n    }\n  },\n  watch: {\n    current: {\n      handler (newVal, oldVal) {\n        this.valid(newVal)\n      },\n      immediate: true\n    },\n    vStatus (val) {\n      this.$emit('input', val)\n    }\n  },\n  methods: {\n    isEqual (a, b) {\n      let e = true\n      let propsA = Object.keys(a)\n      let propsB = Object.keys(b)\n\n      if (propsA.length !== propsB.length) {\n        return false\n      }\n\n      propsA.forEach(i => {\n        if (a[i]['validStatus'] !== b[i]['validStatus']) {\n          e = false\n          return false\n        }\n      })\n\n      return e\n    },\n    setResult (key, value) {\n      let o = Object.assign({}, this.results)\n      o[key] = value\n      this._results = o\n    },\n    valid (val) {\n      if (this.rules || type.isFunction(this.customValidate)) {\n        this.rulesValid(val)\n      }\n    },\n    rulesItemValid (rule, value) {\n      let self = this\n      let tip = rule.tip\n      let type = rule.type\n\n      switch (type) {\n        case 'required':\n          self.requiredValid(value, tip)\n          break\n        case 'phone':\n          self.phoneValid(value, tip)\n          break\n        case 'number':\n          self.numberValid(value, tip)\n          break\n        case 'telephone':\n          self.telValid(value, tip)\n          break\n        case 'email':\n          self.emailValid(value, tip)\n          break\n      }\n\n      if (type.indexOf('maxlength') > -1) {\n        self.maxlengthValid(type, value, tip)\n        // eslint-disable-next-line\n        return\n      }\n\n      if (type.indexOf('minlength') > -1) {\n        self.minlengthValid(type, value, tip)\n        // eslint-disable-next-line\n        return\n      }\n    },\n    customValid (val) {\n      this.setResult('customValidate', this.customValidate(val))\n    },\n    requiredValid (val, tip) {\n      let self = this\n\n      self._results = self._results || {}\n\n      if (type.isNullOrUndefined(val) || val.length === 0) {\n        self.setResult('requiredValid', {\n          validStatus: 'error',\n          tips: tip || self.getL('required')\n        })\n      } else {\n        self.setResult('requiredValid', {\n          validStatus: 'success',\n          tips: ''\n        })\n      }\n    },\n    maxlengthValid (type, val, tip) {\n      let self = this\n      let maxlength = type.split('=')[1] - 0\n\n      self._results = self._results || {}\n\n      if (val) {\n        if (val.length > maxlength) {\n          self.setResult('maxlengthValid', {\n            validStatus: 'error',\n            tips: tip || self.getL('maxLength') + maxlength\n          })\n        } else {\n          self.setResult('maxlengthValid', {\n            validStatus: 'success',\n            tips: ''\n          })\n        }\n      }\n    },\n    minlengthValid (type, val, tip) {\n      let self = this\n      let minlength = type.split('=')[1] - 0\n\n      self._results = self._results || {}\n\n      if (val) {\n        if (val.length < minlength) {\n          self.setResult('minlengthValid', {\n            validStatus: 'error',\n            tips: tip || self.getL('minLength') + minlength\n          })\n        } else {\n          self.setResult('minlengthValid', {\n            validStatus: 'success',\n            tips: ''\n          })\n        }\n      }\n    },\n    rulesValid (value) {\n      let self = this\n\n      self.rules.forEach((val, index) => {\n        self.rulesItemValid(val, value)\n      })\n\n      if (type.isFunction(self.customValidate)) {\n        self.customValid(value)\n      }\n    },\n    phoneValid (value, tip) {\n      let rule = /^1\\d{10}$/\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isPhoneValid', {\n          validStatus: 'success',\n          tips: ''\n        })\n      } else {\n        this.setResult('isPhoneValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('phone')\n        })\n      }\n    },\n    numberValid (value, tip) {\n      let rule = /^\\d*$/\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isNumberValid', {\n          validStatus: 'success',\n          tips: ''\n        })\n      } else {\n        this.setResult('isNumberValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('number')\n        })\n      }\n    },\n    telValid (value, tip) {\n      // eslint-disable-next-line\n      let rule = /^(([0\\+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isTelValid', {\n          validStatus: 'success',\n          tips: ''\n        })\n      } else {\n        this.setResult('isTelValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('telephone')\n        })\n      }\n    },\n    emailValid (value, tip) {\n      let rule = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\n\n      if (rule.test(value) || value === '') {\n        this.setResult('isEmailValid', {\n          validStatus: 'success',\n          tips: ''\n        })\n      } else {\n        this.setResult('isEmailValid', {\n          validStatus: 'error',\n          tips: tip || this.getL('email')\n        })\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src"}]}