{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Datepicker/VaDatepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Datepicker/VaDatepicker.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EventListener from '../utils/EventListener';\nimport inputMixin from '../Mixin/inputMixin';\nimport localeMixin from '../Mixin/localeMixin';\nimport format from '../utils/format';\nexport default {\n  name: 'VaDatepicker',\n  mixins: [inputMixin, localeMixin('VaDatepicker')],\n  props: {\n    value: {\n      type: String\n    },\n    format: {\n      type: String,\n      default: 'yyyy-MM-dd',\n      required: false,\n      note: 'The RFC2822/ISO date format in which to display the date in the input field. Ex: \\'MM/dd/yyyy\\''\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, the input cannot be changed with keyboard input'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, input is disabled'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    var currentValue = this.value;\n\n    if (typeof currentValue === 'undefined') {\n      this.$emit('input', null);\n      currentValue = null;\n    }\n\n    return {\n      currentValue: currentValue,\n      currMonth: 0,\n      currYear: 0,\n      today: '',\n      weekRange: [this.getL('sunday'), this.getL('monday'), this.getL('tuesday'), this.getL('wednesday'), this.getL('thursday'), this.getL('friday'), this.getL('saturday')],\n      dateRange: [],\n      decadeRange: [],\n      currDate: new Date(),\n      displayDayView: false,\n      displayMonthView: false,\n      displayYearView: false,\n      monthNames: [this.getL('january'), this.getL('february'), this.getL('march'), this.getL('april'), this.getL('may'), this.getL('june'), this.getL('july'), this.getL('august'), this.getL('september'), this.getL('october'), this.getL('november'), this.getL('december')]\n    };\n  },\n  watch: {\n    currDate: function currDate() {\n      this.getDateRange();\n    },\n    value: function value(val) {\n      if (this.inner) {\n        this.inner = false;\n        return;\n      }\n\n      this.inner = true;\n      this.currentValue = val || null;\n    },\n    currentValue: function currentValue(val) {\n      if (this.inner) {\n        this.inner = false;\n        return;\n      }\n\n      this.inner = true;\n      this.$emit('input', val);\n      this.$emit('change', this.currentValue);\n    }\n  },\n  methods: {\n    clean: function clean() {\n      this.currDate = new Date();\n      this.currYear = this.currDate.getFullYear();\n      this.currMonth = this.currDate.getMonth(); // this.currentValue = this.stringify(new Date())\n    },\n    monthClassObj: function monthClassObj(m) {\n      var prefixCls = this.prefixCls,\n          currentValue = this.currentValue,\n          monthNames = this.monthNames,\n          parse = this.parse,\n          currDate = this.currDate;\n      var klass = {};\n      klass[prefixCls + '-datepicker-dateRange-item-active'] = currentValue && parse(currentValue) && monthNames[parse(currentValue).getMonth()] === m && currDate.getFullYear() === parse(currentValue).getFullYear();\n      return klass;\n    },\n    yearClassObj: function yearClassObj(decade) {\n      var prefixCls = this.prefixCls,\n          currentValue = this.currentValue,\n          parse = this.parse;\n      var klass = {};\n      klass[prefixCls + '-datepicker-dateRange-item-active'] = currentValue && parse(currentValue) && parse(currentValue).getFullYear() === decade.text;\n      return klass;\n    },\n    close: function close() {\n      this.displayDayView = this.displayMonthView = this.displayYearView = false;\n    },\n    inputClick: function inputClick() {\n      if (this.disabled) return;\n\n      if (this.displayMonthView || this.displayYearView) {\n        this.displayDayView = false;\n      } else {\n        this.displayDayView = !this.displayDayView;\n      }\n    },\n    preNextDecadeClick: function preNextDecadeClick(flag) {\n      var year = this.currDate.getFullYear();\n      var months = this.currDate.getMonth();\n      var date = this.currDate.getDate();\n\n      if (flag === 0) {\n        this.currDate = new Date(year - 10, months, date);\n      } else {\n        this.currDate = new Date(year + 10, months, date);\n      }\n    },\n    preNextMonthClick: function preNextMonthClick(flag) {\n      var year = this.currDate.getFullYear();\n      var month = this.currDate.getMonth();\n      var date = this.currDate.getDate();\n\n      if (flag === 0) {\n        var preMonth = this.getYearMonth(year, month - 1);\n        this.currDate = new Date(preMonth.year, preMonth.month, date);\n        this.currMonth = preMonth.month;\n      } else {\n        var nextMonth = this.getYearMonth(year, month + 1);\n        this.currDate = new Date(nextMonth.year, nextMonth.month, date);\n        this.currMonth = nextMonth.month;\n      }\n    },\n    preNextYearClick: function preNextYearClick(flag) {\n      var year = this.currDate.getFullYear();\n      var months = this.currDate.getMonth();\n      var date = this.currDate.getDate();\n\n      if (flag === 0) {\n        this.currDate = new Date(year - 1, months, date);\n        this.currYear = year - 1; // console.log('currYear', this.currYear)\n      } else {\n        this.currDate = new Date(year + 1, months, date);\n        this.currYear = year + 1; // console.log('currYear', this.currYear)\n      }\n    },\n    yearSelect: function yearSelect(year) {\n      this.currYear = year;\n      this.displayYearView = false;\n      this.displayMonthView = true;\n      this.currDate = new Date(year, this.currDate.getMonth(), this.currDate.getDate());\n    },\n    daySelect: function daySelect(date, dayNumber, klass) {\n      // let {parse} = this\n      if (klass.indexOf(this.prefixCls + '-datepicker-item-disabled') > -1) {\n        return false;\n      } else {\n        if (this.currYear === 0) {\n          this.currYear = this.currDate.getFullYear();\n        }\n\n        if (this.currMonth === 0) {\n          this.currMonth = this.currDate.getMonth();\n        } // this.currDate = date\n\n\n        this.currDate = new Date(this.currYear, this.currMonth, dayNumber);\n        this.currentValue = this.stringify(this.currDate); // this.displayDayView = false\n      }\n    },\n    switchMonthView: function switchMonthView() {\n      this.displayDayView = false;\n      this.displayMonthView = true;\n    },\n    switchDecadeView: function switchDecadeView() {\n      this.displayMonthView = false;\n      this.displayYearView = true;\n    },\n    monthSelect: function monthSelect(index) {\n      this.currMonth = index;\n      this.displayMonthView = false;\n      this.displayDayView = true;\n      this.currDate = new Date(this.currDate.getFullYear(), index, this.currDate.getDate());\n    },\n    getYearMonth: function getYearMonth(year, month) {\n      if (month > 11) {\n        year++;\n        month = 0;\n      } else if (month < 0) {\n        year--;\n        month = 11;\n      }\n\n      return {\n        year: year,\n        month: month\n      };\n    },\n    stringifyDecadeHeader: function stringifyDecadeHeader(date) {\n      var yearStr = date.getFullYear().toString();\n      var firstYearOfDecade = yearStr.substring(0, yearStr.length - 1) + 0;\n      var lastYearOfDecade = parseInt(firstYearOfDecade, 10) + 10;\n      return firstYearOfDecade + '-' + lastYearOfDecade;\n    },\n    stringifyDayHeader: function stringifyDayHeader(date) {\n      return this.monthNames[date.getMonth()] + ' ' + date.getFullYear();\n    },\n    stringifyYearHeader: function stringifyYearHeader(date) {\n      return date.getFullYear();\n    },\n    parseMonth: function parseMonth(date) {\n      return this.monthNames[date.getMonth()];\n    },\n    stringify: function stringify(date) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.format;\n      if (isNaN(date.getFullYear())) return '';\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var day = date.getDate();\n      return format.replace(/yyyy/g, year).replace(/MMMM/g, month).replace(/MMM/g, month).replace(/MM/g, ('0' + month).slice(-2)).replace(/dd/g, ('0' + day).slice(-2)) // .replace(/yy/g, year)\n      .replace(/M(?!a)/g, month).replace(/d/g, day);\n    },\n    parse: function parse(str) {\n      // const date = new Date(format.dateParse(str, 'YYYY-MM-DD'))\n      var date = new Date(format.dateParse(str, this.format));\n      return isNaN(date.getFullYear()) ? null : date;\n    },\n    getDayCount: function getDayCount(year, month) {\n      var dict = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n      if (month === 1) {\n        if (year % 400 === 0 || year % 4 === 0 && year % 100 !== 0) {\n          return 29;\n        }\n\n        return 28;\n      }\n\n      return dict[month];\n    },\n    getDateRange: function getDateRange() {\n      this.dateRange = [];\n      this.decadeRange = [];\n      var time = {\n        year: this.currDate.getFullYear(),\n        month: this.currDate.getMonth(),\n        day: this.currDate.getDate()\n      };\n      var yearStr = time.year.toString();\n      var firstYearOfDecade = yearStr.substring(0, yearStr.length - 1) + 0 - 1;\n\n      for (var i = 0; i < 12; i++) {\n        this.decadeRange.push({\n          text: firstYearOfDecade + i\n        });\n      }\n\n      var currMonthFirstDay = new Date(time.year, time.month, 1);\n      var firstDayWeek = currMonthFirstDay.getDay() + 1;\n\n      if (firstDayWeek === 0) {\n        firstDayWeek = 7;\n      }\n\n      var dayCount = this.getDayCount(time.year, time.month);\n\n      if (firstDayWeek > 1) {\n        var preMonth = this.getYearMonth(time.year, time.month - 1);\n        var prevMonthDayCount = this.getDayCount(preMonth.year, preMonth.month);\n\n        for (var _i = 1; _i < firstDayWeek; _i++) {\n          var dayText = prevMonthDayCount - firstDayWeek + _i + 1;\n          this.dateRange.push({\n            text: dayText,\n            date: new Date(preMonth.year, preMonth.month, dayText),\n            sclass: this.prefixCls + '-datepicker-item-gray'\n          });\n        }\n      }\n\n      time.day = time.day;\n\n      for (var _i2 = 1; _i2 <= dayCount; _i2++) {\n        var date = new Date(time.year, time.month, _i2); // const week = date.getDay()\n\n        var sclass = '';\n\n        if (_i2 === time.day) {\n          if (this.currentValue) {\n            var valueDate = this.parse(this.currentValue);\n\n            if (valueDate) {\n              if (valueDate.getFullYear() === time.year && valueDate.getMonth() === time.month) {\n                sclass = this.prefixCls + '-datepicker-dateRange-item-active';\n              }\n            }\n          }\n        }\n\n        this.dateRange.push({\n          text: _i2,\n          date: date,\n          sclass: sclass\n        });\n      }\n\n      if (this.dateRange.length < 42) {\n        var nextMonthNeed = 42 - this.dateRange.length;\n        var nextMonth = this.getYearMonth(time.year, time.month + 1);\n\n        for (var _i3 = 1; _i3 <= nextMonthNeed; _i3++) {\n          this.dateRange.push({\n            text: _i3,\n            date: new Date(nextMonth.year, nextMonth.month, _i3),\n            sclass: this.prefixCls + '-datepicker-item-gray'\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.today = this.stringify(new Date());\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.currDate = this.parse(this.currentValue) || this.parse(new Date());\n    this._closeEvent = EventListener.listen(window, 'click', function (e) {\n      if (!_this.$el.contains(e.target)) _this.close();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this._closeEvent) this._closeEvent.remove();\n  }\n};",{"version":3,"sources":["VaDatepicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"`${prefixCls}-datepicker`\">\n\n    <va-input\n      :width=\"width\"\n      :name=\"name\"\n      :rules=\"rules\"\n      :placeholder=\"placeholder\"\n      :custom-validate=\"customValidate\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :show-clean=\"true\"\n      icon=\"calendar-alt\"\n      @clean=\"clean\"\n      @click.native=\"inputClick\"\n      v-model=\"currentValue\">\n    </va-input>\n\n    <transition name=\"fadeDown\">\n      <div :class=\"`${prefixCls}-datepicker-popup`\" v-show =\"displayDayView\" v-va-position=\"displayDayView\">\n        <div :class=\"`${prefixCls}-datepicker-inner`\">\n          <div :class=\"`${prefixCls}-datepicker-body`\">\n            <div :class=\"`${prefixCls}-datepicker-ctrl`\">\n              <span\n                tabindex=\"0\"\n                :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-preBtn`\"\n                @click=\"preNextMonthClick(0)\"\n                v-on:keyup.enter=\"preNextMonthClick(0)\">\n                <va-icon type=\"arrow-left\"></va-icon>\n              </span>\n              <p\n                @click=\"switchMonthView\"\n                tabindex=\"0\"\n                v-on:keyup.enter=\"switchMonthView\">{{stringifyDayHeader(currDate)}}</p>\n              <span\n                tabindex=\"0\"\n                :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-nextBtn`\"\n                @click=\"preNextMonthClick(1)\"\n                v-on:keyup.enter=\"preNextMonthClick(1)\">\n                <va-icon type=\"arrow-right\"></va-icon>\n              </span>\n            </div>\n            <div :class=\"`${prefixCls}-datepicker-weekRange`\">\n              <span v-for=\"(w, index) in weekRange\" :key=\"index\">{{w}}</span>\n            </div>\n            <div :class=\"`${prefixCls}-datepicker-dateRange`\">\n              <span\n                v-for=\"(d, index) in dateRange\" :class=\"d.sclass\"\n                @click=\"daySelect(d.date, d.text, d.sclass)\"\n                :key=\"index\"\n                tabindex=\"0\"\n                v-on:keyup.enter=\"daySelect(d.date, d.text, d.sclass)\">{{d.text}}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <transition name=\"fadeDown\">\n      <div :class=\"`${prefixCls}-datepicker-popup`\" v-show =\"displayMonthView\" v-va-position=\"displayMonthView\">\n        <div :class=\"`${prefixCls}-datepicker-inner`\">\n          <div :class=\"`${prefixCls}-datepicker-body`\">\n            <div :class=\"`${prefixCls}-datepicker-ctrl`\">\n            <span\n              :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-preBtn`\"\n              @click=\"preNextYearClick(0)\"\n              tabindex=\"0\"\n              v-on:keyup.enter=\"preNextYearClick(0)\">\n              <va-icon type=\"arrow-left\"></va-icon>\n            </span>\n            <p\n              @click=\"switchDecadeView\"\n              tabindex=\"0\"\n              v-on:keyup.enter=\"switchDecadeView\">{{stringifyYearHeader(currDate)}}</p>\n            <span\n              :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-nextBtn`\"\n              @click=\"preNextYearClick(1)\"\n              tabindex=\"0\"\n              v-on:keyup.enter=\"preNextYearClick(1)\">\n              <va-icon type=\"arrow-right\"></va-icon>\n            </span>\n            </div>\n            <div :class=\"`${prefixCls}-datepicker-monthRange`\">\n              <template v-for=\"(m, index) in monthNames\">\n                <span\n                  :class=\"monthClassObj(m)\"\n                  :key=\"index\"\n                  tabindex=\"0\"\n                  v-on:keyup.enter=\"monthSelect(index)\"\n                  @click=\"monthSelect(index)\">{{m}}</span>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <transition name=\"fadeDown\">\n      <div :class=\"`${prefixCls}-datepicker-popup`\" v-show =\"displayYearView\" v-va-position=\"displayYearView\">\n        <div :class=\"`${prefixCls}-datepicker-inner`\">\n          <div :class=\"`${prefixCls}-datepicker-body`\">\n            <div :class=\"`${prefixCls}-datepicker-ctrl`\">\n              <span\n                :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-preBtn`\"\n                @click=\"preNextDecadeClick(0)\"\n                tabindex=\"0\"\n                v-on:keyup.enter=\"preNextDecadeClick(0)\">\n                <va-icon type=\"arrow-left\"></va-icon>\n              </span>\n              <span\n                :class=\"`${prefixCls}-month-btn ${prefixCls}-datepicker-nextBtn`\"\n                @click=\"preNextDecadeClick(1)\"\n                tabindex=\"0\"\n                v-on:keyup.enter=\"preNextDecadeClick(1)\">\n                <va-icon type=\"arrow-right\"></va-icon>\n              </span>\n              <p>\n              {{stringifyDecadeHeader(currDate)}}\n              </p>\n            </div>\n            <div :class=\"`${prefixCls}-datepicker-monthRange ${prefixCls}-datepicker-decadeRange`\">\n              <template v-for=\"(decade, index) in decadeRange\">\n                <span\n                  :class=\"yearClassObj(decade)\"\n                  :key=\"index\"\n                  tabindex=\"0\"\n                  v-on:keyup.enter=\"yearSelect(decade.text)\"\n                  @click.stop=\"yearSelect(decade.text)\">\n                  {{decade.text}}\n                </span>\n              </template>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport EventListener from '../utils/EventListener'\nimport inputMixin from '../Mixin/inputMixin'\nimport localeMixin from '../Mixin/localeMixin'\nimport format from '../utils/format'\n\nexport default {\n  name: 'VaDatepicker',\n  mixins: [inputMixin, localeMixin('VaDatepicker')],\n  props: {\n    value: {\n      type: String\n    },\n    format: {\n      type: String,\n      default: 'yyyy-MM-dd',\n      required: false,\n      note: 'The RFC2822/ISO date format in which to display the date in the input field. Ex: \\'MM/dd/yyyy\\''\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, the input cannot be changed with keyboard input'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, input is disabled'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let currentValue = this.value\n    if (typeof currentValue === 'undefined') {\n      this.$emit('input', null)\n      currentValue = null\n    }\n    return {\n      currentValue,\n      currMonth: 0,\n      currYear: 0,\n      today: '',\n      weekRange: [\n        this.getL('sunday'),\n        this.getL('monday'),\n        this.getL('tuesday'),\n        this.getL('wednesday'),\n        this.getL('thursday'),\n        this.getL('friday'),\n        this.getL('saturday')\n      ],\n      dateRange: [],\n      decadeRange: [],\n      currDate: new Date(),\n      displayDayView: false,\n      displayMonthView: false,\n      displayYearView: false,\n      monthNames: [\n        this.getL('january'),\n        this.getL('february'),\n        this.getL('march'),\n        this.getL('april'),\n        this.getL('may'),\n        this.getL('june'),\n        this.getL('july'),\n        this.getL('august'),\n        this.getL('september'),\n        this.getL('october'),\n        this.getL('november'),\n        this.getL('december')\n      ]\n    }\n  },\n  watch: {\n    currDate () {\n      this.getDateRange()\n    },\n    value (val) {\n      if (this.inner) {\n        this.inner = false\n        return\n      }\n      this.inner = true\n      this.currentValue = val || null\n    },\n    currentValue (val) {\n      if (this.inner) {\n        this.inner = false\n        return\n      }\n      this.inner = true\n      this.$emit('input', val)\n      this.$emit('change', this.currentValue)\n    }\n  },\n  methods: {\n    clean () {\n      this.currDate = new Date()\n      this.currYear = this.currDate.getFullYear()\n      this.currMonth = this.currDate.getMonth()\n      // this.currentValue = this.stringify(new Date())\n    },\n    monthClassObj (m) {\n      let {prefixCls, currentValue, monthNames, parse, currDate} = this\n      let klass = {}\n\n      klass[prefixCls + '-datepicker-dateRange-item-active'] =\n        currentValue && parse(currentValue) && monthNames[parse(currentValue).getMonth()] === m && currDate.getFullYear() === parse(currentValue).getFullYear()\n\n      return klass\n    },\n    yearClassObj (decade) {\n      let {prefixCls, currentValue, parse} = this\n      let klass = {}\n\n      klass[prefixCls + '-datepicker-dateRange-item-active'] =\n        currentValue && parse(currentValue) && parse(currentValue).getFullYear() === decade.text\n\n      return klass\n    },\n    close () {\n      this.displayDayView = this.displayMonthView = this.displayYearView = false\n    },\n    inputClick () {\n      if (this.disabled) return\n      if (this.displayMonthView || this.displayYearView) {\n        this.displayDayView = false\n      } else {\n        this.displayDayView = !this.displayDayView\n      }\n    },\n    preNextDecadeClick (flag) {\n      const year = this.currDate.getFullYear()\n      const months = this.currDate.getMonth()\n      const date = this.currDate.getDate()\n\n      if (flag === 0) {\n        this.currDate = new Date(year - 10, months, date)\n      } else {\n        this.currDate = new Date(year + 10, months, date)\n      }\n    },\n    preNextMonthClick (flag) {\n      const year = this.currDate.getFullYear()\n      const month = this.currDate.getMonth()\n      const date = this.currDate.getDate()\n\n      if (flag === 0) {\n        const preMonth = this.getYearMonth(year, month - 1)\n        this.currDate = new Date(preMonth.year, preMonth.month, date)\n        this.currMonth = preMonth.month\n      } else {\n        const nextMonth = this.getYearMonth(year, month + 1)\n        this.currDate = new Date(nextMonth.year, nextMonth.month, date)\n        this.currMonth = nextMonth.month\n      }\n    },\n    preNextYearClick (flag) {\n      const year = this.currDate.getFullYear()\n      const months = this.currDate.getMonth()\n      const date = this.currDate.getDate()\n\n      if (flag === 0) {\n        this.currDate = new Date(year - 1, months, date)\n        this.currYear = year - 1\n        // console.log('currYear', this.currYear)\n      } else {\n        this.currDate = new Date(year + 1, months, date)\n        this.currYear = year + 1\n        // console.log('currYear', this.currYear)\n      }\n    },\n    yearSelect (year) {\n      this.currYear = year\n      this.displayYearView = false\n      this.displayMonthView = true\n      this.currDate = new Date(year, this.currDate.getMonth(), this.currDate.getDate())\n    },\n    daySelect (date, dayNumber, klass) {\n      // let {parse} = this\n      if (klass.indexOf(this.prefixCls + '-datepicker-item-disabled') > -1) {\n        return false\n      } else {\n        if (this.currYear === 0) {\n          this.currYear = this.currDate.getFullYear()\n        }\n\n        if (this.currMonth === 0) {\n          this.currMonth = this.currDate.getMonth()\n        }\n\n        // this.currDate = date\n        this.currDate = new Date(this.currYear, this.currMonth, dayNumber)\n        this.currentValue = this.stringify(this.currDate)\n        // this.displayDayView = false\n      }\n    },\n    switchMonthView () {\n      this.displayDayView = false\n      this.displayMonthView = true\n    },\n    switchDecadeView () {\n      this.displayMonthView = false\n      this.displayYearView = true\n    },\n    monthSelect (index) {\n      this.currMonth = index\n      this.displayMonthView = false\n      this.displayDayView = true\n      this.currDate = new Date(this.currDate.getFullYear(), index, this.currDate.getDate())\n    },\n    getYearMonth (year, month) {\n      if (month > 11) {\n        year++\n        month = 0\n      } else if (month < 0) {\n        year--\n        month = 11\n      }\n\n      return {year: year, month: month}\n    },\n    stringifyDecadeHeader (date) {\n      const yearStr = date.getFullYear().toString()\n      const firstYearOfDecade = yearStr.substring(0, yearStr.length - 1) + 0\n      const lastYearOfDecade = parseInt(firstYearOfDecade, 10) + 10\n\n      return firstYearOfDecade + '-' + lastYearOfDecade\n    },\n    stringifyDayHeader (date) {\n      return this.monthNames[date.getMonth()] + ' ' + date.getFullYear()\n    },\n    stringifyYearHeader (date) {\n      return date.getFullYear()\n    },\n    parseMonth (date) {\n      return this.monthNames[date.getMonth()]\n    },\n    stringify (date, format = this.format) {\n      if (isNaN(date.getFullYear())) return ''\n\n      const year = date.getFullYear()\n      const month = date.getMonth() + 1\n      const day = date.getDate()\n\n      return format\n        .replace(/yyyy/g, year)\n        .replace(/MMMM/g, month)\n        .replace(/MMM/g, month)\n        .replace(/MM/g, ('0' + month).slice(-2))\n        .replace(/dd/g, ('0' + day).slice(-2))\n        // .replace(/yy/g, year)\n        .replace(/M(?!a)/g, month)\n        .replace(/d/g, day)\n    },\n    parse (str) {\n      // const date = new Date(format.dateParse(str, 'YYYY-MM-DD'))\n      const date = new Date(format.dateParse(str, this.format))\n      return isNaN(date.getFullYear()) ? null : date\n    },\n    getDayCount (year, month) {\n      const dict = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n      if (month === 1) {\n        if ((year % 400 === 0) || (year % 4 === 0 && year % 100 !== 0)) {\n          return 29\n        }\n        return 28\n      }\n\n      return dict[month]\n    },\n    getDateRange () {\n      this.dateRange = []\n      this.decadeRange = []\n      const time = {\n        year: this.currDate.getFullYear(),\n        month: this.currDate.getMonth(),\n        day: this.currDate.getDate()\n      }\n      const yearStr = time.year.toString()\n      const firstYearOfDecade = (yearStr.substring(0, yearStr.length - 1) + 0) - 1\n      for (let i = 0; i < 12; i++) {\n        this.decadeRange.push({\n          text: firstYearOfDecade + i\n        })\n      }\n\n      const currMonthFirstDay = new Date(time.year, time.month, 1)\n      let firstDayWeek = currMonthFirstDay.getDay() + 1\n      if (firstDayWeek === 0) {\n        firstDayWeek = 7\n      }\n      const dayCount = this.getDayCount(time.year, time.month)\n      if (firstDayWeek > 1) {\n        const preMonth = this.getYearMonth(time.year, time.month - 1)\n        const prevMonthDayCount = this.getDayCount(preMonth.year, preMonth.month)\n        for (let i = 1; i < firstDayWeek; i++) {\n          const dayText = prevMonthDayCount - firstDayWeek + i + 1\n          this.dateRange.push({\n            text: dayText,\n            date: new Date(preMonth.year, preMonth.month, dayText),\n            sclass: this.prefixCls + '-datepicker-item-gray'\n          })\n        }\n      }\n\n      time.day = time.day\n      for (let i = 1; i <= dayCount; i++) {\n        const date = new Date(time.year, time.month, i)\n        // const week = date.getDay()\n        let sclass = ''\n\n        if (i === time.day) {\n          if (this.currentValue) {\n            const valueDate = this.parse(this.currentValue)\n\n            if (valueDate) {\n              if (valueDate.getFullYear() === time.year && valueDate.getMonth() === time.month) {\n                sclass = this.prefixCls + '-datepicker-dateRange-item-active'\n              }\n            }\n          }\n        }\n        this.dateRange.push({\n          text: i,\n          date: date,\n          sclass: sclass\n        })\n      }\n\n      if (this.dateRange.length < 42) {\n        const nextMonthNeed = 42 - this.dateRange.length\n        const nextMonth = this.getYearMonth(time.year, time.month + 1)\n\n        for (let i = 1; i <= nextMonthNeed; i++) {\n          this.dateRange.push({\n            text: i,\n            date: new Date(nextMonth.year, nextMonth.month, i),\n            sclass: this.prefixCls + '-datepicker-item-gray'\n          })\n        }\n      }\n    }\n  },\n  created () {\n    this.today = this.stringify(new Date())\n  },\n  mounted () {\n    this.currDate = this.parse(this.currentValue) || this.parse(new Date())\n    this._closeEvent = EventListener.listen(window, 'click', (e) => {\n      if (!this.$el.contains(e.target)) this.close()\n    })\n  },\n  beforeDestroy () {\n    if (this._closeEvent) this._closeEvent.remove()\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Datepicker"}]}