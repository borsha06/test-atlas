{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/AnimQueue/VaAnimQueue.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/AnimQueue/VaAnimQueue.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.is-array\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport velocity from 'velocity-animate';\nimport ANIM_TYPES from './animTypes';\nvar BackEase = {\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n};\n\nfunction transformArguments(arg) {\n  if (Array.isArray(arg) && arg.length === 2) {\n    return arg;\n  }\n\n  return [arg, arg];\n}\n\nexport default {\n  name: 'VaAnimQueue',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    tag: {\n      type: String,\n      default: 'div',\n      validator: function validator(v) {\n        return ['div', 'form', 'ul', 'ol'].includes(v);\n      },\n      required: false,\n      note: \"The tag to render around the animation queue.\\nThis is helpful when you want to animate items in a list, but not the entire list itself.\\nFor example, in this kind of scenario, you could pass tag=\\\"ul\\\" or tag=\\\"ol\\\".\"\n    },\n    interval: {\n      type: [Number, Array],\n      default: 100,\n      required: false\n    },\n    duration: {\n      type: [Number, Array, String],\n      default: 500,\n      required: false,\n      note: 'The speed of the animation'\n    },\n    delay: {\n      type: [Number, Array, String],\n      default: 0,\n      required: false,\n      note: 'The amount of time (ms) to wait between animating each node'\n    },\n    type: {\n      type: [String, Array],\n      default: 'right',\n      required: false,\n      note: \"The type of enter and leave animation.\\nWhen passing an array, the first item is the enter animation and the second is the leave animation.\"\n    },\n    animConfig: {\n      type: [String, Array],\n      required: false\n    },\n    ease: {\n      type: [String, Array],\n      default: 'easeOutQuart',\n      required: false\n    },\n    watchValue: {\n      type: [String, Array],\n      required: false\n    },\n    leaveReverse: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, during the leave animation the nodes will be transitioned out from last to first, instead of from first to last.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      animatingClassName: [],\n      originChildren: [],\n      children: [],\n      childrenShow: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var prefixCls = this.prefixCls;\n    this.animatingClassName = [prefixCls + '-anim-queue-entering', prefixCls + '-anim-queue-leaving']; // this.$nextTick(() => {\n\n    this.keysAnimating = [];\n\n    var freeChild = this._getFreeKeysAndChild();\n\n    this.keysAnimating = Object.keys(freeChild);\n    this.children = freeChild;\n    this.originChildren = freeChild;\n    this.$on('VaAnimQueueHidden', function () {\n      _this._hiddenVelocityNode();\n\n      return true;\n    });\n\n    if (this.show) {\n      this._animateEnter();\n    } // })\n\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.originChildren && this.originChildren.length > 0) {\n      this.originChildren.forEach(function (child) {\n        velocity(child, 'stop');\n      });\n    }\n  },\n  computed: {\n    usedSlot: function usedSlot() {\n      switch (this.tag) {\n        case 'div':\n          return this.$slots.divslot;\n\n        case 'ul':\n          return this.$slots.ulslot;\n\n        case 'ol':\n          return this.$slots.olslot;\n\n        case 'form':\n          return this.$slots.formslot;\n\n        default:\n          return false;\n      }\n    }\n  },\n  isActHideAnimate: false,\n  watch: {\n    show: function show(value) {\n      var _this2 = this;\n\n      if (value) {\n        this.isActHideAnimate = true;\n        this.$nextTick(function () {\n          _this2.$emit('VaAnimQueueHidden');\n\n          setTimeout(function () {\n            _this2._animateEnter();\n\n            _this2.isActHideAnimate = false;\n          }, 50);\n        });\n      } else {\n        this._animateLeave(function () {\n          if (!_this2.isActHideAnimate) {\n            _this2.$emit('VaAnimQueueHidden');\n          }\n        });\n      }\n    },\n    watchValue: function watchValue(newValue, oldValue) {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        var shouldEnterChild = [];\n        var shouldLeaveChild = [];\n\n        var newChild = _this3._getKeysChild(); // const nodeMap = {}\n\n\n        for (var i = 0; i < _this3.children.length; i++) {\n          var curChild = _this3.children[i];\n          var hasRemove = true;\n\n          for (var j = 0; j < newChild.length; j++) {\n            if (curChild.key === newChild[j].key) {\n              hasRemove = false;\n            }\n          }\n\n          if (hasRemove) {\n            shouldLeaveChild.push(curChild);\n          }\n        }\n\n        for (var _i = 0; _i < newChild.length; _i++) {\n          var _curChild = newChild[_i];\n          var hasAdd = true;\n\n          for (var _j = 0; _j < _this3.children.length; _j++) {\n            if (_curChild.key === _this3.children[_j].key) {\n              hasAdd = false;\n            }\n          }\n\n          if (hasAdd) {\n            shouldEnterChild.push(_curChild);\n          }\n        }\n\n        shouldEnterChild.forEach(_this3._performEnter);\n        shouldLeaveChild.forEach(_this3._performLeave);\n        _this3.children = newChild;\n      });\n    }\n  },\n  methods: {\n    _getKeysChild: function _getKeysChild() {\n      var ret = [];\n      var keyNodes = Array.prototype.slice.call(this.$el.querySelectorAll('[anim-key]'));\n      keyNodes.forEach(function (child) {\n        if (!child) {\n          return;\n        }\n\n        child.setAttribute('__scope_key__', 1);\n        var key = child.getAttribute('anim-key');\n\n        if (!key) {\n          return;\n        }\n\n        ret.push({\n          key: key,\n          el: child\n        });\n      });\n      return ret;\n    },\n    _getFreeKeysAndChild: function _getFreeKeysAndChild() {\n      var ret = [];\n      var keyNodes = Array.prototype.slice.call(this.$el.querySelectorAll('[anim-key]:not([__scope_key__])'));\n      keyNodes.forEach(function (child) {\n        if (!child) {\n          return;\n        }\n\n        child.setAttribute('__scope_key__', 1);\n        var key = child.getAttribute('anim-key');\n\n        if (!key) {\n          return;\n        }\n\n        ret.push({\n          key: key,\n          el: child\n        });\n      });\n      return ret;\n    },\n    _getVelocityConfig: function _getVelocityConfig(index) {\n      if (this.animConfig) {\n        return transformArguments(this.animConfig)[index];\n      }\n\n      return ANIM_TYPES[transformArguments(this.type)[index]];\n    },\n    _getVelocityEnterConfig: function _getVelocityEnterConfig() {\n      return this._getVelocityConfig(0);\n    },\n    _getVelocityLeaveConfig: function _getVelocityLeaveConfig() {\n      var config = this._getVelocityConfig(1);\n\n      var ret = {};\n      Object.keys(config).forEach(function (key) {\n        if (Array.isArray(config[key])) {\n          ret[key] = Array.prototype.slice.call(config[key]).reverse();\n        } else {\n          ret[key] = config[key];\n        }\n      });\n      return ret;\n    },\n    _getVelocityEasing: function _getVelocityEasing() {\n      return transformArguments(this.ease).map(function (easeName) {\n        if (typeof easeName === 'string') {\n          return BackEase[easeName] || easeName;\n        }\n      });\n    },\n    _hiddenVelocityNode: function _hiddenVelocityNode() {\n      this.children.forEach(function (item, i) {\n        var node = item.el;\n\n        if (!node) {\n          return;\n        }\n\n        node.style.visibility = 'hidden';\n        velocity(node, 'stop');\n      });\n    },\n    _animateEnter: function _animateEnter() {\n      this.children.forEach(this._performEnter);\n    },\n    _performEnter: function _performEnter(item, i) {\n      var _this4 = this;\n\n      var node = item.el;\n      var key = item.key;\n\n      if (!node) {\n        return;\n      }\n\n      var interval = parseInt(transformArguments(this.interval)[0]);\n      var delay = parseInt(transformArguments(this.delay)[0]);\n      var duration = parseInt(transformArguments(this.duration)[0]);\n      node.style.visibility = 'hidden';\n      velocity(node, 'stop');\n      velocity(node, this._getVelocityEnterConfig('enter'), {\n        delay: interval * i * delay / 100,\n        duration: duration,\n        easing: this._getVelocityEasing()[0],\n        visibility: 'visible',\n        begin: function begin(elements) {\n          _this4._enterBegin(key, elements);\n\n          if (node.__vue__) {\n            var _enterFn = node.__vue__._animateEnter;\n            _enterFn && _enterFn();\n            var children = node.__vue__.$children;\n            children.forEach(function (item) {\n              item._animateEnter && item._animateEnter();\n            });\n          }\n        },\n        complete: this._enterComplete.bind(this, key)\n      });\n    },\n    _animateLeave: function _animateLeave(done) {\n      var _this5 = this;\n\n      this.children.forEach(function (item, i) {\n        _this5._performLeave(item, i, done);\n      });\n    },\n    _performLeave: function _performLeave(item, i, done) {\n      var _this6 = this;\n\n      var node = item.el;\n      var key = item.key;\n\n      if (!node) {\n        return;\n      }\n\n      var interval = parseInt(transformArguments(this.interval)[1]);\n      var delay = parseInt(transformArguments(this.delay)[1]);\n      var duration = parseInt(transformArguments(this.duration)[1]);\n      var order = this.leaveReverse ? this.children.length - i - 1 : i;\n      velocity(node, 'stop');\n      velocity(node, this._getVelocityLeaveConfig('leave'), {\n        delay: interval * order + delay,\n        duration: duration,\n        easing: this._getVelocityEasing()[1],\n        begin: this._leaveBegin.bind(this),\n        complete: function complete(elements) {\n          _this6._leaveComplete(key, elements);\n\n          var len = _this6.children.length;\n\n          if (i === len - 1) {\n            done && done();\n          }\n        }\n      });\n    },\n    _enterBegin: function _enterBegin(key, elements) {\n      var self = this;\n\n      if (this.keysAnimating.indexOf(key) >= 0) {\n        this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1);\n      }\n\n      elements.forEach(function (elem) {\n        elem.className = elem.className.replace(self.animatingClassName[1], '').trim();\n        elem.className += ' ' + self.animatingClassName[0];\n      });\n    },\n    _enterComplete: function _enterComplete(key, elements) {\n      var self = this;\n\n      if (this.keysAnimating.indexOf(key) >= 0) {\n        this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1);\n      }\n\n      elements.forEach(function (elem) {\n        elem.className = elem.className.replace(self.animatingClassName[0], '').trim();\n      });\n    },\n    _leaveBegin: function _leaveBegin(elements) {\n      var self = this;\n      elements.forEach(function (elem) {\n        elem.className = elem.className.replace(self.animatingClassName[0], '').trim();\n        elem.className += ' ' + self.animatingClassName[1];\n      });\n    },\n    _leaveComplete: function _leaveComplete(key, elements) {\n      var self = this;\n\n      if (this.keysAnimating.indexOf(key) < 0) {\n        return;\n      }\n\n      this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1);\n      elements.forEach(function (elem) {\n        elem.className = elem.className.replace(self.animatingClassName[1], '').trim();\n      });\n    }\n  }\n};",{"version":3,"sources":["VaAnimQueue.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div v-if=\"tag === 'div'\">\n      <slot/>\n    </div>\n    <ul v-if=\"tag === 'ul'\">\n      <slot/>\n    </ul>\n    <ol v-if=\"tag === 'ol'\">\n      <slot/>\n    </ol>\n    <form v-if=\"tag === 'form'\">\n      <slot/>\n    </form>\n  </div>\n</template>\n\n<script>\nimport velocity from 'velocity-animate'\nimport ANIM_TYPES from './animTypes'\n\nconst BackEase = {\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n}\n\nfunction transformArguments (arg) {\n  if (Array.isArray(arg) && arg.length === 2) {\n    return arg\n  }\n  return [arg, arg]\n}\n\nexport default {\n  name: 'VaAnimQueue',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    tag: {\n      type: String,\n      default: 'div',\n      validator (v) {\n        return [\n          'div',\n          'form',\n          'ul',\n          'ol'\n        ].includes(v)\n      },\n      required: false,\n      note: `The tag to render around the animation queue.\nThis is helpful when you want to animate items in a list, but not the entire list itself.\nFor example, in this kind of scenario, you could pass tag=\"ul\" or tag=\"ol\".`\n    },\n    interval: {\n      type: [Number, Array],\n      default: 100,\n      required: false\n    },\n    duration: {\n      type: [Number, Array, String],\n      default: 500,\n      required: false,\n      note: 'The speed of the animation'\n    },\n    delay: {\n      type: [Number, Array, String],\n      default: 0,\n      required: false,\n      note: 'The amount of time (ms) to wait between animating each node'\n    },\n    type: {\n      type: [String, Array],\n      default: 'right',\n      required: false,\n      note: `The type of enter and leave animation.\nWhen passing an array, the first item is the enter animation and the second is the leave animation.`\n    },\n    animConfig: {\n      type: [String, Array],\n      required: false\n    },\n    ease: {\n      type: [String, Array],\n      default: 'easeOutQuart',\n      required: false\n    },\n    watchValue: {\n      type: [String, Array],\n      required: false\n    },\n    leaveReverse: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, during the leave animation the nodes will be transitioned out from last to first, instead of from first to last.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      animatingClassName: [],\n      originChildren: [],\n      children: [],\n      childrenShow: {}\n    }\n  },\n  mounted () {\n    let {prefixCls} = this\n    this.animatingClassName = [prefixCls + '-anim-queue-entering', prefixCls + '-anim-queue-leaving']\n\n    // this.$nextTick(() => {\n    this.keysAnimating = []\n    const freeChild = this._getFreeKeysAndChild()\n    this.keysAnimating = Object.keys(freeChild)\n    this.children = freeChild\n    this.originChildren = freeChild\n\n    this.$on('VaAnimQueueHidden', () => {\n      this._hiddenVelocityNode()\n      return true\n    })\n\n    if (this.show) {\n      this._animateEnter()\n    }\n    // })\n  },\n  beforeDestroy () {\n    if (this.originChildren && this.originChildren.length > 0) {\n      this.originChildren.forEach(child => {\n        velocity(child, 'stop')\n      })\n    }\n  },\n  computed: {\n    usedSlot () {\n      switch (this.tag) {\n        case 'div':\n          return this.$slots.divslot\n        case 'ul':\n          return this.$slots.ulslot\n        case 'ol':\n          return this.$slots.olslot\n        case 'form':\n          return this.$slots.formslot\n        default:\n          return false\n      }\n    }\n  },\n  isActHideAnimate: false,\n  watch: {\n    show (value) {\n      if (value) {\n        this.isActHideAnimate = true\n\n        this.$nextTick(() => {\n          this.$emit('VaAnimQueueHidden')\n          setTimeout(() => {\n            this._animateEnter()\n            this.isActHideAnimate = false\n          }, 50)\n        })\n      } else {\n        this._animateLeave(() => {\n          if (!this.isActHideAnimate) {\n            this.$emit('VaAnimQueueHidden')\n          }\n        })\n      }\n    },\n    watchValue (newValue, oldValue) {\n      this.$nextTick(() => {\n        let shouldEnterChild = []\n        let shouldLeaveChild = []\n        const newChild = this._getKeysChild()\n        // const nodeMap = {}\n\n        for (let i = 0; i < this.children.length; i++) {\n          let curChild = this.children[i]\n          let hasRemove = true\n\n          for (let j = 0; j < newChild.length; j++) {\n            if (curChild.key === newChild[j].key) {\n              hasRemove = false\n            }\n          }\n          if (hasRemove) {\n            shouldLeaveChild.push(curChild)\n          }\n        }\n\n        for (let i = 0; i < newChild.length; i++) {\n          let curChild = newChild[i]\n          let hasAdd = true\n\n          for (let j = 0; j < this.children.length; j++) {\n            if (curChild.key === this.children[j].key) {\n              hasAdd = false\n            }\n          }\n          if (hasAdd) {\n            shouldEnterChild.push(curChild)\n          }\n        }\n\n        shouldEnterChild.forEach(this._performEnter)\n        shouldLeaveChild.forEach(this._performLeave)\n\n        this.children = newChild\n      })\n    }\n  },\n  methods: {\n    _getKeysChild () {\n      const ret = []\n      const keyNodes = Array.prototype.slice.call(this.$el.querySelectorAll('[anim-key]'))\n\n      keyNodes.forEach(child => {\n        if (!child) {\n          return\n        }\n\n        child.setAttribute('__scope_key__', 1)\n\n        const key = child.getAttribute('anim-key')\n\n        if (!key) {\n          return\n        }\n\n        ret.push({\n          key: key,\n          el: child\n        })\n      })\n\n      return ret\n    },\n    _getFreeKeysAndChild () {\n      const ret = []\n      const keyNodes = Array.prototype.slice.call(this.$el.querySelectorAll('[anim-key]:not([__scope_key__])'))\n\n      keyNodes.forEach(child => {\n        if (!child) {\n          return\n        }\n\n        child.setAttribute('__scope_key__', 1)\n\n        const key = child.getAttribute('anim-key')\n\n        if (!key) {\n          return\n        }\n\n        ret.push({\n          key: key,\n          el: child\n        })\n      })\n\n      return ret\n    },\n    _getVelocityConfig (index) {\n      if (this.animConfig) {\n        return transformArguments(this.animConfig)[index]\n      }\n      return ANIM_TYPES[transformArguments(this.type)[index]]\n    },\n    _getVelocityEnterConfig () {\n      return this._getVelocityConfig(0)\n    },\n    _getVelocityLeaveConfig () {\n      const config = this._getVelocityConfig(1)\n      const ret = {}\n\n      Object.keys(config).forEach((key) => {\n        if (Array.isArray(config[key])) {\n          ret[key] = Array.prototype.slice.call(config[key]).reverse()\n        } else {\n          ret[key] = config[key]\n        }\n      })\n      return ret\n    },\n    _getVelocityEasing () {\n      return transformArguments(this.ease).map(easeName => {\n        if (typeof easeName === 'string') {\n          return BackEase[easeName] || easeName\n        }\n      })\n    },\n    _hiddenVelocityNode () {\n      this.children.forEach((item, i) => {\n        const node = item.el\n        if (!node) {\n          return\n        }\n        node.style.visibility = 'hidden'\n        velocity(node, 'stop')\n      })\n    },\n    _animateEnter () {\n      this.children.forEach(this._performEnter)\n    },\n    _performEnter (item, i) {\n      const node = item.el\n      const key = item.key\n\n      if (!node) {\n        return\n      }\n\n      const interval = parseInt(transformArguments(this.interval)[0])\n      const delay = parseInt(transformArguments(this.delay)[0])\n      const duration = parseInt(transformArguments(this.duration)[0])\n      node.style.visibility = 'hidden'\n      velocity(node, 'stop')\n      velocity(node, this._getVelocityEnterConfig('enter'), {\n        delay: (interval * i * delay) / 100,\n        duration: duration,\n        easing: this._getVelocityEasing()[0],\n        visibility: 'visible',\n        begin: (elements) => {\n          this._enterBegin(key, elements)\n          if (node.__vue__) {\n            const _enterFn = node.__vue__._animateEnter\n            _enterFn && _enterFn()\n\n            const children = node.__vue__.$children\n            children.forEach(item => {\n              item._animateEnter && item._animateEnter()\n            })\n          }\n        },\n        complete: this._enterComplete.bind(this, key)\n      })\n    },\n    _animateLeave (done) {\n      this.children.forEach((item, i) => {\n        this._performLeave(item, i, done)\n      })\n    },\n    _performLeave (item, i, done) {\n      const node = item.el\n      const key = item.key\n      if (!node) {\n        return\n      }\n      const interval = parseInt(transformArguments(this.interval)[1])\n      const delay = parseInt(transformArguments(this.delay)[1])\n      const duration = parseInt(transformArguments(this.duration)[1])\n      const order = this.leaveReverse ? (this.children.length - i - 1) : i\n\n      velocity(node, 'stop')\n      velocity(node, this._getVelocityLeaveConfig('leave'), {\n        delay: interval * order + delay,\n        duration: duration,\n        easing: this._getVelocityEasing()[1],\n        begin: this._leaveBegin.bind(this),\n        complete: (elements) => {\n          this._leaveComplete(key, elements)\n          const len = this.children.length\n          if (i === len - 1) {\n            done && done()\n          }\n        }\n      })\n    },\n    _enterBegin (key, elements) {\n      const self = this\n      if (this.keysAnimating.indexOf(key) >= 0) {\n        this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1)\n      }\n      elements.forEach(elem => {\n        elem.className = elem.className.replace(self.animatingClassName[1], '').trim()\n        elem.className += (' ' + self.animatingClassName[0])\n      })\n    },\n    _enterComplete (key, elements) {\n      const self = this\n      if (this.keysAnimating.indexOf(key) >= 0) {\n        this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1)\n      }\n      elements.forEach(elem => {\n        elem.className = elem.className.replace(self.animatingClassName[0], '').trim()\n      })\n    },\n    _leaveBegin (elements) {\n      const self = this\n      elements.forEach(elem => {\n        elem.className = elem.className.replace(self.animatingClassName[0], '').trim()\n        elem.className += (' ' + self.animatingClassName[1])\n      })\n    },\n    _leaveComplete (key, elements) {\n      const self = this\n      if (this.keysAnimating.indexOf(key) < 0) {\n        return\n      }\n      this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1)\n      elements.forEach(elem => {\n        elem.className = elem.className.replace(self.animatingClassName[1], '').trim()\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/AnimQueue"}]}