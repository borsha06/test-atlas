{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Button/VaButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Button/VaButton.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EventListener from '../utils/EventListener';\nexport default {\n  name: 'VaButton',\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      required: false,\n      values: ['default', 'primary'],\n      note: 'The style of button to render.',\n      validator: function validator(v) {\n        return ['default', 'primary', 'primary-light', 'primary-dark', 'paleblue', 'success', 'info', 'warning', 'danger', 'subtle', 'link', 'subtle-link', 'active', 'dark', 'darker', 'purple', 'purple-light', 'purple-dark'].includes(v);\n      }\n    },\n    size: {\n      type: String,\n      default: 'md',\n      required: false,\n      note: 'The size of button to render.',\n      validator: function validator(v) {\n        return ['xs', 'sm', 'md', 'lg'].includes(v);\n      }\n    },\n    badge: {\n      type: [String, Number],\n      required: false,\n      note: 'Adds an VaBadge to the button.'\n    },\n    badgeMargin: {\n      type: String,\n      default: '0 5px 0 10px',\n      required: false,\n      note: 'Margin to be applied to the outside of the badge element. The default value works well for badges displayed to the right of the button text.'\n    },\n    active: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-active class.'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-disabled class.'\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-block class.'\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, hides text and shows prefixCls-loading spinner.'\n    },\n    round: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    focused: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    var loading = this.loading;\n    return {\n      loadingSpinner: loading,\n      isFocused: this.focused\n    };\n  },\n  computed: {\n    spinColor: function spinColor() {\n      var type = this.type;\n      var white = '#FFFFFF';\n      var darker = '#45526B';\n\n      switch (type) {\n        case 'default':\n          return darker;\n\n        case 'primary':\n          return white;\n\n        case 'primary-light':\n          return white;\n\n        case 'primary-dark':\n          return white;\n\n        case 'success':\n          return white;\n\n        case 'info':\n          return white;\n\n        case 'warning':\n          return darker;\n\n        case 'subtle':\n          return darker;\n\n        case 'link':\n          return darker;\n\n        case 'subtle-link':\n          return darker;\n\n        case 'danger':\n          return white;\n\n        case 'dark':\n          return white;\n\n        case 'darker':\n          return white;\n      }\n\n      return white;\n    },\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          type = this.type,\n          size = this.size,\n          block = this.block,\n          active = this.active,\n          disabled = this.disabled,\n          round = this.round,\n          isFocused = this.isFocused;\n      var klass = {};\n      klass[prefixCls + '-btn'] = true;\n      klass[prefixCls + '-btn-block'] = block;\n      klass[prefixCls + '-btn-active'] = active;\n      klass[prefixCls + '-btn-disabled'] = disabled;\n      size ? klass[prefixCls + '-btn-' + size] = true : '';\n      type ? klass[prefixCls + '-btn-' + type] = true : '';\n      klass[prefixCls + '-btn-round'] = round;\n      klass[prefixCls + '-btn-' + type + '-focused'] = isFocused;\n      return klass;\n    },\n    fadeclassObj: function fadeclassObj() {\n      var prefixCls = this.prefixCls,\n          loadingSpinner = this.loadingSpinner;\n      var klass = {};\n      klass[prefixCls + '-btn-text-fade'] = true;\n      loadingSpinner ? klass[prefixCls + '-btn-text-fade-out'] = true : '';\n      return klass;\n    }\n  },\n  watch: {\n    loading: function loading(val) {\n      var _this = this;\n\n      if (val) {\n        var rect = this.$el.getBoundingClientRect();\n        this.$el.style.width = rect.width + 'px';\n        this.$el.style.height = rect.height + 'px';\n        this.loadingSpinner = true;\n      } else {\n        this.$el.style.width = 'auto';\n        this.$el.style.height = 'auto';\n        this.$nextTick(function () {\n          _this.loadingSpinner = false;\n        });\n      }\n    }\n  },\n  methods: {\n    enterPressed: function enterPressed() {\n      var el = this.$refs.btn;\n      var evObj = document.createEvent('Events');\n      evObj.initEvent('click', true, false);\n      el.dispatchEvent(evObj);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      var el = _this2.$el;\n      _this2._clickEvent = EventListener.listen(window, 'click', function (e) {\n        if (!el.contains(e.target)) {\n          _this2.isFocused = false;\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this._clickEvent) this._clickEvent.remove();\n  }\n};",{"version":3,"sources":["VaButton.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a :class=\"classObj\" ref=\"btn\" tabindex=\"0\" v-on:keyup.enter=\"enterPressed\">\n    <div :class=\"fadeclassObj\">\n      <slot />\n      <va-badge v-if=\"badge\" :margin=\"badgeMargin\">{{badge}}</va-badge>\n    </div>\n    <va-loading v-if=\"loadingSpinner\" :size=\"size\" :color=\"spinColor\" />\n  </a>\n</template>\n\n<script>\nimport EventListener from '../utils/EventListener'\n\nexport default {\n  name: 'VaButton',\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      required: false,\n      values: ['default', 'primary'],\n      note: 'The style of button to render.',\n      validator (v) {\n        return [\n          'default',\n          'primary',\n          'primary-light',\n          'primary-dark',\n          'paleblue',\n          'success',\n          'info',\n          'warning',\n          'danger',\n          'subtle',\n          'link',\n          'subtle-link',\n          'active',\n          'dark',\n          'darker',\n          'purple',\n          'purple-light',\n          'purple-dark'\n        ].includes(v)\n      }\n    },\n    size: {\n      type: String,\n      default: 'md',\n      required: false,\n      note: 'The size of button to render.',\n      validator (v) {\n        return [\n          'xs',\n          'sm',\n          'md',\n          'lg'\n        ].includes(v)\n      }\n    },\n    badge: {\n      type: [String, Number],\n      required: false,\n      note: 'Adds an VaBadge to the button.'\n    },\n    badgeMargin: {\n      type: String,\n      default: '0 5px 0 10px',\n      required: false,\n      note: 'Margin to be applied to the outside of the badge element. The default value works well for badges displayed to the right of the button text.'\n    },\n    active: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-active class.'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-disabled class.'\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, applies the .${prefixCls}-btn-block class.'\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, hides text and shows prefixCls-loading spinner.'\n    },\n    round: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    focused: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let loading = this.loading\n    return {\n      loadingSpinner: loading,\n      isFocused: this.focused\n    }\n  },\n  computed: {\n    spinColor () {\n      let {type} = this\n      let white = '#FFFFFF'\n      let darker = '#45526B'\n\n      switch (type) {\n        case 'default':\n          return darker\n        case 'primary':\n          return white\n        case 'primary-light':\n          return white\n        case 'primary-dark':\n          return white\n        case 'success':\n          return white\n        case 'info':\n          return white\n        case 'warning':\n          return darker\n        case 'subtle':\n          return darker\n        case 'link':\n          return darker\n        case 'subtle-link':\n          return darker\n        case 'danger':\n          return white\n        case 'dark':\n          return white\n        case 'darker':\n          return white\n      }\n\n      return white\n    },\n    classObj () {\n      let {prefixCls, type, size, block, active, disabled, round, isFocused} = this\n      let klass = {}\n\n      klass[prefixCls + '-btn'] = true\n      klass[prefixCls + '-btn-block'] = block\n      klass[prefixCls + '-btn-active'] = active\n      klass[prefixCls + '-btn-disabled'] = disabled\n      size ? klass[prefixCls + '-btn-' + size] = true : ''\n      type ? klass[prefixCls + '-btn-' + type] = true : ''\n      klass[prefixCls + '-btn-round'] = round\n\n      klass[prefixCls + '-btn-' + type + '-focused'] = isFocused\n\n      return klass\n    },\n    fadeclassObj () {\n      let {prefixCls, loadingSpinner} = this\n      let klass = {}\n\n      klass[prefixCls + '-btn-text-fade'] = true\n      loadingSpinner ? klass[prefixCls + '-btn-text-fade-out'] = true : ''\n\n      return klass\n    }\n  },\n  watch: {\n    loading (val) {\n      if (val) {\n        let rect = this.$el.getBoundingClientRect()\n\n        this.$el.style.width = rect.width + 'px'\n        this.$el.style.height = rect.height + 'px'\n\n        this.loadingSpinner = true\n      } else {\n        this.$el.style.width = 'auto'\n        this.$el.style.height = 'auto'\n        this.$nextTick(() => {\n          this.loadingSpinner = false\n        })\n      }\n    }\n  },\n  methods: {\n    enterPressed () {\n      let el = this.$refs.btn\n      let evObj = document.createEvent('Events')\n      evObj.initEvent('click', true, false)\n      el.dispatchEvent(evObj)\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      let el = this.$el\n\n      this._clickEvent = EventListener.listen(window, 'click', (e) => {\n        if (!el.contains(e.target)) {\n          this.isFocused = false\n        }\n      })\n    })\n  },\n  beforeDestroy () {\n    if (this._clickEvent) this._clickEvent.remove()\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Button"}]}