{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxGroup.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaCheckboxGroup',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      currentValue: []\n    }\n  },\n  methods: {\n    init () {\n      let children = this.$children\n      let ret = []\n      children.forEach((item) => {\n        item.currentChecked ? ret.push(item.label) : ''\n      })\n      this.currentValue = ret\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentValue = val\n    },\n    currentValue (val) {\n      let value = val || this.value\n      this.broadcast('VaCheckbox', 'Va@checkboxgroupChange', value)\n      this.broadcast('VaCheckboxBtn', 'Va@checkboxgroupChange', value)\n      this.$emit('input', value)\n      this.$emit('change', value)\n    }\n  },\n  created () {\n    this.$on('Va@checkboxChange', () => {\n      this.init()\n    })\n  },\n  mounted () {\n    this.currentValue = this.value\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  components: {\n    validate\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, vertical} = this\n      let klass = {}\n\n      klass[prefixCls + '-btn-group'] = !vertical\n      klass[prefixCls + '-btn-group-vertical'] = vertical\n      klass[prefixCls + '-checkbox-group'] = true\n      klass[prefixCls + '-checkbox-group-vertical'] = vertical\n\n      return klass\n    }\n\n  }\n}\n",{"version":3,"sources":["VaCheckboxGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"VaCheckboxGroup.vue","sourceRoot":"node_modules/vue-atlas/src/Checkbox","sourcesContent":["<template>\n  <div :class=\"classObj\">\n    <slot />\n    <validate\n      :name=\"name\"\n      :rules=\"rules\"\n      :custom-validate=\"customValidate\"\n      :current=\"currentValue\">\n    </validate>\n  </div>\n</template>\n\n<script>\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaCheckboxGroup',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      currentValue: []\n    }\n  },\n  methods: {\n    init () {\n      let children = this.$children\n      let ret = []\n      children.forEach((item) => {\n        item.currentChecked ? ret.push(item.label) : ''\n      })\n      this.currentValue = ret\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentValue = val\n    },\n    currentValue (val) {\n      let value = val || this.value\n      this.broadcast('VaCheckbox', 'Va@checkboxgroupChange', value)\n      this.broadcast('VaCheckboxBtn', 'Va@checkboxgroupChange', value)\n      this.$emit('input', value)\n      this.$emit('change', value)\n    }\n  },\n  created () {\n    this.$on('Va@checkboxChange', () => {\n      this.init()\n    })\n  },\n  mounted () {\n    this.currentValue = this.value\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  components: {\n    validate\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, vertical} = this\n      let klass = {}\n\n      klass[prefixCls + '-btn-group'] = !vertical\n      klass[prefixCls + '-btn-group-vertical'] = vertical\n      klass[prefixCls + '-checkbox-group'] = true\n      klass[prefixCls + '-checkbox-group-vertical'] = vertical\n\n      return klass\n    }\n\n  }\n}\n</script>\n"]}]}