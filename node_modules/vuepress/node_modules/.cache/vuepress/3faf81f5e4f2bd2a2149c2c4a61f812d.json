{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaMinibarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaMinibarItem.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaMinibarItem',\n  props: {\n    brand: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, this item will have a larger bottom margin so as to make a distinction between it and other items.'\n    },\n    tooltip: {\n      type: String,\n      default: '',\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, brand} = this\n      let klass = {}\n\n      klass[prefixCls + '-minibar-item'] = true\n      klass[prefixCls + '-minibar-item-brand'] = brand\n\n      return klass\n    }\n  }\n}\n",{"version":3,"sources":["VaMinibarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"VaMinibarItem.vue","sourceRoot":"node_modules/vue-atlas/src/Sidebar","sourcesContent":["<template>\n  <div>\n    <va-tooltip v-if=\"tooltip\" :content=\"tooltip\" placement=\"right\" trigger=\"hover\" effect=\"tooltip-fade-right\" arrow>\n      <div :class=\"classObj\">\n          <slot />\n      </div>\n    </va-tooltip>\n    <div v-else :class=\"classObj\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaMinibarItem',\n  props: {\n    brand: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'If true, this item will have a larger bottom margin so as to make a distinction between it and other items.'\n    },\n    tooltip: {\n      type: String,\n      default: '',\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, brand} = this\n      let klass = {}\n\n      klass[prefixCls + '-minibar-item'] = true\n      klass[prefixCls + '-minibar-item-brand'] = brand\n\n      return klass\n    }\n  }\n}\n</script>\n"]}]}