{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Affix/VaAffix.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Affix/VaAffix.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n\n//\n//\n//\n//\n//\n//\n//\n//\nfunction getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie 6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getOffset(element) {\n  var rect = element.getBoundingClientRect();\n  var body = document.body;\n  var clientTop = element.clientTop || body.clientTop || 0;\n  var clientLeft = element.clientLeft || body.clientLeft || 0;\n  var scrollTop = getScroll(window, true);\n  var scrollLeft = getScroll(window);\n  return {\n    top: rect.top + scrollTop - clientTop,\n    left: rect.left + scrollLeft - clientLeft\n  };\n}\n\nexport default {\n  name: 'VaAffix',\n  props: {\n    offset: {\n      type: [Number, String],\n      default: 0,\n      required: false,\n      note: 'Vertical offset distance to affix to'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      affix: false,\n      affixStyle: {}\n    };\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          affix = this.affix;\n      var klass = {};\n      klass[prefixCls + '-affix'] = affix;\n      return klass;\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('scroll', this._handleScroll, false);\n    window.addEventListener('resize', this._handleScroll, false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('scroll', this._handleScroll, false);\n    window.removeEventListener('resize', this._handleScroll, false);\n  },\n  methods: {\n    _handleScroll: function _handleScroll() {\n      var affix = this.affix;\n      var scrollTop = getScroll(window, true);\n      var elemOffset = getOffset(this.$el);\n\n      if (!affix && elemOffset.top - this.offset < scrollTop) {\n        this.affix = true;\n        this.affixStyle = {\n          top: this.offset + 'px',\n          left: elemOffset.left + 'px',\n          width: this.$el.offsetWidth + 'px'\n        };\n      } else if (affix && elemOffset.top - this.offset > scrollTop) {\n        this.affix = false;\n        this.affixStyle = null;\n      }\n    }\n  }\n};",{"version":3,"sources":["VaAffix.vue"],"names":[],"mappings":";;;;;;;;;;AAUA,SAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA;AACA,MAAA,MAAA,EAAA,UAAA,MAAA,GAAA,GAAA,GAAA,IAAA,QAAA,CAAA;AACA,MAAA,SAAA,YAAA,MAAA,KAAA,GAAA,MAAA,CAAA;;AACA,MAAA,OAAA,GAAA,KAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,QAAA,CADA,CAEA;;AACA,UAAA,EAAA,eAAA,CAAA,MAAA,CAAA;;AAEA,QAAA,OAAA,GAAA,KAAA,QAAA,EAAA;AACA;AACA,YAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AACA;AACA;;AACA,SAAA,GAAA;AACA;;AAEA,SAAA,SAAA,CAAA,OAAA,EAAA;AACA,MAAA,OAAA,QAAA,qBAAA,EAAA;AACA,MAAA,OAAA,SAAA,IAAA;AACA,MAAA,YAAA,QAAA,SAAA,IAAA,KAAA,SAAA,IAAA,CAAA;AACA,MAAA,aAAA,QAAA,UAAA,IAAA,KAAA,UAAA,IAAA,CAAA;AACA,MAAA,YAAA,UAAA,MAAA,EAAA,IAAA,CAAA;AACA,MAAA,aAAA,UAAA,MAAA,CAAA;AAEA,SAAA;AACA,SAAA,KAAA,GAAA,GAAA,SAAA,GAAA,SADA;AAEA,UAAA,KAAA,IAAA,GAAA,UAAA,GAAA;AAFA,GAAA;AAIA;;AAEA,eAAA;AACA,QAAA,SADA;AAEA,SAAA;AACA,YAAA;AACA,YAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,eAAA,CAFA;AAGA,gBAAA,KAHA;AAIA,YAAA;AAJA,KADA;AAOA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAPA,GAFA;AAcA,MAdA,kBAcA;AACA,WAAA;AACA,aAAA,KADA;AAEA,kBAAA;AAFA,KAAA;AAIA,GAnBA;AAoBA,YAAA;AACA,YADA,sBACA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAEA,UAAA,QAAA,EAAA;AAEA,YAAA,YAAA,QAAA,IAAA,KAAA;AAEA,aAAA,KAAA;AACA;AARA,GApBA;AA8BA,SA9BA,qBA8BA;AACA,WAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA;AACA,WAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA;AACA,GAjCA;AAkCA,eAlCA,2BAkCA;AACA,WAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA;AACA,WAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA;AACA,GArCA;AAsCA,WAAA;AACA,iBADA,2BACA;AACA,UAAA,QAAA,KAAA,KAAA;AACA,UAAA,YAAA,UAAA,MAAA,EAAA,IAAA,CAAA;AACA,UAAA,aAAA,UAAA,KAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,KAAA,IAAA,WAAA,GAAA,GAAA,KAAA,MAAA,GAAA,SAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,aAAA,UAAA,GAAA;AACA,eAAA,KAAA,MAAA,GAAA,IADA;AAEA,gBAAA,WAAA,IAAA,GAAA,IAFA;AAGA,iBAAA,KAAA,GAAA,CAAA,WAAA,GAAA;AAHA,SAAA;AAKA,OAPA,MAOA,IAAA,SAAA,WAAA,GAAA,GAAA,KAAA,MAAA,GAAA,SAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA;AACA;AAjBA;AAtCA,CAAA","sourcesContent":["<template>\n  <div>\n    <div :style=\"affixStyle\" :class=\"classObj\">\n      <slot/>\n    </div>\n  </div>\n</template>\n\n<script>\n\nfunction getScroll (w, top) {\n  let ret = w['page' + (top ? 'Y' : 'X') + 'Offset']\n  let method = 'scroll' + (top ? 'Top' : 'Left')\n  if (typeof ret !== 'number') {\n    let d = w.document\n    // ie 6,7,8 standard mode\n    ret = d.documentElement[method]\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method]\n    }\n  }\n  return ret\n}\n\nfunction getOffset (element) {\n  let rect = element.getBoundingClientRect()\n  let body = document.body\n  let clientTop = element.clientTop || body.clientTop || 0\n  let clientLeft = element.clientLeft || body.clientLeft || 0\n  let scrollTop = getScroll(window, true)\n  let scrollLeft = getScroll(window)\n\n  return {\n    top: rect.top + scrollTop - clientTop,\n    left: rect.left + scrollLeft - clientLeft\n  }\n}\n\nexport default {\n  name: 'VaAffix',\n  props: {\n    offset: {\n      type: [Number, String],\n      default: 0,\n      required: false,\n      note: 'Vertical offset distance to affix to'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      affix: false,\n      affixStyle: {}\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, affix} = this\n      let klass = {}\n\n      klass[prefixCls + '-affix'] = affix\n\n      return klass\n    }\n  },\n  mounted () {\n    window.addEventListener('scroll', this._handleScroll, false)\n    window.addEventListener('resize', this._handleScroll, false)\n  },\n  beforeDestroy () {\n    window.removeEventListener('scroll', this._handleScroll, false)\n    window.removeEventListener('resize', this._handleScroll, false)\n  },\n  methods: {\n    _handleScroll () {\n      const affix = this.affix\n      const scrollTop = getScroll(window, true)\n      const elemOffset = getOffset(this.$el)\n\n      if (!affix && (elemOffset.top - this.offset) < scrollTop) {\n        this.affix = true\n        this.affixStyle = {\n          top: this.offset + 'px',\n          left: elemOffset.left + 'px',\n          width: this.$el.offsetWidth + 'px'\n        }\n      } else if (affix && (elemOffset.top - this.offset) > scrollTop) {\n        this.affix = false\n        this.affixStyle = null\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Affix"}]}