{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/LayoutManager/VaLayoutManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/LayoutManager/VaLayoutManager.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport events from '../utils/events';\nexport default {\n  name: 'VaLayoutManager',\n  mixins: [events],\n  props: {\n    desktopSidebarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopMinibarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopTopbarHeight: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileFriendly: {\n      type: Boolean,\n      default: true\n    },\n    mobileBreakpoint: {\n      type: Number,\n      default: 768,\n      required: false\n    },\n    mobileSidebarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileMinibarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileTopbarHeight: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    rtl: {\n      type: Boolean,\n      default: false\n    },\n    sidebarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    minibarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    topbarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    topbarPadded: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    split: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    reverse: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    desktopMargin: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopMinimumWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    bgColor: {\n      type: String,\n      default: '#F4F5F7',\n      required: false\n    },\n    pageBgColor: {\n      type: String,\n      default: '#FFFFFF',\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    var dDesktopMinimumWidth = this.desktopMinimumWidth;\n    var dDesktopTopbarHeight = this.desktopTopbarHeight;\n    var dDesktopMinibarWidth = this.desktopMinibarWidth;\n    var dDesktopSidebarWidth = this.desktopSidebarWidth;\n    var dMobileSidebarWidth = this.mobileSidebarWidth;\n    var dMobileMinibarWidth = this.mobileMinibarWidth;\n    var dMobileTopbarHeight = this.mobileTopbarHeight;\n    var dSidebarPriority = this.sidebarPriority;\n    var dMinibarPriority = this.minibarPriority;\n    var currDesktopMargin = this.desktopMargin;\n    var dTopbarPriority = this.topbarPriority;\n    var dDesktopMargin = this.desktopMargin;\n    var dTopbarPadded = this.topbarPadded;\n    var dPageBgColor = this.pageBgColor;\n    var dReverse = this.reverse;\n    var dBgColor = this.bgColor;\n    var dSplit = this.split;\n    var dRtl = this.rtl;\n    return {\n      mDesktopTopbarHeight: dDesktopTopbarHeight,\n      mDesktopMinimumWidth: dDesktopMinimumWidth,\n      mDesktopSidebarWidth: dDesktopSidebarWidth,\n      mDesktopMinibarWidth: dDesktopMinibarWidth,\n      mMobileSidebarWidth: dMobileSidebarWidth,\n      mMobileMinibarWidth: dMobileMinibarWidth,\n      mMobileTopbarHeight: dMobileTopbarHeight,\n      currentDesktopMargin: currDesktopMargin,\n      mMinibarPriority: dMinibarPriority,\n      mSidebarPriority: dSidebarPriority,\n      mTopbarPriority: dTopbarPriority,\n      mDesktopMargin: dDesktopMargin,\n      mTopbarPadded: dTopbarPadded,\n      pastMobileBreakpoint: false,\n      mPageBgColor: dPageBgColor,\n      allowMarginUpdates: true,\n      currentMinibarWidth: 0,\n      currentSidebarWidth: 0,\n      currentTopbarHeight: 0,\n      mMinibarTheme: 'blue',\n      mSidebarTheme: 'blue',\n      mTopbarTheme: 'blue',\n      mReverse: dReverse,\n      haveMinibar: false,\n      mShowToggle: false,\n      mBgColor: dBgColor,\n      haveSidebar: false,\n      haveTopbar: false,\n      mCompact: false,\n      havePage: false,\n      isMobile: false,\n      contentWidth: 0,\n      mPageSize: 'md',\n      mSplit: dSplit,\n      windowWidth: 0,\n      mRtl: dRtl\n    };\n  },\n  watch: {\n    pastMobileBreakpoint: function pastMobileBreakpoint(val) {\n      this.broadcastIsMobile(val);\n      this.setAndBroadcastDimensions();\n    },\n    mDesktopSidebarWidth: function mDesktopSidebarWidth(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mDesktopMinibarWidth: function mDesktopMinibarWidth(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mDesktopTopbarHeight: function mDesktopTopbarHeight(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mMobileSidebarWidth: function mMobileSidebarWidth(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mMobileMinibarWidth: function mMobileMinibarWidth(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mMobileTopbarHeight: function mMobileTopbarHeight(val) {\n      this.setAndBroadcastDimensions();\n    },\n    mRtl: function mRtl(val) {\n      this.broadcastIsRTL(val);\n    },\n    mSidebarPriority: function mSidebarPriority(val) {\n      this.broadcastSidebarPriority(val);\n    },\n    mMinibarPriority: function mMinibarPriority(val) {\n      this.broadcastMinibarPriority(val);\n    },\n    mTopbarPriority: function mTopbarPriority(val) {\n      this.broadcastTopbarPriority(val);\n    },\n    mTopbarPadded: function mTopbarPadded(val) {\n      this.broadcastTopbarPadded(val);\n    },\n    mBgColor: function mBgColor(val) {\n      this.broadcastBgColor(val);\n    },\n    mPageBgColor: function mPageBgColor(val) {\n      this.broadcastPageBgColor(val);\n    },\n    mSplit: function mSplit(val) {\n      this.broadcastIsSplit(val);\n    },\n    mReverse: function mReverse(val) {\n      this.broadcastIsReverse(val);\n    },\n    mCompact: function mCompact(val) {\n      this.broadcastCompact(val);\n    },\n    mShowToggle: function mShowToggle(val) {\n      this.broadcastShowToggle(val);\n    },\n    mDesktopMargin: function mDesktopMargin(val) {\n      /**\n       * Calling _handleResize here. Why? So a new contentWidth\n       * is calculated and broadcasted.\n       */\n      this._handleResize();\n\n      this.broadcastDesktopMargin(val);\n    },\n    mDesktopMinimumWidth: function mDesktopMinimumWidth(val) {\n      this.broadcastDesktopMinimumWidth(val);\n    },\n    windowWidth: function windowWidth(val) {\n      this.broadcastWindowWidth(val);\n    },\n    contentWidth: function contentWidth(val) {\n      this.broadcastContentWidth(val);\n    },\n    allowMarginUpdates: function allowMarginUpdates(val) {\n      this.broadcastAllowMarginUpdates(val);\n    },\n    mPageSize: function mPageSize(val) {\n      this.broadcastPageSize(val);\n    },\n    mTopbarTheme: function mTopbarTheme(val) {\n      this.broadcastTopbarTheme(val);\n    },\n    mMinibarTheme: function mMinibarTheme(val) {\n      this.broadcastMinibarTheme(val);\n    },\n    mSidebarTheme: function mSidebarTheme(val) {\n      this.broadcastSidebarTheme(val);\n    }\n  },\n  methods: {\n    _handleResize: function _handleResize() {\n      var ww = window.innerWidth || document.body.clientWidth;\n\n      if (parseInt(ww) < this.mobileBreakpoint) {\n        this.pastMobileBreakpoint = true;\n      } else {\n        this.pastMobileBreakpoint ? this.pastMobileBreakpoint = false : true;\n      }\n\n      this.windowWidth = parseInt(ww);\n      this.contentWidth = this.windowWidth - this.mDesktopMargin * 2;\n    },\n    broadcastSidebarWidth: function broadcastSidebarWidth(val) {\n      this.broadcast('VaSidebar', 'Va@sidebarWidthChange', val);\n      this.broadcast('VaMinibar', 'Va@sidebarWidthChange', val);\n      this.broadcast('VaTopbar', 'Va@sidebarWidthChange', val);\n      this.broadcast('VaPage', 'Va@sidebarWidthChange', val);\n    },\n    broadcastMinibarWidth: function broadcastMinibarWidth(val) {\n      this.broadcast('VaSidebar', 'Va@minibarWidthChange', val);\n      this.broadcast('VaMinibar', 'Va@minibarWidthChange', val);\n      this.broadcast('VaTopbar', 'Va@minibarWidthChange', val);\n      this.broadcast('VaPage', 'Va@minibarWidthChange', val);\n    },\n    broadcastTopbarHeight: function broadcastTopbarHeight(val) {\n      this.broadcast('VaSidebar', 'Va@topbarHeightChange', val);\n      this.broadcast('VaMinibar', 'Va@topbarHeightChange', val);\n      this.broadcast('VaTopbar', 'Va@topbarHeightChange', val);\n      this.broadcast('VaPage', 'Va@topbarHeightChange', val);\n    },\n    broadcastIsMobile: function broadcastIsMobile(val) {\n      this.broadcast('VaSidebar', 'Va@sidebarIsMobile', val);\n      this.broadcast('VaMinibar', 'Va@minibarIsMobile', val);\n      this.broadcast('VaTopbar', 'Va@topbarIsMobile', val);\n      this.broadcast('VaPage', 'Va@pageIsMobile', val);\n      this.broadcast('VaRange', 'Va@rangeIsMobile', val);\n      this.broadcast('VaMobile', 'Va@mobileIsMobile', val);\n      this.broadcast('VaDesktop', 'Va@desktopIsMobile', val);\n    },\n    broadcastIsRTL: function broadcastIsRTL(val) {\n      this.broadcast('VaSidebar', 'Va@rtlChange', val);\n      this.broadcast('VaMinibar', 'Va@rtlChange', val);\n      this.broadcast('VaTopbar', 'Va@rtlChange', val);\n      this.broadcast('VaPage', 'Va@rtlChange', val);\n    },\n    broadcastIsSplit: function broadcastIsSplit(val) {\n      this.broadcast('VaSidebar', 'Va@splitChange', val);\n      this.broadcast('VaMinibar', 'Va@splitChange', val);\n      this.broadcast('VaTopbar', 'Va@splitChange', val);\n      this.broadcast('VaPage', 'Va@splitChange', val);\n    },\n    broadcastCompact: function broadcastCompact(val) {\n      this.broadcast('VaSidebar', 'Va@compactChange', val);\n    },\n    broadcastShowToggle: function broadcastShowToggle(val) {\n      this.broadcast('VaSidebar', 'Va@showToggleChange', val);\n      this.broadcast('VaSidebarGroupItem', 'Va@showToggleChange', val);\n      this.broadcast('VaSidebarGroupLevel', 'Va@showToggleChange', val);\n    },\n    broadcastBgColor: function broadcastBgColor(val) {\n      /**\n       * Nobody needs to know about BgColor.\n       * Only relevant to this component.\n       */\n    },\n    broadcastPageBgColor: function broadcastPageBgColor(val) {\n      this.broadcast('VaPage', 'Va@pageBgColorChange', val);\n    },\n    broadcastIsReverse: function broadcastIsReverse(val) {\n      this.broadcast('VaSidebar', 'Va@reverseChange', val);\n      this.broadcast('VaMinibar', 'Va@reverseChange', val);\n      this.broadcast('VaTopbar', 'Va@reverseChange', val);\n      this.broadcast('VaPage', 'Va@reverseChange', val);\n    },\n    broadcastSidebarPriority: function broadcastSidebarPriority(val) {\n      this.broadcast('VaSidebar', 'Va@sidebarPriorityChange', val);\n      this.broadcast('VaMinibar', 'Va@sidebarPriorityChange', val);\n      this.broadcast('VaTopbar', 'Va@sidebarPriorityChange', val);\n    },\n    broadcastMinibarPriority: function broadcastMinibarPriority(val) {\n      this.broadcast('VaSidebar', 'Va@minibarPriorityChange', val);\n      this.broadcast('VaMinibar', 'Va@minibarPriorityChange', val);\n      this.broadcast('VaTopbar', 'Va@minibarPriorityChange', val);\n    },\n    broadcastTopbarPriority: function broadcastTopbarPriority(val) {\n      this.broadcast('VaSidebar', 'Va@topbarPriorityChange', val);\n      this.broadcast('VaMinibar', 'Va@topbarPriorityChange', val);\n      this.broadcast('VaTopbar', 'Va@topbarPriorityChange', val);\n    },\n    broadcastTopbarPadded: function broadcastTopbarPadded(val) {\n      this.broadcast('VaTopbar', 'Va@topbarPaddedChange', val);\n    },\n    broadcastDesktopMargin: function broadcastDesktopMargin(val) {\n      this.broadcast('VaSidebar', 'Va@desktopMarginChange', val);\n      this.broadcast('VaMinibar', 'Va@desktopMarginChange', val);\n      this.broadcast('VaTopbar', 'Va@desktopMarginChange', val);\n      this.broadcast('VaPage', 'Va@desktopMarginChange', val);\n    },\n    broadcastDesktopMinimumWidth: function broadcastDesktopMinimumWidth(val) {\n      this.broadcast('VaSidebar', 'Va@desktopMinimumWidthChange', val);\n      this.broadcast('VaMinibar', 'Va@desktopMinimumWidthChange', val);\n      this.broadcast('VaTopbar', 'Va@desktopMinimumWidthChange', val);\n      this.broadcast('VaPage', 'Va@desktopMinimumWidthChange', val);\n    },\n    broadcastAllowMarginUpdates: function broadcastAllowMarginUpdates(val) {},\n    broadcastWindowWidth: function broadcastWindowWidth(val) {\n      this.broadcast('VaSidebar', 'Va@windowWidthChange', val);\n      this.broadcast('VaMinibar', 'Va@windowWidthChange', val);\n      this.broadcast('VaTopbar', 'Va@windowWidthChange', val);\n      this.broadcast('VaPage', 'Va@windowWidthChange', val);\n    },\n    broadcastContentWidth: function broadcastContentWidth(val) {\n      this.broadcast('VaSidebar', 'Va@contentWidthChange', val);\n      this.broadcast('VaMinibar', 'Va@contentWidthChange', val);\n      this.broadcast('VaTopbar', 'Va@contentWidthChange', val);\n      this.broadcast('VaPage', 'Va@contentWidthChange', val);\n    },\n    broadcastPageSize: function broadcastPageSize(val) {\n      this.broadcast('VaPage', 'Va@pageSizeChange', val);\n    },\n    broadcastTopbarTheme: function broadcastTopbarTheme(val) {\n      this.broadcast('VaTopbar', 'Va@topbarThemeChange', val);\n    },\n    broadcastSidebarTheme: function broadcastSidebarTheme(val) {\n      this.broadcast('VaSidebar', 'Va@sidebarThemeChange', val);\n    },\n    broadcastMinibarTheme: function broadcastMinibarTheme(val) {\n      this.broadcast('VaMinibar', 'Va@minibarThemeChange', val);\n    },\n    checkForPresenceOfTopbar: function checkForPresenceOfTopbar() {\n      this.broadcast('VaTopbar', 'Va@topbarPresenceCheck', true);\n    },\n    checkForPresenceOfSidebar: function checkForPresenceOfSidebar() {\n      this.broadcast('VaSidebar', 'Va@sidebarPresenceCheck', true);\n    },\n    checkForPresenceOfMinibar: function checkForPresenceOfMinibar() {\n      this.broadcast('VaMinibar', 'Va@minibarPresenceCheck', true);\n    },\n    checkForPresenceOfPage: function checkForPresenceOfPage() {\n      this.broadcast('VaPage', 'Va@pagePresenceCheck', true);\n    },\n    setAndBroadcastDimensions: function setAndBroadcastDimensions() {\n      if (this.pastMobileBreakpoint) {\n        this.currentTopbarHeight = this.mMobileTopbarHeight;\n        this.currentMinibarWidth = this.mMobileMinibarWidth;\n        this.currentSidebarWidth = this.mMobileSidebarWidth;\n      } else {\n        this.currentTopbarHeight = this.mDesktopTopbarHeight;\n        this.currentMinibarWidth = this.mDesktopMinibarWidth;\n        this.currentSidebarWidth = this.mDesktopSidebarWidth;\n      }\n\n      this.broadcastSidebarWidth(this.currentSidebarWidth);\n      this.broadcastMinibarWidth(this.currentMinibarWidth);\n      this.broadcastTopbarHeight(this.currentTopbarHeight);\n    },\n    enableReceivers: function enableReceivers() {\n      var _this = this;\n\n      /**\n       * These exist for VaLayoutManagerConfig.\n       *\n       * Setting these values should trigger the 'watch' on each of them,\n       * which in turn calls the value's respective broadcast function,\n       * broadcasting the new value to whatever has implemented a\n       * LayoutManager.\n       */\n      this.$on('Va@configDesktopTopbarHeightChange', function (val) {\n        _this.mDesktopTopbarHeight = val;\n      });\n      this.$on('Va@configDesktopMinibarWidthChange', function (val) {\n        _this.mDesktopMinibarWidth = val;\n      });\n      this.$on('Va@configDesktopMinimumWidthChange', function (val) {\n        _this.mDesktopMinimumWidth = val;\n      });\n      this.$on('Va@configDesktopSidebarWidthChange', function (val) {\n        _this.mDesktopSidebarWidth = val;\n      });\n      this.$on('Va@configMobileTopbarHeightChange', function (val) {\n        _this.mMobileTopbarHeight = val;\n      });\n      this.$on('Va@configMobileSidebarWidth', function (val) {\n        _this.mMobileSidebarWidth = val;\n      });\n      this.$on('Va@configMobileMinibarWidth', function (val) {\n        _this.mMobileMinibarWidth = val;\n      });\n      this.$on('Va@configSidebarPriorityChange', function (val) {\n        _this.mSidebarPriority = val;\n      });\n      this.$on('Va@configMinibarPriorityChange', function (val) {\n        _this.mMinibarPriority = val;\n      });\n      this.$on('Va@configTopbarPriorityChange', function (val) {\n        _this.mTopbarPriority = val;\n      });\n      this.$on('Va@configDesktopMarginChange', function (val) {\n        _this.mDesktopMargin = val;\n      });\n      this.$on('Va@configTopbarPaddedChange', function (val) {\n        _this.mTopbarPadded = val;\n      });\n      this.$on('Va@configMinibarThemeChange', function (val) {\n        _this.mMinibarTheme = val;\n      });\n      this.$on('Va@configSidebarThemeChange', function (val) {\n        _this.mSidebarTheme = val;\n      });\n      this.$on('Va@configTopbarThemeChange', function (val) {\n        _this.mTopbarTheme = val;\n      });\n      this.$on('Va@configPageBgColorChange', function (val) {\n        _this.mPageBgColor = val;\n      });\n      this.$on('Va@configShowToggleChange', function (val) {\n        _this.mShowToggle = val;\n      });\n      this.$on('Va@configPageSizeChange', function (val) {\n        _this.mPageSize = val;\n      });\n      this.$on('Va@configCompactChange', function (val) {\n        _this.mCompact = val;\n      });\n      this.$on('Va@configReverseChange', function (val) {\n        _this.mReverse = val;\n      });\n      this.$on('Va@configBgColorChange', function (val) {\n        _this.mBgColor = val;\n      });\n      this.$on('Va@configSplitChange', function (val) {\n        _this.mSplit = val;\n      });\n      this.$on('Va@configRtlChange', function (val) {\n        _this.mRtl = val;\n      });\n    },\n    broadcastDefaultsToConfig: function broadcastDefaultsToConfig() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopTopbarHeight', _this2.mDesktopTopbarHeight);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMinibarWidth', _this2.mDesktopMinibarWidth);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMinimumWidth', _this2.mDesktopMinimumWidth);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopSidebarWidth', _this2.mDesktopSidebarWidth);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileSidebarWidth', _this2.mMobileSidebarWidth);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileMinibarWidth', _this2.mMobileMinibarWidth);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileTopbarHeight', _this2.mMobileTopbarHeight);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSidebarPriority', _this2.mSidebarPriority);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMinibarPriority', _this2.mMinibarPriority);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarPriority', _this2.mTopbarPriority);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMargin', _this2.mDesktopMargin);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarPadded', _this2.mTopbarPadded);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMinibarTheme', _this2.mMinibarTheme);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSidebarTheme', _this2.mSidebarTheme);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarTheme', _this2.mTopbarTheme);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceivePageBgColor', _this2.mPageBgColor);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveShowToggle', _this2.mShowToggle);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceivePageSize', _this2.mPageSize);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveCompact', _this2.mCompact);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveReverse', _this2.mReverse);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveBgColor', _this2.mBgColor);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSplit', _this2.mSplit);\n\n        _this2.broadcast('VaLayoutManagerConfig', 'Va@configReceiveRtl', _this2.mRtl);\n      }, 100);\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this._handleResize, false);\n    /**\n     * Call the handler function directly instead of instantiating a resize\n     * event like so: window.dispatchEvent(new Event('resize'))\n     *\n     * Benefit is.. ? Browser compatibility? I dunno.\n     */\n\n    this._handleResize();\n    /**\n     * Mobility check.\n     */\n\n\n    this.setAndBroadcastDimensions();\n    /**\n     * Presence checks. As of now, this is not really used for\n     * anything. Maybe in the future?\n     */\n\n    this.checkForPresenceOfSidebar();\n    this.checkForPresenceOfTopbar();\n    this.checkForPresenceOfPage();\n    /**\n     * Broadcast props that were passed to the components\n     * that need to do stuff based on their values.\n     */\n\n    this.broadcastDesktopMinimumWidth(this.mDesktopMinimumWidth);\n    this.broadcastMinibarPriority(this.mMinibarPriority);\n    this.broadcastSidebarPriority(this.mSidebarPriority);\n    this.broadcastTopbarPriority(this.mTopbarPriority);\n    this.broadcastDesktopMargin(this.mDesktopMargin);\n    this.broadcastTopbarPadded(this.mTopbarPadded);\n    this.broadcastContentWidth(this.contentWidth);\n    this.broadcastPageBgColor(this.mPageBgColor);\n    this.broadcastWindowWidth(this.windowWidth);\n    this.broadcastIsReverse(this.mReverse);\n    this.broadcastIsSplit(this.mSplit);\n    this.broadcastIsRTL(this.mRtl);\n    /**\n     * --------------------------------------------------\n     * Methods related to VaLayoutManagerConfig\n     *\n     * enableReceivers() exists so that VaLayoutManagerConfig\n     * can talk to VaLayoutManager.\n     */\n\n    this.enableReceivers();\n    /**\n     * broadcastDefaultsToConfig() sends default values to\n     * VaLayoutManagerConfig, in case some values weren't specified.\n     */\n\n    this.broadcastDefaultsToConfig();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this._handleResize, false);\n  },\n  created: function created() {\n    var _this3 = this;\n\n    // Presence replies\n    this.$on('Va@minibarPresenceReply', function (val) {\n      if (val === true) {\n        _this3.haveMinibar = true;\n      }\n    });\n    this.$on('Va@sidebarPresenceReply', function (val) {\n      if (val === true) {\n        _this3.haveSidebar = true;\n      }\n    });\n    this.$on('Va@topbarPresenceReply', function (val) {\n      if (val === true) {\n        _this3.haveTopbar = true;\n      }\n    });\n    this.$on('Va@pagePresenceReply', function (val) {\n      if (val === true) {\n        _this3.havePage = true;\n      }\n    }); // Listen for Sidebar width change - implemented when Sidebar's resizer was implemented\n    // this.$on('Va@sidebarWidthChange', (val) => {\n    //   this.broadcastSidebarWidth(val)\n    // })\n    // Some components might want to request the isMobile status, for example,\n    // if they have been created a while after isMobile was broadcast.\n    // See VaRange.\n\n    this.$on('Va@requestIsMobile', function (val) {\n      if (val === true) {\n        _this3.broadcastIsMobile(_this3.pastMobileBreakpoint);\n      }\n    }); // Disconnections\n\n    this.$on('Va@sidebarDisconnect', function (val) {\n      if (val === true) {\n        _this3.haveSidebar = false;\n      }\n    });\n    this.$on('Va@minibarDisconnect', function (val) {\n      if (val === true) {\n        _this3.haveMinibar = false;\n      }\n    });\n    this.$on('Va@topbarDisconnect', function (val) {\n      if (val === true) {\n        _this3.haveTopbar = false;\n      }\n    });\n    this.$on('Va@pageDisconnect', function (val) {\n      if (val === true) {\n        _this3.havePage = false;\n      }\n    });\n  },\n  computed: {\n    styleObj: function styleObj() {\n      var bg = this.mBgColor;\n      var style = {};\n      style['background'] = bg;\n      style['position'] = 'fixed';\n      style['top'] = '0px';\n      style['right'] = '0px';\n      style['bottom'] = '0px';\n      style['left'] = '0px';\n      style['overflow'] = 'scroll';\n      return style;\n    }\n  }\n};",{"version":3,"sources":["VaLayoutManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :style=\"styleObj\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaLayoutManager',\n  mixins: [events],\n  props: {\n    desktopSidebarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopMinibarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopTopbarHeight: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileFriendly: {\n      type: Boolean,\n      default: true\n    },\n    mobileBreakpoint: {\n      type: Number,\n      default: 768,\n      required: false\n    },\n    mobileSidebarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileMinibarWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    mobileTopbarHeight: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    rtl: {\n      type: Boolean,\n      default: false\n    },\n    sidebarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    minibarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    topbarPriority: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    topbarPadded: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    split: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    reverse: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    desktopMargin: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    desktopMinimumWidth: {\n      type: [Number, String],\n      default: 0,\n      required: false\n    },\n    bgColor: {\n      type: String,\n      default: '#F4F5F7',\n      required: false\n    },\n    pageBgColor: {\n      type: String,\n      default: '#FFFFFF',\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let dDesktopMinimumWidth = this.desktopMinimumWidth\n    let dDesktopTopbarHeight = this.desktopTopbarHeight\n    let dDesktopMinibarWidth = this.desktopMinibarWidth\n    let dDesktopSidebarWidth = this.desktopSidebarWidth\n    let dMobileSidebarWidth = this.mobileSidebarWidth\n    let dMobileMinibarWidth = this.mobileMinibarWidth\n    let dMobileTopbarHeight = this.mobileTopbarHeight\n    let dSidebarPriority = this.sidebarPriority\n    let dMinibarPriority = this.minibarPriority\n    let currDesktopMargin = this.desktopMargin\n    let dTopbarPriority = this.topbarPriority\n    let dDesktopMargin = this.desktopMargin\n    let dTopbarPadded = this.topbarPadded\n    let dPageBgColor = this.pageBgColor\n    let dReverse = this.reverse\n    let dBgColor = this.bgColor\n    let dSplit = this.split\n    let dRtl = this.rtl\n    return {\n      mDesktopTopbarHeight: dDesktopTopbarHeight,\n      mDesktopMinimumWidth: dDesktopMinimumWidth,\n      mDesktopSidebarWidth: dDesktopSidebarWidth,\n      mDesktopMinibarWidth: dDesktopMinibarWidth,\n      mMobileSidebarWidth: dMobileSidebarWidth,\n      mMobileMinibarWidth: dMobileMinibarWidth,\n      mMobileTopbarHeight: dMobileTopbarHeight,\n      currentDesktopMargin: currDesktopMargin,\n      mMinibarPriority: dMinibarPriority,\n      mSidebarPriority: dSidebarPriority,\n      mTopbarPriority: dTopbarPriority,\n      mDesktopMargin: dDesktopMargin,\n      mTopbarPadded: dTopbarPadded,\n      pastMobileBreakpoint: false,\n      mPageBgColor: dPageBgColor,\n      allowMarginUpdates: true,\n      currentMinibarWidth: 0,\n      currentSidebarWidth: 0,\n      currentTopbarHeight: 0,\n      mMinibarTheme: 'blue',\n      mSidebarTheme: 'blue',\n      mTopbarTheme: 'blue',\n      mReverse: dReverse,\n      haveMinibar: false,\n      mShowToggle: false,\n      mBgColor: dBgColor,\n      haveSidebar: false,\n      haveTopbar: false,\n      mCompact: false,\n      havePage: false,\n      isMobile: false,\n      contentWidth: 0,\n      mPageSize: 'md',\n      mSplit: dSplit,\n      windowWidth: 0,\n      mRtl: dRtl\n    }\n  },\n  watch: {\n    pastMobileBreakpoint (val) {\n      this.broadcastIsMobile(val)\n      this.setAndBroadcastDimensions()\n    },\n    mDesktopSidebarWidth (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mDesktopMinibarWidth (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mDesktopTopbarHeight (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mMobileSidebarWidth (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mMobileMinibarWidth (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mMobileTopbarHeight (val) {\n      this.setAndBroadcastDimensions()\n    },\n    mRtl (val) {\n      this.broadcastIsRTL(val)\n    },\n    mSidebarPriority (val) {\n      this.broadcastSidebarPriority(val)\n    },\n    mMinibarPriority (val) {\n      this.broadcastMinibarPriority(val)\n    },\n    mTopbarPriority (val) {\n      this.broadcastTopbarPriority(val)\n    },\n    mTopbarPadded (val) {\n      this.broadcastTopbarPadded(val)\n    },\n    mBgColor (val) {\n      this.broadcastBgColor(val)\n    },\n    mPageBgColor (val) {\n      this.broadcastPageBgColor(val)\n    },\n    mSplit (val) {\n      this.broadcastIsSplit(val)\n    },\n    mReverse (val) {\n      this.broadcastIsReverse(val)\n    },\n    mCompact (val) {\n      this.broadcastCompact(val)\n    },\n    mShowToggle (val) {\n      this.broadcastShowToggle(val)\n    },\n    mDesktopMargin (val) {\n      /**\n       * Calling _handleResize here. Why? So a new contentWidth\n       * is calculated and broadcasted.\n       */\n      this._handleResize()\n      this.broadcastDesktopMargin(val)\n    },\n    mDesktopMinimumWidth (val) {\n      this.broadcastDesktopMinimumWidth(val)\n    },\n    windowWidth (val) {\n      this.broadcastWindowWidth(val)\n    },\n    contentWidth (val) {\n      this.broadcastContentWidth(val)\n    },\n    allowMarginUpdates (val) {\n      this.broadcastAllowMarginUpdates(val)\n    },\n    mPageSize (val) {\n      this.broadcastPageSize(val)\n    },\n    mTopbarTheme (val) {\n      this.broadcastTopbarTheme(val)\n    },\n    mMinibarTheme (val) {\n      this.broadcastMinibarTheme(val)\n    },\n    mSidebarTheme (val) {\n      this.broadcastSidebarTheme(val)\n    }\n  },\n  methods: {\n    _handleResize () {\n      let ww = window.innerWidth || document.body.clientWidth\n\n      if (parseInt(ww) < this.mobileBreakpoint) {\n        this.pastMobileBreakpoint = true\n      } else {\n        this.pastMobileBreakpoint ? this.pastMobileBreakpoint = false : true\n      }\n\n      this.windowWidth = parseInt(ww)\n      this.contentWidth = this.windowWidth - (this.mDesktopMargin * 2)\n    },\n    broadcastSidebarWidth (val) {\n      this.broadcast('VaSidebar', 'Va@sidebarWidthChange', val)\n      this.broadcast('VaMinibar', 'Va@sidebarWidthChange', val)\n      this.broadcast('VaTopbar', 'Va@sidebarWidthChange', val)\n      this.broadcast('VaPage', 'Va@sidebarWidthChange', val)\n    },\n    broadcastMinibarWidth (val) {\n      this.broadcast('VaSidebar', 'Va@minibarWidthChange', val)\n      this.broadcast('VaMinibar', 'Va@minibarWidthChange', val)\n      this.broadcast('VaTopbar', 'Va@minibarWidthChange', val)\n      this.broadcast('VaPage', 'Va@minibarWidthChange', val)\n    },\n    broadcastTopbarHeight (val) {\n      this.broadcast('VaSidebar', 'Va@topbarHeightChange', val)\n      this.broadcast('VaMinibar', 'Va@topbarHeightChange', val)\n      this.broadcast('VaTopbar', 'Va@topbarHeightChange', val)\n      this.broadcast('VaPage', 'Va@topbarHeightChange', val)\n    },\n    broadcastIsMobile (val) {\n      this.broadcast('VaSidebar', 'Va@sidebarIsMobile', val)\n      this.broadcast('VaMinibar', 'Va@minibarIsMobile', val)\n      this.broadcast('VaTopbar', 'Va@topbarIsMobile', val)\n      this.broadcast('VaPage', 'Va@pageIsMobile', val)\n      this.broadcast('VaRange', 'Va@rangeIsMobile', val)\n      this.broadcast('VaMobile', 'Va@mobileIsMobile', val)\n      this.broadcast('VaDesktop', 'Va@desktopIsMobile', val)\n    },\n    broadcastIsRTL (val) {\n      this.broadcast('VaSidebar', 'Va@rtlChange', val)\n      this.broadcast('VaMinibar', 'Va@rtlChange', val)\n      this.broadcast('VaTopbar', 'Va@rtlChange', val)\n      this.broadcast('VaPage', 'Va@rtlChange', val)\n    },\n    broadcastIsSplit (val) {\n      this.broadcast('VaSidebar', 'Va@splitChange', val)\n      this.broadcast('VaMinibar', 'Va@splitChange', val)\n      this.broadcast('VaTopbar', 'Va@splitChange', val)\n      this.broadcast('VaPage', 'Va@splitChange', val)\n    },\n    broadcastCompact (val) {\n      this.broadcast('VaSidebar', 'Va@compactChange', val)\n    },\n    broadcastShowToggle (val) {\n      this.broadcast('VaSidebar', 'Va@showToggleChange', val)\n      this.broadcast('VaSidebarGroupItem', 'Va@showToggleChange', val)\n      this.broadcast('VaSidebarGroupLevel', 'Va@showToggleChange', val)\n    },\n    broadcastBgColor (val) {\n      /**\n       * Nobody needs to know about BgColor.\n       * Only relevant to this component.\n       */\n    },\n    broadcastPageBgColor (val) {\n      this.broadcast('VaPage', 'Va@pageBgColorChange', val)\n    },\n    broadcastIsReverse (val) {\n      this.broadcast('VaSidebar', 'Va@reverseChange', val)\n      this.broadcast('VaMinibar', 'Va@reverseChange', val)\n      this.broadcast('VaTopbar', 'Va@reverseChange', val)\n      this.broadcast('VaPage', 'Va@reverseChange', val)\n    },\n    broadcastSidebarPriority (val) {\n      this.broadcast('VaSidebar', 'Va@sidebarPriorityChange', val)\n      this.broadcast('VaMinibar', 'Va@sidebarPriorityChange', val)\n      this.broadcast('VaTopbar', 'Va@sidebarPriorityChange', val)\n    },\n    broadcastMinibarPriority (val) {\n      this.broadcast('VaSidebar', 'Va@minibarPriorityChange', val)\n      this.broadcast('VaMinibar', 'Va@minibarPriorityChange', val)\n      this.broadcast('VaTopbar', 'Va@minibarPriorityChange', val)\n    },\n    broadcastTopbarPriority (val) {\n      this.broadcast('VaSidebar', 'Va@topbarPriorityChange', val)\n      this.broadcast('VaMinibar', 'Va@topbarPriorityChange', val)\n      this.broadcast('VaTopbar', 'Va@topbarPriorityChange', val)\n    },\n    broadcastTopbarPadded (val) {\n      this.broadcast('VaTopbar', 'Va@topbarPaddedChange', val)\n    },\n    broadcastDesktopMargin (val) {\n      this.broadcast('VaSidebar', 'Va@desktopMarginChange', val)\n      this.broadcast('VaMinibar', 'Va@desktopMarginChange', val)\n      this.broadcast('VaTopbar', 'Va@desktopMarginChange', val)\n      this.broadcast('VaPage', 'Va@desktopMarginChange', val)\n    },\n    broadcastDesktopMinimumWidth (val) {\n      this.broadcast('VaSidebar', 'Va@desktopMinimumWidthChange', val)\n      this.broadcast('VaMinibar', 'Va@desktopMinimumWidthChange', val)\n      this.broadcast('VaTopbar', 'Va@desktopMinimumWidthChange', val)\n      this.broadcast('VaPage', 'Va@desktopMinimumWidthChange', val)\n    },\n    broadcastAllowMarginUpdates (val) {\n    },\n    broadcastWindowWidth (val) {\n      this.broadcast('VaSidebar', 'Va@windowWidthChange', val)\n      this.broadcast('VaMinibar', 'Va@windowWidthChange', val)\n      this.broadcast('VaTopbar', 'Va@windowWidthChange', val)\n      this.broadcast('VaPage', 'Va@windowWidthChange', val)\n    },\n    broadcastContentWidth (val) {\n      this.broadcast('VaSidebar', 'Va@contentWidthChange', val)\n      this.broadcast('VaMinibar', 'Va@contentWidthChange', val)\n      this.broadcast('VaTopbar', 'Va@contentWidthChange', val)\n      this.broadcast('VaPage', 'Va@contentWidthChange', val)\n    },\n    broadcastPageSize (val) {\n      this.broadcast('VaPage', 'Va@pageSizeChange', val)\n    },\n    broadcastTopbarTheme (val) {\n      this.broadcast('VaTopbar', 'Va@topbarThemeChange', val)\n    },\n    broadcastSidebarTheme (val) {\n      this.broadcast('VaSidebar', 'Va@sidebarThemeChange', val)\n    },\n    broadcastMinibarTheme (val) {\n      this.broadcast('VaMinibar', 'Va@minibarThemeChange', val)\n    },\n    checkForPresenceOfTopbar () {\n      this.broadcast('VaTopbar', 'Va@topbarPresenceCheck', true)\n    },\n    checkForPresenceOfSidebar () {\n      this.broadcast('VaSidebar', 'Va@sidebarPresenceCheck', true)\n    },\n    checkForPresenceOfMinibar () {\n      this.broadcast('VaMinibar', 'Va@minibarPresenceCheck', true)\n    },\n    checkForPresenceOfPage () {\n      this.broadcast('VaPage', 'Va@pagePresenceCheck', true)\n    },\n    setAndBroadcastDimensions () {\n      if (this.pastMobileBreakpoint) {\n        this.currentTopbarHeight = this.mMobileTopbarHeight\n        this.currentMinibarWidth = this.mMobileMinibarWidth\n        this.currentSidebarWidth = this.mMobileSidebarWidth\n      } else {\n        this.currentTopbarHeight = this.mDesktopTopbarHeight\n        this.currentMinibarWidth = this.mDesktopMinibarWidth\n        this.currentSidebarWidth = this.mDesktopSidebarWidth\n      }\n      this.broadcastSidebarWidth(this.currentSidebarWidth)\n      this.broadcastMinibarWidth(this.currentMinibarWidth)\n      this.broadcastTopbarHeight(this.currentTopbarHeight)\n    },\n    enableReceivers () {\n      /**\n       * These exist for VaLayoutManagerConfig.\n       *\n       * Setting these values should trigger the 'watch' on each of them,\n       * which in turn calls the value's respective broadcast function,\n       * broadcasting the new value to whatever has implemented a\n       * LayoutManager.\n       */\n      this.$on('Va@configDesktopTopbarHeightChange', (val) => { this.mDesktopTopbarHeight = val })\n      this.$on('Va@configDesktopMinibarWidthChange', (val) => { this.mDesktopMinibarWidth = val })\n      this.$on('Va@configDesktopMinimumWidthChange', (val) => { this.mDesktopMinimumWidth = val })\n      this.$on('Va@configDesktopSidebarWidthChange', (val) => { this.mDesktopSidebarWidth = val })\n      this.$on('Va@configMobileTopbarHeightChange', (val) => { this.mMobileTopbarHeight = val })\n      this.$on('Va@configMobileSidebarWidth', (val) => { this.mMobileSidebarWidth = val })\n      this.$on('Va@configMobileMinibarWidth', (val) => { this.mMobileMinibarWidth = val })\n      this.$on('Va@configSidebarPriorityChange', (val) => { this.mSidebarPriority = val })\n      this.$on('Va@configMinibarPriorityChange', (val) => { this.mMinibarPriority = val })\n      this.$on('Va@configTopbarPriorityChange', (val) => { this.mTopbarPriority = val })\n      this.$on('Va@configDesktopMarginChange', (val) => { this.mDesktopMargin = val })\n      this.$on('Va@configTopbarPaddedChange', (val) => { this.mTopbarPadded = val })\n      this.$on('Va@configMinibarThemeChange', (val) => { this.mMinibarTheme = val })\n      this.$on('Va@configSidebarThemeChange', (val) => { this.mSidebarTheme = val })\n      this.$on('Va@configTopbarThemeChange', (val) => { this.mTopbarTheme = val })\n      this.$on('Va@configPageBgColorChange', (val) => { this.mPageBgColor = val })\n      this.$on('Va@configShowToggleChange', (val) => { this.mShowToggle = val })\n      this.$on('Va@configPageSizeChange', (val) => { this.mPageSize = val })\n      this.$on('Va@configCompactChange', (val) => { this.mCompact = val })\n      this.$on('Va@configReverseChange', (val) => { this.mReverse = val })\n      this.$on('Va@configBgColorChange', (val) => { this.mBgColor = val })\n      this.$on('Va@configSplitChange', (val) => { this.mSplit = val })\n      this.$on('Va@configRtlChange', (val) => { this.mRtl = val })\n    },\n    broadcastDefaultsToConfig () {\n      setTimeout(() => {\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopTopbarHeight', this.mDesktopTopbarHeight)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMinibarWidth', this.mDesktopMinibarWidth)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMinimumWidth', this.mDesktopMinimumWidth)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopSidebarWidth', this.mDesktopSidebarWidth)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileSidebarWidth', this.mMobileSidebarWidth)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileMinibarWidth', this.mMobileMinibarWidth)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMobileTopbarHeight', this.mMobileTopbarHeight)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSidebarPriority', this.mSidebarPriority)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMinibarPriority', this.mMinibarPriority)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarPriority', this.mTopbarPriority)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveDesktopMargin', this.mDesktopMargin)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarPadded', this.mTopbarPadded)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveMinibarTheme', this.mMinibarTheme)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSidebarTheme', this.mSidebarTheme)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveTopbarTheme', this.mTopbarTheme)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceivePageBgColor', this.mPageBgColor)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveShowToggle', this.mShowToggle)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceivePageSize', this.mPageSize)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveCompact', this.mCompact)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveReverse', this.mReverse)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveBgColor', this.mBgColor)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveSplit', this.mSplit)\n        this.broadcast('VaLayoutManagerConfig', 'Va@configReceiveRtl', this.mRtl)\n      }, 100)\n    }\n  },\n  mounted () {\n    window.addEventListener('resize', this._handleResize, false)\n    /**\n     * Call the handler function directly instead of instantiating a resize\n     * event like so: window.dispatchEvent(new Event('resize'))\n     *\n     * Benefit is.. ? Browser compatibility? I dunno.\n     */\n    this._handleResize()\n\n    /**\n     * Mobility check.\n     */\n    this.setAndBroadcastDimensions()\n\n    /**\n     * Presence checks. As of now, this is not really used for\n     * anything. Maybe in the future?\n     */\n    this.checkForPresenceOfSidebar()\n    this.checkForPresenceOfTopbar()\n    this.checkForPresenceOfPage()\n\n    /**\n     * Broadcast props that were passed to the components\n     * that need to do stuff based on their values.\n     */\n    this.broadcastDesktopMinimumWidth(this.mDesktopMinimumWidth)\n    this.broadcastMinibarPriority(this.mMinibarPriority)\n    this.broadcastSidebarPriority(this.mSidebarPriority)\n    this.broadcastTopbarPriority(this.mTopbarPriority)\n    this.broadcastDesktopMargin(this.mDesktopMargin)\n    this.broadcastTopbarPadded(this.mTopbarPadded)\n    this.broadcastContentWidth(this.contentWidth)\n    this.broadcastPageBgColor(this.mPageBgColor)\n    this.broadcastWindowWidth(this.windowWidth)\n    this.broadcastIsReverse(this.mReverse)\n    this.broadcastIsSplit(this.mSplit)\n    this.broadcastIsRTL(this.mRtl)\n\n    /**\n     * --------------------------------------------------\n     * Methods related to VaLayoutManagerConfig\n     *\n     * enableReceivers() exists so that VaLayoutManagerConfig\n     * can talk to VaLayoutManager.\n     */\n    this.enableReceivers()\n\n    /**\n     * broadcastDefaultsToConfig() sends default values to\n     * VaLayoutManagerConfig, in case some values weren't specified.\n     */\n    this.broadcastDefaultsToConfig()\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this._handleResize, false)\n  },\n  created () {\n    // Presence replies\n    this.$on('Va@minibarPresenceReply', (val) => { if (val === true) { this.haveMinibar = true } })\n    this.$on('Va@sidebarPresenceReply', (val) => { if (val === true) { this.haveSidebar = true } })\n    this.$on('Va@topbarPresenceReply', (val) => { if (val === true) { this.haveTopbar = true } })\n    this.$on('Va@pagePresenceReply', (val) => { if (val === true) { this.havePage = true } })\n\n    // Listen for Sidebar width change - implemented when Sidebar's resizer was implemented\n    // this.$on('Va@sidebarWidthChange', (val) => {\n    //   this.broadcastSidebarWidth(val)\n    // })\n\n    // Some components might want to request the isMobile status, for example,\n    // if they have been created a while after isMobile was broadcast.\n    // See VaRange.\n    this.$on('Va@requestIsMobile', (val) => { if (val === true) { this.broadcastIsMobile(this.pastMobileBreakpoint) } })\n\n    // Disconnections\n    this.$on('Va@sidebarDisconnect', (val) => { if (val === true) { this.haveSidebar = false } })\n    this.$on('Va@minibarDisconnect', (val) => { if (val === true) { this.haveMinibar = false } })\n    this.$on('Va@topbarDisconnect', (val) => { if (val === true) { this.haveTopbar = false } })\n    this.$on('Va@pageDisconnect', (val) => { if (val === true) { this.havePage = false } })\n  },\n  computed: {\n    styleObj () {\n      let bg = this.mBgColor\n      let style = {}\n\n      style['background'] = bg\n      style['position'] = 'fixed'\n      style['top'] = '0px'\n      style['right'] = '0px'\n      style['bottom'] = '0px'\n      style['left'] = '0px'\n      style['overflow'] = 'scroll'\n\n      return style\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/LayoutManager"}]}