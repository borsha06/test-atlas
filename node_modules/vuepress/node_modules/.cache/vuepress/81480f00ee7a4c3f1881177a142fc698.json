{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxBtn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxBtn.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport events from '../utils/events';\nexport default {\n  name: 'VaCheckboxBtn',\n  mixins: [events],\n  props: {\n    value: {\n      type: String\n    },\n    label: {\n      type: [String, Number]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls;\n      var klass = {};\n      klass[prefixCls + '-checked-btn'] = true;\n      return klass;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.currentChecked = val;\n    },\n    checked: function checked(val) {\n      this.currentChecked = val;\n    },\n    currentChecked: function currentChecked(val) {\n      this.$emit('input', val);\n    }\n  },\n  data: function data() {\n    var checked = this.checked;\n\n    if (checked !== undefined) {\n      this.$emit('input', checked);\n    } else {\n      checked = !!this.value;\n    }\n\n    return {\n      currentChecked: checked\n    };\n  },\n  methods: {\n    handleClick: function handleClick() {\n      this.currentChecked = !this.currentChecked;\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this);\n      this.$emit('change', this.currentChecked);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('Va@checkboxgroupChange', function (val) {\n      _this.currentChecked = val.indexOf(_this.label) > -1;\n    });\n  }\n};",{"version":3,"sources":["VaCheckboxBtn.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,OAAA,MAAA,MAAA,iBAAA;AAEA,eAAA;AACA,QAAA,eADA;AAEA,UAAA,CAAA,MAAA,CAFA;AAGA,SAAA;AACA,WAAA;AACA,YAAA;AADA,KADA;AAIA,WAAA;AACA,YAAA,CAAA,MAAA,EAAA,MAAA;AADA,KAJA;AAOA,aAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAPA;AAWA,cAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAXA;AAeA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAfA,GAHA;AAuBA,YAAA;AACA,YADA,sBACA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAEA,UAAA,QAAA,EAAA;AAEA,YAAA,YAAA,cAAA,IAAA,IAAA;AAEA,aAAA,KAAA;AACA;AARA,GAvBA;AAiCA,SAAA;AACA,SADA,iBACA,GADA,EACA;AACA,WAAA,cAAA,GAAA,GAAA;AACA,KAHA;AAIA,WAJA,mBAIA,GAJA,EAIA;AACA,WAAA,cAAA,GAAA,GAAA;AACA,KANA;AAOA,kBAPA,0BAOA,GAPA,EAOA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AATA,GAjCA;AA4CA,MA5CA,kBA4CA;AACA,QAAA,UAAA,KAAA,OAAA;;AACA,QAAA,YAAA,SAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,OAAA;AACA,KAFA,MAEA;AACA,gBAAA,CAAA,CAAA,KAAA,KAAA;AACA;;AAEA,WAAA;AACA,sBAAA;AADA,KAAA;AAGA,GAvDA;AAwDA,WAAA;AACA,eADA,yBACA;AACA,WAAA,cAAA,GAAA,CAAA,KAAA,cAAA;AACA,WAAA,QAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,IAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,cAAA;AACA;AALA,GAxDA;AA+DA,SA/DA,qBA+DA;AAAA;;AACA,SAAA,GAAA,CAAA,wBAAA,EAAA,UAAA,GAAA,EAAA;AACA,YAAA,cAAA,GAAA,IAAA,OAAA,CAAA,MAAA,KAAA,IAAA,CAAA,CAAA;AACA,KAFA;AAGA;AAnEA,CAAA","sourcesContent":["<template>\n  <va-button\n    @click.prevent.native=\"handleClick\"\n    :class=\"classObj\"\n    :disabled=\"disabled\"\n    :type=\"currentChecked ? 'primary' : 'default'\">\n    <slot />\n  </va-button>\n</template>\n\n<script>\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaCheckboxBtn',\n  mixins: [events],\n  props: {\n    value: {\n      type: String\n    },\n    label: {\n      type: [String, Number]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls} = this\n      let klass = {}\n\n      klass[prefixCls + '-checked-btn'] = true\n\n      return klass\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentChecked = val\n    },\n    checked (val) {\n      this.currentChecked = val\n    },\n    currentChecked (val) {\n      this.$emit('input', val)\n    }\n  },\n  data () {\n    let checked = this.checked\n    if (checked !== undefined) {\n      this.$emit('input', checked)\n    } else {\n      checked = !!this.value\n    }\n\n    return {\n      currentChecked: checked\n    }\n  },\n  methods: {\n    handleClick () {\n      this.currentChecked = !this.currentChecked\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this)\n      this.$emit('change', this.currentChecked)\n    }\n  },\n  created () {\n    this.$on('Va@checkboxgroupChange', (val) => {\n      this.currentChecked = val.indexOf(this.label) > -1\n    })\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Checkbox"}]}