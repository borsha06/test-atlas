{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Sidebar/VaSidebarGroupItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Sidebar/VaSidebarGroupItem.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaSidebarGroupItem',\n  props: {\n    item: {\n      type: Object\n    },\n    isOpen: {\n      type: Boolean,\n      default: false\n    },\n    showToggle: {\n      type: Boolean,\n      default: false\n    },\n    toggleType: {\n      type: String,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let s = this.showToggle\n    return {\n      st: s,\n      minified: false\n    }\n  },\n  created () {\n    this.$on('Va@showToggleChange', (val) => {\n      this.st = val\n    })\n  },\n  computed: {\n    itemHasMethod () {\n      return this.item.method !== undefined\n    },\n    itemMethod () {\n      if (this.itemHasMethod) {\n        return {\n          click: this.item.method\n        }\n      }\n    },\n    showIcon () {\n      return this.item.icon !== undefined\n    },\n    showLabel () {\n      return (\n        this.item.route === undefined &&\n        this.item.element === undefined &&\n        this.item.external === undefined\n      )\n    },\n    showLink () {\n      return this.item.route !== undefined || this.item.element !== undefined\n    },\n    showHyperLink () {\n      return this.showLink && this.$router === undefined\n    },\n    showExternalHyperLink () {\n      return this.item.external !== undefined\n    },\n    showRouterLink () {\n      return this.showLink && this.$router !== undefined\n    },\n    classObj () {\n      let {prefixCls, minified} = this\n      let klass = {}\n\n      klass[prefixCls + '-sidebar-group-item-text'] = true\n      klass[prefixCls + '-sidebar-group-item-minified'] = minified\n\n      return klass\n    }\n  },\n  methods: {\n    setAsActiveIfActive () {\n      let parentElement = this.$refs.itemText.parentElement\n      if (parentElement.classList) {\n        if (parentElement.classList.contains('active')) {\n          parentElement.classList.remove('active')\n        }\n      }\n      if (this.item.route !== undefined) {\n        if (this.$route.path !== undefined) {\n          if (this.item.route === this.$route.path) {\n            if (parentElement.classList) {\n              parentElement.classList.add('active')\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    item () {\n    },\n    $route () {\n      this.setAsActiveIfActive()\n    }\n  },\n  mounted () {\n    if (!this.$router) {\n      window.addEventListener('hashchange', () => {\n        // todo\n      })\n    }\n\n    this.setAsActiveIfActive()\n  }\n}\n",{"version":3,"sources":["VaSidebarGroupItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"VaSidebarGroupItem.vue","sourceRoot":"node_modules/vue-atlas/src/Sidebar","sourcesContent":["<!--\n * Original implementation by MisRob and released under the MIT license.\n * https://github.com/MisRob/vue-tree-navigation\n * Modified for use with vue-atlas\n */\n-->\n<template>\n  <span :class=\"classObj\" ref=\"itemText\" v-on=\"itemMethod\">\n\n    <!-- The toggle icon -->\n    <span v-if=\"st && toggleType === 'circle'\" :class=\"`${prefixCls}-sidebar-group-item-text-icon`\">\n      <va-icon type=\"circle\"></va-icon>\n    </span>\n\n    <!-- The item's FontAwesome icon, if any -->\n    <span v-if=\"showIcon\" :class=\"`${prefixCls}-sidebar-group-item-icon`\">\n      <va-icon v-if=\"item.iconColor\" :type=\"item.icon\" :color=\"item.iconColor\" :size=\"item.iconSize\" :icon-style=\"item.iconStyle\"></va-icon>\n      <va-icon v-else :type=\"item.icon\" :size=\"item.iconSize\" :icon-style=\"item.iconStyle\"></va-icon>\n    </span>\n\n    <!-- If this is just a label -->\n    <span v-if=\"showLabel\" :class=\"`${prefixCls}-sidebar-group-item-label`\">\n      {{item.name}}\n      <span v-if=\"item.sub\" :class=\"`${prefixCls}-sidebar-group-item-substring`\">{{item.sub}}</span>\n    </span>\n\n    <!-- If this is a router link -->\n    <router-link v-if=\"showRouterLink\" :to=\"item.meta.target\" :class=\"`${prefixCls}-sidebar-group-item-router-link`\">\n      {{item.name}}\n      <span v-if=\"item.sub\" :class=\"`${prefixCls}-sidebar-group-item-substring`\">{{item.sub}}</span>\n    </router-link>\n\n    <!-- If this is a hyperlink -->\n    <a v-if=\"showHyperLink\" :href=\"item.meta.target\" :class=\"`${prefixCls}-sidebar-group-item-link`\">\n      {{item.name}}\n      <span v-if=\"item.sub\" :class=\"`${prefixCls}-sidebar-group-item-substring`\">{{item.sub}}</span>\n    </a>\n\n    <!-- If this is an external hyperlink -->\n    <a v-if=\"showExternalHyperLink\" :href=\"item.meta.target\" target=\"_blank\" :class=\"`${prefixCls}-sidebar-group-item-external-link`\">\n      {{item.name}}\n      <span v-if=\"item.sub\" :class=\"`${prefixCls}-sidebar-group-item-substring`\">{{item.sub}}</span>\n    </a>\n\n    <!-- If there's a lozenge -->\n    <span v-if=\"item.lozenge\" style=\"display: flex;\">\n      <va-lozenge uppercase :type=\"item.lozenge.type\">{{item.lozenge.text}}</va-lozenge>\n    </span>\n\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'VaSidebarGroupItem',\n  props: {\n    item: {\n      type: Object\n    },\n    isOpen: {\n      type: Boolean,\n      default: false\n    },\n    showToggle: {\n      type: Boolean,\n      default: false\n    },\n    toggleType: {\n      type: String,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let s = this.showToggle\n    return {\n      st: s,\n      minified: false\n    }\n  },\n  created () {\n    this.$on('Va@showToggleChange', (val) => {\n      this.st = val\n    })\n  },\n  computed: {\n    itemHasMethod () {\n      return this.item.method !== undefined\n    },\n    itemMethod () {\n      if (this.itemHasMethod) {\n        return {\n          click: this.item.method\n        }\n      }\n    },\n    showIcon () {\n      return this.item.icon !== undefined\n    },\n    showLabel () {\n      return (\n        this.item.route === undefined &&\n        this.item.element === undefined &&\n        this.item.external === undefined\n      )\n    },\n    showLink () {\n      return this.item.route !== undefined || this.item.element !== undefined\n    },\n    showHyperLink () {\n      return this.showLink && this.$router === undefined\n    },\n    showExternalHyperLink () {\n      return this.item.external !== undefined\n    },\n    showRouterLink () {\n      return this.showLink && this.$router !== undefined\n    },\n    classObj () {\n      let {prefixCls, minified} = this\n      let klass = {}\n\n      klass[prefixCls + '-sidebar-group-item-text'] = true\n      klass[prefixCls + '-sidebar-group-item-minified'] = minified\n\n      return klass\n    }\n  },\n  methods: {\n    setAsActiveIfActive () {\n      let parentElement = this.$refs.itemText.parentElement\n      if (parentElement.classList) {\n        if (parentElement.classList.contains('active')) {\n          parentElement.classList.remove('active')\n        }\n      }\n      if (this.item.route !== undefined) {\n        if (this.$route.path !== undefined) {\n          if (this.item.route === this.$route.path) {\n            if (parentElement.classList) {\n              parentElement.classList.add('active')\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    item () {\n    },\n    $route () {\n      this.setAsActiveIfActive()\n    }\n  },\n  mounted () {\n    if (!this.$router) {\n      window.addEventListener('hashchange', () => {\n        // todo\n      })\n    }\n\n    this.setAsActiveIfActive()\n  }\n}\n</script>\n"]}]}