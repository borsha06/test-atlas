{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Badge/VaBadge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Badge/VaBadge.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaBadge',\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      required: false,\n      validator (v) {\n        return [\n          'default',\n          'primary',\n          'success',\n          'info',\n          'warning',\n          'danger'\n        ].includes(v)\n      },\n      note: 'The style of badge to render.'\n    },\n    margin: {\n      type: String,\n      default: '0px',\n      required: false,\n      note: 'Margin to be applied to the outside of the badge element.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, type} = this\n      let klass = {}\n\n      klass[prefixCls + '-badge'] = true\n      klass[prefixCls + '-badge-' + type] = true\n\n      return klass\n    }\n  }\n}\n",{"version":3,"sources":["VaBadge.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"VaBadge.vue","sourceRoot":"node_modules/vue-atlas/src/Badge","sourcesContent":["<template>\n  <span :class=\"classObj\" :style=\"{margin:margin}\">\n    <slot />\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'VaBadge',\n  props: {\n    type: {\n      type: String,\n      default: 'default',\n      required: false,\n      validator (v) {\n        return [\n          'default',\n          'primary',\n          'success',\n          'info',\n          'warning',\n          'danger'\n        ].includes(v)\n      },\n      note: 'The style of badge to render.'\n    },\n    margin: {\n      type: String,\n      default: '0px',\n      required: false,\n      note: 'Margin to be applied to the outside of the badge element.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, type} = this\n      let klass = {}\n\n      klass[prefixCls + '-badge'] = true\n      klass[prefixCls + '-badge-' + type] = true\n\n      return klass\n    }\n  }\n}\n</script>\n"]}]}