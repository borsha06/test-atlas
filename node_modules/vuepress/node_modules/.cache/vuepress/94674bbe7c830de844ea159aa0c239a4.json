{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/ProgressTracker/VaProgressTracker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/ProgressTracker/VaProgressTracker.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'VaProgressTracker',\n  props: {\n    labels: {\n      type: Array,\n      required: true\n    },\n    current: {\n      type: Number,\n      default: 1\n    },\n    round: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  methods: {\n    getClassFromIndex: function getClassFromIndex(index) {\n      var ret = '';\n\n      if (index === this.current - 1) {\n        ret = 'current';\n      } else if (index < this.current - 1) {\n        ret = 'finished';\n      } else {\n        ret = 'todo';\n      }\n\n      return this.prefixCls + '-steps-' + ret;\n    }\n  }\n};",{"version":3,"sources":["VaProgressTracker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,eAAA;AACA,QAAA,mBADA;AAEA,SAAA;AACA,YAAA;AACA,YAAA,KADA;AAEA,gBAAA;AAFA,KADA;AAKA,aAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KALA;AASA,WAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KATA;AAaA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAbA,GAFA;AAoBA,WAAA;AACA,qBADA,6BACA,KADA,EACA;AACA,UAAA,MAAA,EAAA;;AAEA,UAAA,UAAA,KAAA,OAAA,GAAA,CAAA,EAAA;AACA,cAAA,SAAA;AACA,OAFA,MAEA,IAAA,QAAA,KAAA,OAAA,GAAA,CAAA,EAAA;AACA,cAAA,UAAA;AACA,OAFA,MAEA;AACA,cAAA,MAAA;AACA;;AAEA,aAAA,KAAA,SAAA,GAAA,SAAA,GAAA,GAAA;AACA;AAbA;AApBA,CAAA","sourcesContent":["<template>\n  <ul v-if=\"round\" :class=\"`${prefixCls}-steps-round-con`\">\n    <template v-for=\"(label, index) in labels\">\n      <li :class=\"[getClassFromIndex(index)]\" :key=\"index\">\n        <div :class=\"`${prefixCls}-steps-wrap`\">\n          <div :class=\"`${prefixCls}-steps-round`\">\n            <!-- {{index + 1}} -->\n          </div>\n        </div>\n        <label>{{label}}</label>\n      </li>\n    </template>\n  </ul>\n\n  <div v-else :class=\"`${prefixCls}-steps clearfix`\">\n    <template v-for=\"(label, index) in labels\">\n      <div :class=\"`${prefixCls}-steps-wrap`\" :key=\"index\">\n        <div :class=\"getClassFromIndex(index)\">\n          <label>\n            <span :class=\"`${prefixCls}-steps-round`\">\n              <!-- {{index + 1}} -->\n            </span>\n            <span>{{label}}</span>\n          </label>\n          <template v-if=\"index < labels.length - 1\">\n            <i :class=\"`${prefixCls}-steps-triangle-right-bg`\"></i>\n            <i :class=\"`${prefixCls}-steps-triangle-right`\"></i>\n          </template>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaProgressTracker',\n  props: {\n    labels: {\n      type: Array,\n      required: true\n    },\n    current: {\n      type: Number,\n      default: 1\n    },\n    round: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  methods: {\n    getClassFromIndex (index) {\n      let ret = ''\n\n      if (index === this.current - 1) {\n        ret = 'current'\n      } else if (index < this.current - 1) {\n        ret = 'finished'\n      } else {\n        ret = 'todo'\n      }\n\n      return this.prefixCls + '-steps-' + ret\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/ProgressTracker"}]}