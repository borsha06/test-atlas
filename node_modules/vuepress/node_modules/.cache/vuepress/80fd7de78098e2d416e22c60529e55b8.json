{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Tabs/VaTabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Tabs/VaTabs.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ExpiringStorage from '../utils/ExpiringStorage';\nexport default {\n  name: 'VaTabs',\n  props: {\n    cacheLifetime: {\n      type: Number,\n      default: 5,\n      required: false\n    },\n    options: {\n      type: Object,\n      required: false,\n      default: function _default() {\n        return {\n          useUrlFragment: false\n        };\n      }\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      tabs: [],\n      activeTabHash: ''\n    };\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls;\n      var klass = {};\n      klass['clearfix'] = true;\n      klass[prefixCls + '-nav-tabs'] = true;\n      return klass;\n    },\n    storageKey: function storageKey() {\n      return \"va-tabs.cache.\".concat(window.location.host).concat(window.location.pathname);\n    }\n  },\n  created: function created() {\n    this.tabs = this.$children;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('hashchange', function () {\n      return _this.selectTab(window.location.hash);\n    });\n\n    if (this.findTab(window.location.hash)) {\n      this.selectTab(window.location.hash);\n      return;\n    }\n\n    var previousSelectedTabHash = ExpiringStorage.get(this.storageKey);\n\n    if (this.findTab(previousSelectedTabHash)) {\n      this.selectTab(previousSelectedTabHash);\n      return;\n    }\n\n    if (this.tabs.length) {\n      this.selectTab(this.tabs[0].hash);\n    }\n  },\n  methods: {\n    findTab: function findTab(hash) {\n      return this.tabs.find(function (tab) {\n        return tab.hash === hash;\n      });\n    },\n    selectTab: function selectTab(selectedTabHash, event) {\n      if (event && !this.options.useUrlFragment) {\n        event.preventDefault();\n      }\n\n      var selectedTab = this.findTab(selectedTabHash);\n\n      if (!selectedTab) {\n        return;\n      }\n\n      if (selectedTab.isDisabled) {\n        return;\n      }\n\n      this.tabs.forEach(function (tab) {\n        tab.isActive = tab.hash === selectedTab.hash;\n      });\n      this.$emit('changed', {\n        tab: selectedTab\n      });\n      this.activeTabHash = selectedTab.hash;\n      ExpiringStorage.set(this.storageKey, selectedTab.hash, this.cacheLifetime);\n    },\n    setTabVisible: function setTabVisible(hash, visible) {\n      var tab = this.findTab(hash);\n\n      if (!tab) {\n        return;\n      }\n\n      tab.isVisible = visible;\n\n      if (tab.isActive) {\n        tab.isActive = visible;\n        this.tabs.every(function (tab, index, array) {\n          if (tab.isVisible) {\n            tab.isActive = true;\n            return false;\n          }\n\n          return true;\n        });\n      }\n    },\n    liclassObj: function liclassObj(tab) {\n      var prefixCls = this.prefixCls;\n      var klass = {};\n      klass[prefixCls + '-nav-tab'] = true;\n      klass[prefixCls + '-nav-tab-active'] = tab.isActive;\n      return klass;\n    },\n    disabledTabClass: function disabledTabClass(tab) {\n      if (tab.isDisabled) {\n        return this.prefixCls + '-nav-tab-disabled';\n      } else {\n        return '';\n      }\n    }\n  }\n};",{"version":3,"sources":["VaTabs.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <ul :class=\"classObj\">\n      <li\n        v-for=\"(tab, i) in tabs\"\n        :key=\"i\"\n        :class=\"[liclassObj(tab), disabledTabClass(tab)]\"\n        v-show=\"tab.isVisible\">\n        <a\n          v-html=\"tab.header\"\n          @click=\"selectTab(tab.hash, $event)\"\n          :href=\"tab.hash\">\n        </a>\n      </li>\n    </ul>\n    <div :class=\"`${prefixCls}-tab-content`\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ExpiringStorage from '../utils/ExpiringStorage'\n\nexport default {\n  name: 'VaTabs',\n  props: {\n    cacheLifetime: {\n      type: Number,\n      default: 5,\n      required: false\n    },\n    options: {\n      type: Object,\n      required: false,\n      default: () => ({\n        useUrlFragment: false\n      })\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      tabs: [],\n      activeTabHash: ''\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls} = this\n      let klass = {}\n\n      klass['clearfix'] = true\n      klass[prefixCls + '-nav-tabs'] = true\n\n      return klass\n    },\n    storageKey () {\n      return `va-tabs.cache.${window.location.host}${window.location.pathname}`\n    }\n  },\n  created () {\n    this.tabs = this.$children\n  },\n  mounted () {\n    window.addEventListener('hashchange', () => this.selectTab(window.location.hash))\n\n    if (this.findTab(window.location.hash)) {\n      this.selectTab(window.location.hash)\n      return\n    }\n\n    const previousSelectedTabHash = ExpiringStorage.get(this.storageKey)\n\n    if (this.findTab(previousSelectedTabHash)) {\n      this.selectTab(previousSelectedTabHash)\n      return\n    }\n\n    if (this.tabs.length) {\n      this.selectTab(this.tabs[0].hash)\n    }\n  },\n  methods: {\n    findTab (hash) {\n      return this.tabs.find(tab => tab.hash === hash)\n    },\n    selectTab (selectedTabHash, event) {\n      if (event && !this.options.useUrlFragment) {\n        event.preventDefault()\n      }\n\n      const selectedTab = this.findTab(selectedTabHash)\n\n      if (!selectedTab) {\n        return\n      }\n\n      if (selectedTab.isDisabled) {\n        return\n      }\n\n      this.tabs.forEach(tab => {\n        tab.isActive = (tab.hash === selectedTab.hash)\n      })\n\n      this.$emit('changed', { tab: selectedTab })\n\n      this.activeTabHash = selectedTab.hash\n\n      ExpiringStorage.set(this.storageKey, selectedTab.hash, this.cacheLifetime)\n    },\n    setTabVisible (hash, visible) {\n      const tab = this.findTab(hash)\n\n      if (!tab) {\n        return\n      }\n\n      tab.isVisible = visible\n\n      if (tab.isActive) {\n        tab.isActive = visible\n\n        this.tabs.every((tab, index, array) => {\n          if (tab.isVisible) {\n            tab.isActive = true\n            return false\n          }\n          return true\n        })\n      }\n    },\n    liclassObj (tab) {\n      let {prefixCls} = this\n      let klass = {}\n\n      klass[prefixCls + '-nav-tab'] = true\n      klass[prefixCls + '-nav-tab-active'] = tab.isActive\n\n      return klass\n    },\n    disabledTabClass (tab) {\n      if (tab.isDisabled) {\n        return this.prefixCls + '-nav-tab-disabled'\n      } else {\n        return ''\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Tabs"}]}