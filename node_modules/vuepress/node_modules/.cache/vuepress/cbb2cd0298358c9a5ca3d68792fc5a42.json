{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckbox.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport events from '../utils/events';\nimport validationMixin from '../Mixin/validationMixin';\nimport validate from '../validate';\nexport default {\n  name: 'VaCheckbox',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: [String, Boolean]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: [String, Number]\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  components: {\n    validate: validate\n  },\n  data: function data() {\n    var checked = this.checked;\n\n    if (checked !== undefined) {\n      this.$emit('input', checked);\n    } else {\n      checked = !!this.value;\n    }\n\n    return {\n      currentChecked: checked\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.currentChecked = val;\n    },\n    checked: function checked(val) {\n      this.currentChecked = val;\n    },\n    currentChecked: function currentChecked(val) {\n      this.$emit('input', val);\n    }\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          currentChecked = this.currentChecked,\n          disabled = this.disabled;\n      var klass = {};\n      klass[prefixCls + '-checkbox-label'] = true;\n      klass[prefixCls + '-checkbox-checked'] = currentChecked;\n      klass[prefixCls + '-checkbox-disabled'] = disabled;\n      return klass;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('Va@checkboxgroupChange', function (val) {\n      _this.currentChecked = val.indexOf(_this.label) > -1;\n    });\n  },\n  methods: {\n    handleClick: function handleClick() {\n      this.currentChecked = !this.currentChecked;\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this);\n      this.$emit('change', this.currentChecked);\n    },\n    enterPressed: function enterPressed() {\n      this.handleClick();\n    }\n  }\n};",{"version":3,"sources":["VaCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,eAAA,MAAA,0BAAA;AACA,OAAA,QAAA,MAAA,aAAA;AAEA,eAAA;AACA,QAAA,YADA;AAEA,UAAA,CAAA,eAAA,EAAA,MAAA,CAFA;AAGA,SAAA;AACA,WAAA;AACA,YAAA,CAAA,MAAA,EAAA,OAAA;AADA,KADA;AAIA,aAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAJA;AAQA,WAAA;AACA,YAAA,CAAA,MAAA,EAAA,MAAA;AADA,KARA;AAWA,cAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAXA;AAeA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAfA,GAHA;AAuBA,cAAA;AACA;AADA,GAvBA;AA0BA,MA1BA,kBA0BA;AACA,QAAA,UAAA,KAAA,OAAA;;AACA,QAAA,YAAA,SAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,OAAA;AACA,KAFA,MAEA;AACA,gBAAA,CAAA,CAAA,KAAA,KAAA;AACA;;AAEA,WAAA;AACA,sBAAA;AADA,KAAA;AAGA,GArCA;AAsCA,SAAA;AACA,SADA,iBACA,GADA,EACA;AACA,WAAA,cAAA,GAAA,GAAA;AACA,KAHA;AAIA,WAJA,mBAIA,GAJA,EAIA;AACA,WAAA,cAAA,GAAA,GAAA;AACA,KANA;AAOA,kBAPA,0BAOA,GAPA,EAOA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AATA,GAtCA;AAiDA,YAAA;AACA,YADA,sBACA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAEA,UAAA,QAAA,EAAA;AAEA,YAAA,YAAA,iBAAA,IAAA,IAAA;AACA,YAAA,YAAA,mBAAA,IAAA,cAAA;AACA,YAAA,YAAA,oBAAA,IAAA,QAAA;AAEA,aAAA,KAAA;AACA;AAVA,GAjDA;AA6DA,SA7DA,qBA6DA;AAAA;;AACA,SAAA,GAAA,CAAA,wBAAA,EAAA,UAAA,GAAA,EAAA;AACA,YAAA,cAAA,GAAA,IAAA,OAAA,CAAA,MAAA,KAAA,IAAA,CAAA,CAAA;AACA,KAFA;AAGA,GAjEA;AAkEA,WAAA;AACA,eADA,yBACA;AACA,WAAA,cAAA,GAAA,CAAA,KAAA,cAAA;AACA,WAAA,QAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,IAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,cAAA;AACA,KALA;AAMA,gBANA,0BAMA;AACA,WAAA,WAAA;AACA;AARA;AAlEA,CAAA","sourcesContent":["<template>\n  <label :class=\"classObj\">\n    <span>\n      <span :class=\"`${prefixCls}-checkbox-inner`\" tabindex=\"0\" v-on:keyup.enter=\"enterPressed\">\n        <va-icon type=\"check\" :class=\"`${prefixCls}-checkbox-inner-check`\"></va-icon>\n      </span>\n      <input\n        tabindex=\"-1\"\n        type=\"checkbox\"\n        :class=\"`${prefixCls}-checkbox-input`\"\n        :disabled=\"disabled\"\n        :checked=\"currentChecked\"\n        @click=\"handleClick\" />\n    </span>\n    <span :class=\"`${prefixCls}-label`\">\n      <slot />\n    </span>\n    <validate\n      :name=\"name\"\n      :rules=\"rules\"\n      :custom-validate=\"customValidate\"\n      :current=\"currentChecked\">\n    </validate>\n  </label>\n</template>\n\n<script>\nimport events from '../utils/events'\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\n\nexport default {\n  name: 'VaCheckbox',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: [String, Boolean]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: [String, Number]\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  components: {\n    validate\n  },\n  data () {\n    let checked = this.checked\n    if (checked !== undefined) {\n      this.$emit('input', checked)\n    } else {\n      checked = !!this.value\n    }\n\n    return {\n      currentChecked: checked\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentChecked = val\n    },\n    checked (val) {\n      this.currentChecked = val\n    },\n    currentChecked (val) {\n      this.$emit('input', val)\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, currentChecked, disabled} = this\n      let klass = {}\n\n      klass[prefixCls + '-checkbox-label'] = true\n      klass[prefixCls + '-checkbox-checked'] = currentChecked\n      klass[prefixCls + '-checkbox-disabled'] = disabled\n\n      return klass\n    }\n  },\n  created () {\n    this.$on('Va@checkboxgroupChange', (val) => {\n      this.currentChecked = val.indexOf(this.label) > -1\n    })\n  },\n  methods: {\n    handleClick () {\n      this.currentChecked = !this.currentChecked\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this)\n      this.$emit('change', this.currentChecked)\n    },\n    enterPressed () {\n      this.handleClick()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Checkbox"}]}