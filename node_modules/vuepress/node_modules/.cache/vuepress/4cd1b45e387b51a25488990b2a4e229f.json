{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Breadcrumb/VaBreadcrumbItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Breadcrumb/VaBreadcrumbItem.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaBreadcrumbItem',\n  props: {\n    to: {},\n    replace: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, the router method used is replace() instead of push(), which does not leave a history trail.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      separator: '',\n      separatorIcon: ''\n    }\n  },\n  inject: ['VaBreadcrumbParent'],\n  mounted () {\n    this.separator = this.VaBreadcrumbParent.separator\n    this.separatorIcon = this.VaBreadcrumbParent.separatorIcon\n    const link = this.$refs.link\n\n    link.addEventListener('click', () => {\n      const { to, $router } = this\n\n      if (!to || !$router) return\n      this.replace ? $router.replace(to) : $router.push(to)\n    })\n  }\n}\n",{"version":3,"sources":["VaBreadcrumbItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"VaBreadcrumbItem.vue","sourceRoot":"node_modules/vue-atlas/src/Breadcrumb","sourcesContent":["<template>\n  <span :class=\"`${prefixCls}-breadcrumb-item`\">\n\n    <span\n      :class=\"[prefixCls + '-breadcrumb-item-inner', to ? prefixCls + '-breadcrumb-link' : '']\"\n      ref=\"link\">\n      <slot/>\n    </span>\n\n    <va-icon v-if=\"separatorIcon\" :type=\"separatorIcon\" :class=\"`${prefixCls}-breadcrumb-item-icon`\"></va-icon>\n    <span v-else :class=\"`${prefixCls}-breadcrumb-item-separator`\">{{separator}}</span>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'VaBreadcrumbItem',\n  props: {\n    to: {},\n    replace: {\n      type: Boolean,\n      default: false,\n      required: false,\n      note: 'When true, the router method used is replace() instead of push(), which does not leave a history trail.'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      separator: '',\n      separatorIcon: ''\n    }\n  },\n  inject: ['VaBreadcrumbParent'],\n  mounted () {\n    this.separator = this.VaBreadcrumbParent.separator\n    this.separatorIcon = this.VaBreadcrumbParent.separatorIcon\n    const link = this.$refs.link\n\n    link.addEventListener('click', () => {\n      const { to, $router } = this\n\n      if (!to || !$router) return\n      this.replace ? $router.replace(to) : $router.push(to)\n    })\n  }\n}\n</script>\n"]}]}