{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Checkbox/VaCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Checkbox/VaCheckbox.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport events from '../utils/events'\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\n\nexport default {\n  name: 'VaCheckbox',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: [String, Boolean]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: [String, Number]\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  components: {\n    validate\n  },\n  data () {\n    let checked = this.checked\n    if (checked !== undefined) {\n      this.$emit('input', checked)\n    } else {\n      checked = !!this.value\n    }\n\n    return {\n      currentChecked: checked\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentChecked = val\n    },\n    checked (val) {\n      this.currentChecked = val\n    },\n    currentChecked (val) {\n      this.$emit('input', val)\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, currentChecked, disabled} = this\n      let klass = {}\n\n      klass[prefixCls + '-checkbox-label'] = true\n      klass[prefixCls + '-checkbox-checked'] = currentChecked\n      klass[prefixCls + '-checkbox-disabled'] = disabled\n\n      return klass\n    }\n  },\n  created () {\n    this.$on('Va@checkboxgroupChange', (val) => {\n      this.currentChecked = val.indexOf(this.label) > -1\n    })\n  },\n  methods: {\n    handleClick () {\n      this.currentChecked = !this.currentChecked\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this)\n      this.$emit('change', this.currentChecked)\n    },\n    enterPressed () {\n      this.handleClick()\n    }\n  }\n}\n",{"version":3,"sources":["VaCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VaCheckbox.vue","sourceRoot":"node_modules/vue-atlas/src/Checkbox","sourcesContent":["<template>\n  <label :class=\"classObj\">\n    <span>\n      <span :class=\"`${prefixCls}-checkbox-inner`\" tabindex=\"0\" v-on:keyup.enter=\"enterPressed\">\n        <va-icon type=\"check\" :class=\"`${prefixCls}-checkbox-inner-check`\"></va-icon>\n      </span>\n      <input\n        tabindex=\"-1\"\n        type=\"checkbox\"\n        :class=\"`${prefixCls}-checkbox-input`\"\n        :disabled=\"disabled\"\n        :checked=\"currentChecked\"\n        @click=\"handleClick\" />\n    </span>\n    <span :class=\"`${prefixCls}-label`\">\n      <slot />\n    </span>\n    <validate\n      :name=\"name\"\n      :rules=\"rules\"\n      :custom-validate=\"customValidate\"\n      :current=\"currentChecked\">\n    </validate>\n  </label>\n</template>\n\n<script>\nimport events from '../utils/events'\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\n\nexport default {\n  name: 'VaCheckbox',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: [String, Boolean]\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: [String, Number]\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  components: {\n    validate\n  },\n  data () {\n    let checked = this.checked\n    if (checked !== undefined) {\n      this.$emit('input', checked)\n    } else {\n      checked = !!this.value\n    }\n\n    return {\n      currentChecked: checked\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentChecked = val\n    },\n    checked (val) {\n      this.currentChecked = val\n    },\n    currentChecked (val) {\n      this.$emit('input', val)\n    }\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, currentChecked, disabled} = this\n      let klass = {}\n\n      klass[prefixCls + '-checkbox-label'] = true\n      klass[prefixCls + '-checkbox-checked'] = currentChecked\n      klass[prefixCls + '-checkbox-disabled'] = disabled\n\n      return klass\n    }\n  },\n  created () {\n    this.$on('Va@checkboxgroupChange', (val) => {\n      this.currentChecked = val.indexOf(this.label) > -1\n    })\n  },\n  methods: {\n    handleClick () {\n      this.currentChecked = !this.currentChecked\n      this.dispatch('VaCheckboxGroup', 'Va@checkboxChange', this)\n      this.$emit('change', this.currentChecked)\n    },\n    enterPressed () {\n      this.handleClick()\n    }\n  }\n}\n</script>\n"]}]}