{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Topbar/VaTopbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Topbar/VaTopbar.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport events from '../utils/events';\nexport default {\n  name: 'VaTopbar',\n  mixins: [events],\n  props: {\n    theme: {\n      type: String,\n      default: 'blue',\n      required: false,\n      validator: function validator(v) {\n        return ['default', 'white', 'blue', 'dark', 'darker', 'purple'];\n      }\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    var t = this.theme;\n    return {\n      currentDesktopMinimumWidth: 0,\n      currentDesktopMargin: 0,\n      currentContentWidth: 0,\n      currentTopbarHeight: 0,\n      currentMinibarWidth: 0,\n      currentSidebarWidth: 0,\n      sidebarPriority: false,\n      minibarPriority: false,\n      currentWindowWidth: 0,\n      topbarPriority: false,\n      topbarPadded: false,\n      isReverse: false,\n      isMobile: false,\n      isSplit: false,\n      isRTL: false,\n      th: t\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\n     * This needs to be wrapped in a short setTimeout to give\n     * LayoutManager time to call enableReceivers().\n     */\n    setTimeout(function () {\n      _this.dispatch('VaLayoutManager', 'Va@configTopbarThemeChange', _this.th);\n    }, 10);\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$on('Va@topbarPresenceCheck', function (val) {\n      _this2.dispatch('VaLayoutManager', 'Va@topbarPresenceReply', true);\n    });\n    this.$on('Va@desktopMinimumWidthChange', function (val) {\n      _this2.currentDesktopMinimumWidth = val;\n    });\n    this.$on('Va@desktopMarginChange', function (val) {\n      _this2.currentDesktopMargin = val;\n    });\n    this.$on('Va@minibarWidthChange', function (val) {\n      _this2.currentMinibarWidth = val;\n    });\n    this.$on('Va@topbarHeightChange', function (val) {\n      _this2.currentTopbarHeight = val;\n    });\n    this.$on('Va@contentWidthChange', function (val) {\n      _this2.currentContentWidth = val;\n    });\n    this.$on('Va@sidebarWidthChange', function (val) {\n      _this2.currentSidebarWidth = val;\n    });\n    this.$on('Va@sidebarPriorityChange', function (val) {\n      _this2.sidebarPriority = val;\n    });\n    this.$on('Va@minibarPriorityChange', function (val) {\n      _this2.minibarPriority = val;\n    });\n    this.$on('Va@windowWidthChange', function (val) {\n      _this2.currentWindowWidth = val;\n    });\n    this.$on('Va@topbarPriorityChange', function (val) {\n      _this2.topbarPriority = val;\n    });\n    this.$on('Va@topbarPaddedChange', function (val) {\n      _this2.topbarPadded = val;\n    });\n    this.$on('Va@reverseChange', function (val) {\n      _this2.isReverse = val;\n    });\n    this.$on('Va@topbarIsMobile', function (val) {\n      _this2.isMobile = val;\n    });\n    this.$on('Va@topbarThemeChange', function (val) {\n      _this2.th = val;\n    });\n    this.$on('Va@splitChange', function (val) {\n      _this2.isSplit = val;\n    });\n    this.$on('Va@rtlChange', function (val) {\n      _this2.isRTL = val;\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.dispatch('VaLayoutManager', 'Va@topbarDisconnect', true);\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          th = this.th;\n      var klass = {};\n      klass[prefixCls + '-topbar'] = true;\n      klass[prefixCls + '-topbar--theme-' + th] = true;\n      return klass;\n    },\n    styleObj: function styleObj() {\n      var dmw = parseInt(this.currentDesktopMinimumWidth);\n      var dm = parseInt(this.currentDesktopMargin);\n      var th = parseInt(this.currentTopbarHeight);\n      var sw = parseInt(this.currentSidebarWidth);\n      var cw = parseInt(this.currentContentWidth);\n      var mw = parseInt(this.currentMinibarWidth);\n      var sp = this.sidebarPriority;\n      var mp = this.minibarPriority;\n      var tp = this.topbarPriority;\n      var tpad = this.topbarPadded;\n      var reverse = this.isReverse;\n      var mobile = this.isMobile;\n      var split = this.isSplit;\n      var rtl = this.isRTL;\n      var style = {};\n      style['height'] = th + 'px';\n      style['left'] = '0px';\n      style['right'] = '0px';\n      /**\n       * Adjust the margins if content width is smaller than\n       * desktop minimum width.\n       */\n\n      if (!mobile) {\n        if (cw < dmw) {\n          var x = dmw - cw;\n          dm = dm - x / 2;\n        }\n      } else {\n        dm = 0;\n        dmw = 0;\n      }\n      /**\n       * If a minimum desktop width is set\n       */\n\n\n      if (dmw !== 0) {\n        style['min-width'] = dmw - mw - sw + 'px';\n      } else {\n        style['min-width'] = '0px';\n      }\n      /**\n       * Ready to be thoroughly confused?\n       */\n\n\n      if (sp) {\n        if (split) {\n          if (reverse) {\n            if (mp) {\n              style['left'] = dm + sw + 'px';\n              style['right'] = dm + mw + 'px';\n            } else {\n              style['left'] = dm + sw + 'px';\n              style['right'] = dm + 'px';\n            }\n          } else {\n            if (mp) {\n              style['left'] = dm + mw + 'px';\n              style['right'] = dm + sw + 'px';\n            } else {\n              style['left'] = dm + 'px';\n              style['right'] = dm + sw + 'px';\n            }\n          }\n        } else {\n          if (reverse) {\n            if (mp) {\n              style['left'] = sw + mw + dm + 'px';\n              style['right'] = dm + 'px';\n            } else {\n              style['left'] = dm + sw + 'px';\n              style['right'] = dm + 'px';\n            }\n          } else {\n            if (mp) {\n              style['left'] = sw + mw + dm + 'px';\n              style['right'] = dm + 'px';\n            } else {\n              style['left'] = sw + mw + dm + 'px';\n              style['right'] = dm + 'px';\n            }\n          }\n        }\n      }\n\n      if (!sp) {\n        if (split) {\n          if (reverse) {\n            if (mp) {\n              style['left'] = dm + 'px';\n              style['right'] = dm + mw + 'px';\n            } else {\n              style['left'] = dm + 'px';\n              style['right'] = dm + 'px';\n            }\n          } else {\n            if (mp) {\n              style['left'] = dm + mw + 'px';\n              style['right'] = dm + 'px';\n            } else {\n              style['left'] = dm + 'px';\n              style['right'] = dm + 'px';\n            }\n          }\n        } else {\n          if (reverse) {\n            if (mp) {\n              style['left'] = sw + mw + dm + 'px';\n              style['right'] = dm + 'px';\n            } else {\n              style['left'] = dm + 'px';\n              style['right'] = dm + 'px';\n            }\n          } else {\n            if (mp) {\n              style['left'] = dm + mw + 'px';\n              style['right'] = dm + 'px';\n            } else {\n              style['left'] = dm + 'px';\n              style['right'] = dm + 'px';\n            }\n          }\n        }\n      }\n\n      if (rtl) {\n        // rtl only effective when not split\n        if (!split) {\n          if (reverse) {\n            if (sp) {\n              style['left'] = dm + 'px';\n              style['right'] = sw + mw + dm + 'px';\n            } else {\n              if (mp) {\n                style['left'] = dm + 'px';\n                style['right'] = dm + mw + 'px';\n              }\n            }\n          } else {\n            if (sp) {\n              if (mp) {\n                style['right'] = mw + sw + dm + 'px';\n                style['left'] = dm + 'px';\n              } else {\n                style['right'] = dm + sw + 'px';\n                style['left'] = dm + 'px';\n              }\n            } else {\n              if (mp) {\n                style['right'] = mw + sw + dm + 'px';\n                style['left'] = dm + 'px';\n              }\n            }\n          }\n        }\n      }\n\n      if (tp) {\n        style['left'] = '0px';\n        style['right'] = '0px';\n\n        if (tpad) {\n          style['padding-left'] = dm + 8 + 'px';\n          style['padding-right'] = dm + 8 + 'px';\n          /**\n           * Why 8px?\n           * Because a 50px Minibar looks best, and if the\n           * first or last element in a padded topbar is\n           * an icon, this lines it up nicely with the\n           * icons in the Minibar.\n           */\n        }\n      } // Less than 40 and we don't want overflow.\n      // Greater than 40 and we do, because we don't want\n      // to hide dropdown menus.\n      // That means..\n      // Dropdown menus in the topbar won't appear when the\n      // topbar has a height of less than 40px.\n\n\n      if (th < 40) {\n        style['overflow'] = 'hidden';\n      } else {\n        style['overflow'] = 'visible';\n      }\n\n      return style;\n    }\n  }\n};",{"version":3,"sources":["VaTopbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"classObj\" :style=\"styleObj\">\n    <div :class=\"`${prefixCls}-topbar-inner`\">\n      <div :class=\"`${prefixCls}-topbar-left`\">\n        <slot name=\"left\"/>\n      </div>\n      <div :class=\"`${prefixCls}-topbar-center`\">\n        <slot name=\"center\"/>\n      </div>\n      <div :class=\"`${prefixCls}-topbar-right`\">\n        <slot name=\"right\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaTopbar',\n  mixins: [events],\n  props: {\n    theme: {\n      type: String,\n      default: 'blue',\n      required: false,\n      validator (v) {\n        return [\n          'default',\n          'white',\n          'blue',\n          'dark',\n          'darker',\n          'purple'\n        ]\n      }\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let t = this.theme\n    return {\n      currentDesktopMinimumWidth: 0,\n      currentDesktopMargin: 0,\n      currentContentWidth: 0,\n      currentTopbarHeight: 0,\n      currentMinibarWidth: 0,\n      currentSidebarWidth: 0,\n      sidebarPriority: false,\n      minibarPriority: false,\n      currentWindowWidth: 0,\n      topbarPriority: false,\n      topbarPadded: false,\n      isReverse: false,\n      isMobile: false,\n      isSplit: false,\n      isRTL: false,\n      th: t\n    }\n  },\n  mounted () {\n    /**\n     * This needs to be wrapped in a short setTimeout to give\n     * LayoutManager time to call enableReceivers().\n     */\n    setTimeout(() => {\n      this.dispatch('VaLayoutManager', 'Va@configTopbarThemeChange', this.th)\n    }, 10)\n  },\n  created () {\n    this.$on('Va@topbarPresenceCheck', (val) => { this.dispatch('VaLayoutManager', 'Va@topbarPresenceReply', true) })\n    this.$on('Va@desktopMinimumWidthChange', (val) => { this.currentDesktopMinimumWidth = val })\n    this.$on('Va@desktopMarginChange', (val) => { this.currentDesktopMargin = val })\n    this.$on('Va@minibarWidthChange', (val) => { this.currentMinibarWidth = val })\n    this.$on('Va@topbarHeightChange', (val) => { this.currentTopbarHeight = val })\n    this.$on('Va@contentWidthChange', (val) => { this.currentContentWidth = val })\n    this.$on('Va@sidebarWidthChange', (val) => { this.currentSidebarWidth = val })\n    this.$on('Va@sidebarPriorityChange', (val) => { this.sidebarPriority = val })\n    this.$on('Va@minibarPriorityChange', (val) => { this.minibarPriority = val })\n    this.$on('Va@windowWidthChange', (val) => { this.currentWindowWidth = val })\n    this.$on('Va@topbarPriorityChange', (val) => { this.topbarPriority = val })\n    this.$on('Va@topbarPaddedChange', (val) => { this.topbarPadded = val })\n    this.$on('Va@reverseChange', (val) => { this.isReverse = val })\n    this.$on('Va@topbarIsMobile', (val) => { this.isMobile = val })\n    this.$on('Va@topbarThemeChange', (val) => { this.th = val })\n    this.$on('Va@splitChange', (val) => { this.isSplit = val })\n    this.$on('Va@rtlChange', (val) => { this.isRTL = val })\n  },\n  beforeDestroy () {\n    this.dispatch('VaLayoutManager', 'Va@topbarDisconnect', true)\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, th} = this\n      let klass = {}\n\n      klass[prefixCls + '-topbar'] = true\n      klass[prefixCls + '-topbar--theme-' + th] = true\n\n      return klass\n    },\n    styleObj () {\n      let dmw = parseInt(this.currentDesktopMinimumWidth)\n      let dm = parseInt(this.currentDesktopMargin)\n      let th = parseInt(this.currentTopbarHeight)\n      let sw = parseInt(this.currentSidebarWidth)\n      let cw = parseInt(this.currentContentWidth)\n      let mw = parseInt(this.currentMinibarWidth)\n      let sp = this.sidebarPriority\n      let mp = this.minibarPriority\n      let tp = this.topbarPriority\n      let tpad = this.topbarPadded\n      let reverse = this.isReverse\n      let mobile = this.isMobile\n      let split = this.isSplit\n      let rtl = this.isRTL\n      let style = {}\n\n      style['height'] = th + 'px'\n      style['left'] = '0px'\n      style['right'] = '0px'\n\n      /**\n       * Adjust the margins if content width is smaller than\n       * desktop minimum width.\n       */\n      if (!mobile) {\n        if (cw < dmw) {\n          let x = dmw - cw\n          dm = dm - (x / 2)\n        }\n      } else {\n        dm = 0\n        dmw = 0\n      }\n\n      /**\n       * If a minimum desktop width is set\n       */\n      if (dmw !== 0) {\n        style['min-width'] = (dmw - mw - sw) + 'px'\n      } else {\n        style['min-width'] = '0px'\n      }\n\n      /**\n       * Ready to be thoroughly confused?\n       */\n      if (sp) {\n        if (split) {\n          if (reverse) {\n            if (mp) {\n              style['left'] = (dm + sw) + 'px'\n              style['right'] = (dm + mw) + 'px'\n            } else {\n              style['left'] = (dm + sw) + 'px'\n              style['right'] = dm + 'px'\n            }\n          } else {\n            if (mp) {\n              style['left'] = (dm + mw) + 'px'\n              style['right'] = (dm + sw) + 'px'\n            } else {\n              style['left'] = dm + 'px'\n              style['right'] = (dm + sw) + 'px'\n            }\n          }\n        } else {\n          if (reverse) {\n            if (mp) {\n              style['left'] = (sw + mw + dm) + 'px'\n              style['right'] = dm + 'px'\n            } else {\n              style['left'] = (dm + sw) + 'px'\n              style['right'] = dm + 'px'\n            }\n          } else {\n            if (mp) {\n              style['left'] = (sw + mw + dm) + 'px'\n              style['right'] = dm + 'px'\n            } else {\n              style['left'] = (sw + mw + dm) + 'px'\n              style['right'] = dm + 'px'\n            }\n          }\n        }\n      }\n\n      if (!sp) {\n        if (split) {\n          if (reverse) {\n            if (mp) {\n              style['left'] = dm + 'px'\n              style['right'] = (dm + mw) + 'px'\n            } else {\n              style['left'] = dm + 'px'\n              style['right'] = dm + 'px'\n            }\n          } else {\n            if (mp) {\n              style['left'] = (dm + mw) + 'px'\n              style['right'] = dm + 'px'\n            } else {\n              style['left'] = dm + 'px'\n              style['right'] = dm + 'px'\n            }\n          }\n        } else {\n          if (reverse) {\n            if (mp) {\n              style['left'] = (sw + mw + dm) + 'px'\n              style['right'] = dm + 'px'\n            } else {\n              style['left'] = dm + 'px'\n              style['right'] = dm + 'px'\n            }\n          } else {\n            if (mp) {\n              style['left'] = (dm + mw) + 'px'\n              style['right'] = dm + 'px'\n            } else {\n              style['left'] = dm + 'px'\n              style['right'] = dm + 'px'\n            }\n          }\n        }\n      }\n\n      if (rtl) {\n        // rtl only effective when not split\n        if (!split) {\n          if (reverse) {\n            if (sp) {\n              style['left'] = dm + 'px'\n              style['right'] = (sw + mw + dm) + 'px'\n            } else {\n              if (mp) {\n                style['left'] = dm + 'px'\n                style['right'] = (dm + mw) + 'px'\n              }\n            }\n          } else {\n            if (sp) {\n              if (mp) {\n                style['right'] = (mw + sw + dm) + 'px'\n                style['left'] = dm + 'px'\n              } else {\n                style['right'] = (dm + sw) + 'px'\n                style['left'] = dm + 'px'\n              }\n            } else {\n              if (mp) {\n                style['right'] = (mw + sw + dm) + 'px'\n                style['left'] = dm + 'px'\n              }\n            }\n          }\n        }\n      }\n\n      if (tp) {\n        style['left'] = '0px'\n        style['right'] = '0px'\n\n        if (tpad) {\n          style['padding-left'] = (dm + 8) + 'px'\n          style['padding-right'] = (dm + 8) + 'px'\n          /**\n           * Why 8px?\n           * Because a 50px Minibar looks best, and if the\n           * first or last element in a padded topbar is\n           * an icon, this lines it up nicely with the\n           * icons in the Minibar.\n           */\n        }\n      }\n\n      // Less than 40 and we don't want overflow.\n      // Greater than 40 and we do, because we don't want\n      // to hide dropdown menus.\n      // That means..\n      // Dropdown menus in the topbar won't appear when the\n      // topbar has a height of less than 40px.\n      if (th < 40) {\n        style['overflow'] = 'hidden'\n      } else {\n        style['overflow'] = 'visible'\n      }\n\n      return style\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Topbar"}]}