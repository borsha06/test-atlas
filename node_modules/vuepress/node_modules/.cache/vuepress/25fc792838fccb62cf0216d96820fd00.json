{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Layout/VaRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Layout/VaRow.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaRow',\n  props: {\n    gutter: {\n      type: Number,\n      default: 0\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    styles () {\n      let ret = {}\n      let half = Math.floor(this.gutter / 2)\n      ret.marginLeft = ret.marginRight = `${-half}px`\n      this.$nextTick(() => {\n        this.$children.forEach((children) => {\n          children.$el.style.paddingLeft = children.$el.style.paddingRight = `${half}px`\n          children.$el.style.marginBottom = this.gutter + 'px'\n        })\n      })\n      return ret\n    }\n  }\n}\n",{"version":3,"sources":["VaRow.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VaRow.vue","sourceRoot":"node_modules/vue-atlas/src/Layout","sourcesContent":["<template>\n  <div :class=\"`${prefixCls}-row`\" :style=\"styles\">\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaRow',\n  props: {\n    gutter: {\n      type: Number,\n      default: 0\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  computed: {\n    styles () {\n      let ret = {}\n      let half = Math.floor(this.gutter / 2)\n      ret.marginLeft = ret.marginRight = `${-half}px`\n      this.$nextTick(() => {\n        this.$children.forEach((children) => {\n          children.$el.style.paddingLeft = children.$el.style.paddingRight = `${half}px`\n          children.$el.style.marginBottom = this.gutter + 'px'\n        })\n      })\n      return ret\n    }\n  }\n}\n</script>\n"]}]}