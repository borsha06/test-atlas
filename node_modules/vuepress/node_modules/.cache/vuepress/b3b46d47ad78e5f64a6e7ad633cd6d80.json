{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaSidebarGroupLevel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaSidebarGroupLevel.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaSidebarGroupLevel',\n  props: {\n    parentItem: {\n      type: Object,\n      required: true\n    },\n    level: {\n      type: Number,\n      required: true\n    },\n    open: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    showToggle: {\n      type: Boolean,\n      default: false\n    },\n    toggleType: {\n      type: String,\n      required: false,\n      validator (v) {\n        return [\n          'arrow',\n          'circle'\n        ].includes(v)\n      }\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let s = this.showToggle\n    return {\n      st: s,\n      isOpen: this.open\n    }\n  },\n  created () {\n    this.$on('Va@showToggleChange', (val) => {\n      this.st = val\n    })\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, isOpen, level} = this\n      let klass = {}\n\n      klass[prefixCls + '-sidebar-navigationlevel'] = true\n      klass[prefixCls + '-sidebar-navigationlevel-closed'] = !isOpen\n      klass[prefixCls + '-sidebar-navigationlevel-open'] = isOpen\n      klass[prefixCls + '-sidebar-navigationlevel-level-' + level] = true\n\n      return klass\n    }\n  },\n  methods: {\n    onToggleClick () {\n      this.isOpen = !this.isOpen\n    },\n    onItemClick () {\n      if (this.isOpen === false) {\n        this.isOpen = true\n      }\n    }\n  }\n}\n",{"version":3,"sources":["VaSidebarGroupLevel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VaSidebarGroupLevel.vue","sourceRoot":"node_modules/vue-atlas/src/Sidebar","sourcesContent":["<template>\n  <div :class=\"classObj\">\n    <div :class=\"`${prefixCls}-sidebar-navigationlevel-parent`\">\n      <div :class=\"`${prefixCls}-sidebar-group-item`\">\n        <va-sidebar-group-toggle :open=\"isOpen\" @click.native=\"onToggleClick\" v-if=\"st\"/>\n        <va-sidebar-group-item\n          :item=\"parentItem\"\n          @click.native=\"onItemClick\"\n          :is-open=\"isOpen\"\n          :show-toggle=\"st\" />\n      </div>\n    </div>\n    <ul :class=\"`${prefixCls}-sidebar-navigationlevel-children`\">\n      <slot/>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaSidebarGroupLevel',\n  props: {\n    parentItem: {\n      type: Object,\n      required: true\n    },\n    level: {\n      type: Number,\n      required: true\n    },\n    open: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    showToggle: {\n      type: Boolean,\n      default: false\n    },\n    toggleType: {\n      type: String,\n      required: false,\n      validator (v) {\n        return [\n          'arrow',\n          'circle'\n        ].includes(v)\n      }\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let s = this.showToggle\n    return {\n      st: s,\n      isOpen: this.open\n    }\n  },\n  created () {\n    this.$on('Va@showToggleChange', (val) => {\n      this.st = val\n    })\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, isOpen, level} = this\n      let klass = {}\n\n      klass[prefixCls + '-sidebar-navigationlevel'] = true\n      klass[prefixCls + '-sidebar-navigationlevel-closed'] = !isOpen\n      klass[prefixCls + '-sidebar-navigationlevel-open'] = isOpen\n      klass[prefixCls + '-sidebar-navigationlevel-level-' + level] = true\n\n      return klass\n    }\n  },\n  methods: {\n    onToggleClick () {\n      this.isOpen = !this.isOpen\n    },\n    onItemClick () {\n      if (this.isOpen === false) {\n        this.isOpen = true\n      }\n    }\n  }\n}\n</script>\n"]}]}