{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Tooltip/VaTooltip.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Tooltip/VaTooltip.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PopoverMixin from '../Mixin/popoverMixin'\n\nexport default {\n  name: 'VaTooltip',\n  props: {\n    arrow: {\n      type: Boolean,\n      default: false\n    },\n    effect: {\n      type: String,\n      default: 'tooltip-fade-top' // tooltip-fade-top, -left, -right, -bottom\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  mixins: [PopoverMixin],\n  computed: {\n    classObj () {\n      let {prefixCls, placement} = this\n      let klass = {}\n\n      klass[prefixCls + '-tooltip'] = true\n      klass[prefixCls + '-tooltip-top'] = placement === 'top'\n      klass[prefixCls + '-tooltip-right'] = placement === 'right'\n      klass[prefixCls + '-tooltip-bottom'] = placement === 'bottom'\n      klass[prefixCls + '-tooltip-left'] = placement === 'left'\n\n      return klass\n    }\n  }\n}\n",{"version":3,"sources":["VaTooltip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"VaTooltip.vue","sourceRoot":"node_modules/vue-atlas/src/Tooltip","sourcesContent":["<template>\n  <span>\n    <span ref=\"trigger\">\n      <slot />\n    </span>\n    <transition :name=\"effect\">\n      <div :class=\"classObj\" ref=\"popover\" v-show=\"isShow\">\n        <div v-if=\"arrow\" :class=\"`${prefixCls}-tooltip-arrow`\"></div>\n        <div :class=\"`${prefixCls}-tooltip-inner`\">\n          <span v-html=\"content\"></span>\n        </div>\n      </div>\n    </transition>\n  </span>\n</template>\n\n<script>\nimport PopoverMixin from '../Mixin/popoverMixin'\n\nexport default {\n  name: 'VaTooltip',\n  props: {\n    arrow: {\n      type: Boolean,\n      default: false\n    },\n    effect: {\n      type: String,\n      default: 'tooltip-fade-top' // tooltip-fade-top, -left, -right, -bottom\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  mixins: [PopoverMixin],\n  computed: {\n    classObj () {\n      let {prefixCls, placement} = this\n      let klass = {}\n\n      klass[prefixCls + '-tooltip'] = true\n      klass[prefixCls + '-tooltip-top'] = placement === 'top'\n      klass[prefixCls + '-tooltip-right'] = placement === 'right'\n      klass[prefixCls + '-tooltip-bottom'] = placement === 'bottom'\n      klass[prefixCls + '-tooltip-left'] = placement === 'left'\n\n      return klass\n    }\n  }\n}\n</script>\n"]}]}