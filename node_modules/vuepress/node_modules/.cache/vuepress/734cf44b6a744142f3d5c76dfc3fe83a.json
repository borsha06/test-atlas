{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Checkbox/VaCheckboxGroup.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport validationMixin from '../Mixin/validationMixin';\nimport validate from '../validate';\nimport events from '../utils/events';\nexport default {\n  name: 'VaCheckboxGroup',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: []\n    };\n  },\n  methods: {\n    init: function init() {\n      var children = this.$children;\n      var ret = [];\n      children.forEach(function (item) {\n        item.currentChecked ? ret.push(item.label) : '';\n      });\n      this.currentValue = ret;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.currentValue = val;\n    },\n    currentValue: function currentValue(val) {\n      var value = val || this.value;\n      this.broadcast('VaCheckbox', 'Va@checkboxgroupChange', value);\n      this.broadcast('VaCheckboxBtn', 'Va@checkboxgroupChange', value);\n      this.$emit('input', value);\n      this.$emit('change', value);\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('Va@checkboxChange', function () {\n      _this.init();\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.currentValue = this.value;\n    this.$nextTick(function () {\n      _this2.init();\n    });\n  },\n  components: {\n    validate: validate\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          vertical = this.vertical;\n      var klass = {};\n      klass[prefixCls + '-btn-group'] = !vertical;\n      klass[prefixCls + '-btn-group-vertical'] = vertical;\n      klass[prefixCls + '-checkbox-group'] = true;\n      klass[prefixCls + '-checkbox-group-vertical'] = vertical;\n      return klass;\n    }\n  }\n};",{"version":3,"sources":["VaCheckboxGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,OAAA,eAAA,MAAA,0BAAA;AACA,OAAA,QAAA,MAAA,aAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AAEA,eAAA;AACA,QAAA,iBADA;AAEA,UAAA,CAAA,eAAA,EAAA,MAAA,CAFA;AAGA,SAAA;AACA,WAAA;AACA,YAAA,KADA;AAEA,aAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,cAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA,KAPA;AAWA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KAXA;AAeA,eAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AAfA,GAHA;AAuBA,MAvBA,kBAuBA;AACA,WAAA;AACA,oBAAA;AADA,KAAA;AAGA,GA3BA;AA4BA,WAAA;AACA,QADA,kBACA;AACA,UAAA,WAAA,KAAA,SAAA;AACA,UAAA,MAAA,EAAA;AACA,eAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,aAAA,cAAA,GAAA,IAAA,IAAA,CAAA,KAAA,KAAA,CAAA,GAAA,EAAA;AACA,OAFA;AAGA,WAAA,YAAA,GAAA,GAAA;AACA;AARA,GA5BA;AAsCA,SAAA;AACA,SADA,iBACA,GADA,EACA;AACA,WAAA,YAAA,GAAA,GAAA;AACA,KAHA;AAIA,gBAJA,wBAIA,GAJA,EAIA;AACA,UAAA,QAAA,OAAA,KAAA,KAAA;AACA,WAAA,SAAA,CAAA,YAAA,EAAA,wBAAA,EAAA,KAAA;AACA,WAAA,SAAA,CAAA,eAAA,EAAA,wBAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA;AAVA,GAtCA;AAkDA,SAlDA,qBAkDA;AAAA;;AACA,SAAA,GAAA,CAAA,mBAAA,EAAA,YAAA;AACA,YAAA,IAAA;AACA,KAFA;AAGA,GAtDA;AAuDA,SAvDA,qBAuDA;AAAA;;AACA,SAAA,YAAA,GAAA,KAAA,KAAA;AACA,SAAA,SAAA,CAAA,YAAA;AACA,aAAA,IAAA;AACA,KAFA;AAGA,GA5DA;AA6DA,cAAA;AACA;AADA,GA7DA;AAgEA,YAAA;AACA,YADA,sBACA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAEA,UAAA,QAAA,EAAA;AAEA,YAAA,YAAA,YAAA,IAAA,CAAA,QAAA;AACA,YAAA,YAAA,qBAAA,IAAA,QAAA;AACA,YAAA,YAAA,iBAAA,IAAA,IAAA;AACA,YAAA,YAAA,0BAAA,IAAA,QAAA;AAEA,aAAA,KAAA;AACA;AAXA;AAhEA,CAAA","sourcesContent":["<template>\n  <div :class=\"classObj\">\n    <slot />\n    <validate\n      :name=\"name\"\n      :rules=\"rules\"\n      :custom-validate=\"customValidate\"\n      :current=\"currentValue\">\n    </validate>\n  </div>\n</template>\n\n<script>\nimport validationMixin from '../Mixin/validationMixin'\nimport validate from '../validate'\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaCheckboxGroup',\n  mixins: [validationMixin, events],\n  props: {\n    value: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'checkbox'\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      currentValue: []\n    }\n  },\n  methods: {\n    init () {\n      let children = this.$children\n      let ret = []\n      children.forEach((item) => {\n        item.currentChecked ? ret.push(item.label) : ''\n      })\n      this.currentValue = ret\n    }\n  },\n  watch: {\n    value (val) {\n      this.currentValue = val\n    },\n    currentValue (val) {\n      let value = val || this.value\n      this.broadcast('VaCheckbox', 'Va@checkboxgroupChange', value)\n      this.broadcast('VaCheckboxBtn', 'Va@checkboxgroupChange', value)\n      this.$emit('input', value)\n      this.$emit('change', value)\n    }\n  },\n  created () {\n    this.$on('Va@checkboxChange', () => {\n      this.init()\n    })\n  },\n  mounted () {\n    this.currentValue = this.value\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  components: {\n    validate\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, vertical} = this\n      let klass = {}\n\n      klass[prefixCls + '-btn-group'] = !vertical\n      klass[prefixCls + '-btn-group-vertical'] = vertical\n      klass[prefixCls + '-checkbox-group'] = true\n      klass[prefixCls + '-checkbox-group-vertical'] = vertical\n\n      return klass\n    }\n\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Checkbox"}]}