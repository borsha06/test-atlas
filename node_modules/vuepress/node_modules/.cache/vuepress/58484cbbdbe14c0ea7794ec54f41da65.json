{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js??ref--3-1!/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/Sidebar/VaSidebar.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport events from '../utils/events';\nexport default {\n  name: 'VaSidebar',\n  mixins: [events],\n  props: {\n    compact: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    textLinks: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    theme: {\n      type: String,\n      default: 'default',\n      required: false,\n      validator: function validator(v) {\n        return ['default', 'white', 'blue', 'dark', 'darker', 'purple'];\n      }\n    },\n    showToggle: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data: function data() {\n    var s = this.showToggle;\n    var c = this.compact;\n    var t = this.theme;\n    return {\n      currentDesktopMinimumWidth: 0,\n      currentDesktopMargin: 0,\n      currentSidebarWidth: 0,\n      currentMinibarWidth: 0,\n      currentTopbarHeight: 0,\n      minibarPriority: false,\n      currentContentWidth: 0,\n      sidebarPriority: false,\n      currentWindowWidth: 0,\n      isReverse: false,\n      isMobile: false,\n      isSplit: false,\n      isRTL: false,\n      comp: c,\n      th: t,\n      st: s\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('Va@sidebarPresenceCheck', function (val) {\n      _this.dispatch('VaLayoutManager', 'Va@sidebarPresenceReply', true);\n    });\n    this.$on('Va@desktopMinimumWidthChange', function (val) {\n      _this.currentDesktopMinimumWidth = val;\n    });\n    this.$on('Va@desktopMarginChange', function (val) {\n      _this.currentDesktopMargin = val;\n    });\n    this.$on('Va@minibarWidthChange', function (val) {\n      _this.currentMinibarWidth = val;\n    });\n    this.$on('Va@topbarHeightChange', function (val) {\n      _this.currentTopbarHeight = val;\n    });\n    this.$on('Va@contentWidthChange', function (val) {\n      _this.currentContentWidth = val;\n    });\n    this.$on('Va@sidebarWidthChange', function (val) {\n      _this.currentSidebarWidth = val;\n    });\n    this.$on('Va@minibarPriorityChange', function (val) {\n      _this.minibarPriority = val;\n    });\n    this.$on('Va@sidebarPriorityChange', function (val) {\n      _this.sidebarPriority = val;\n    });\n    this.$on('Va@windowWidthChange', function (val) {\n      _this.currentWindowWidth = val;\n    });\n    this.$on('Va@sidebarIsMobile', function (val) {\n      _this.isMobile = val;\n    });\n    this.$on('Va@reverseChange', function (val) {\n      _this.isReverse = val;\n    });\n    this.$on('Va@sidebarThemeChange', function (val) {\n      _this.th = val;\n    });\n    this.$on('Va@showToggleChange', function (val) {\n      _this.st = val;\n    });\n    this.$on('Va@splitChange', function (val) {\n      _this.isSplit = val;\n    });\n    this.$on('Va@compactChange', function (val) {\n      _this.comp = val;\n    });\n    this.$on('Va@rtlChange', function (val) {\n      _this.isRTL = val;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    /**\n     * This needs to be wrapped in a short setTimeout to give\n     * LayoutManager time to call enableReceivers().\n     */\n    setTimeout(function () {\n      _this2.dispatch('VaLayoutManager', 'Va@configSidebarThemeChange', _this2.th);\n    }, 10);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.dispatch('VaLayoutManager', 'Va@sidebarDisconnect', true);\n  },\n  computed: {\n    classObj: function classObj() {\n      var prefixCls = this.prefixCls,\n          th = this.th,\n          isMobile = this.isMobile,\n          comp = this.comp,\n          textLinks = this.textLinks;\n      var klass = {};\n      klass[prefixCls + '-sidebar'] = true;\n      klass[prefixCls + '-sidebar--theme-' + th] = true;\n      klass[prefixCls + '-sidebar-mobile'] = isMobile;\n      klass[prefixCls + '-sidebar-compact'] = comp;\n      klass[prefixCls + '-sidebar-text-links'] = textLinks;\n      return klass;\n    },\n    styleObj: function styleObj() {\n      var dmw = parseInt(this.currentDesktopMinimumWidth);\n      var dm = parseInt(this.currentDesktopMargin);\n      var sw = parseInt(this.currentSidebarWidth);\n      var th = parseInt(this.currentTopbarHeight);\n      var cw = parseInt(this.currentContentWidth);\n      var mw = parseInt(this.currentMinibarWidth);\n      var sp = this.sidebarPriority;\n      var mp = this.minibarPriority;\n      var reverse = this.isReverse;\n      var mobile = this.isMobile;\n      var split = this.isSplit;\n      var rtl = this.isRTL;\n      var style = {};\n      style['width'] = sw + 'px';\n      style['min-width'] = sw + 'px';\n\n      if (sp) {\n        style['top'] = '0px';\n      } else {\n        style['top'] = th + 'px';\n      }\n      /**\n       * Adjust the margins if content width is smaller than\n       * desktop minimum width.\n       */\n\n\n      if (!mobile) {\n        if (cw < dmw) {\n          var x = dmw - cw;\n          dm = dm - x / 2;\n        }\n      } else {\n        dm = 0;\n        dmw = 0;\n      }\n\n      if (split) {\n        if (reverse) {\n          style['left'] = dm + 'px';\n        } else {\n          style['right'] = dm + 'px';\n        }\n      } else {\n        if (reverse) {\n          if (rtl) {\n            style['right'] = dm + mw + 'px';\n          } else {\n            style['left'] = dm + 'px';\n          }\n        } else {\n          if (rtl) {\n            style['right'] = dm + 'px';\n          } else {\n            style['left'] = dm + mw + 'px';\n          }\n        }\n      }\n\n      if (!sp && mp && reverse && !split && !rtl) {\n        style['top'] = '0px';\n      }\n\n      if (rtl && !split && !reverse && !sp && mp) {\n        style['top'] = '0px';\n      }\n\n      style['bottom'] = '0px';\n      return style;\n    }\n  },\n  watch: {} // methods: {\n  //   initResize (e) {\n  //     /**\n  //      * Prevent text selection while dragging.\n  //      * https://stackoverflow.com/questions/5429827/how-can-i-prevent-text-element-selection-with-cursor-drag\n  //      */\n  //     if (e.stopPropagation) {\n  //       e.stopPropagation()\n  //     }\n  //     if (e.preventDefault) {\n  //       e.preventDefault()\n  //     }\n  //     e.cancelBubble = true\n  //     e.returnValue = false\n  //     window.addEventListener('mousemove', this.doResize, false)\n  //     window.addEventListener('mouseup', this.stopResize, false)\n  //   },\n  //   doResize (e) {\n  //     let el = this.$refs.sidebar\n  //     this.dispatch('VaLayoutManager', 'Va@sidebarWidthChange', e.clientX - el.offsetLeft)\n  //   },\n  //   stopResize () {\n  //     window.removeEventListener('mouseup', this.stopResize, false)\n  //     window.removeEventListener('mousemove', this.doResize, false)\n  //   }\n  // }\n\n};",{"version":3,"sources":["VaSidebar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"classObj\" :style=\"styleObj\">\n      <slot />\n  </div>\n</template>\n\n<script>\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaSidebar',\n  mixins: [events],\n  props: {\n    compact: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    textLinks: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    theme: {\n      type: String,\n      default: 'default',\n      required: false,\n      validator (v) {\n        return [\n          'default',\n          'white',\n          'blue',\n          'dark',\n          'darker',\n          'purple'\n        ]\n      }\n    },\n    showToggle: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    let s = this.showToggle\n    let c = this.compact\n    let t = this.theme\n    return {\n      currentDesktopMinimumWidth: 0,\n      currentDesktopMargin: 0,\n      currentSidebarWidth: 0,\n      currentMinibarWidth: 0,\n      currentTopbarHeight: 0,\n      minibarPriority: false,\n      currentContentWidth: 0,\n      sidebarPriority: false,\n      currentWindowWidth: 0,\n      isReverse: false,\n      isMobile: false,\n      isSplit: false,\n      isRTL: false,\n      comp: c,\n      th: t,\n      st: s\n    }\n  },\n  created () {\n    this.$on('Va@sidebarPresenceCheck', (val) => { this.dispatch('VaLayoutManager', 'Va@sidebarPresenceReply', true) })\n    this.$on('Va@desktopMinimumWidthChange', (val) => { this.currentDesktopMinimumWidth = val })\n    this.$on('Va@desktopMarginChange', (val) => { this.currentDesktopMargin = val })\n    this.$on('Va@minibarWidthChange', (val) => { this.currentMinibarWidth = val })\n    this.$on('Va@topbarHeightChange', (val) => { this.currentTopbarHeight = val })\n    this.$on('Va@contentWidthChange', (val) => { this.currentContentWidth = val })\n    this.$on('Va@sidebarWidthChange', (val) => { this.currentSidebarWidth = val })\n    this.$on('Va@minibarPriorityChange', (val) => { this.minibarPriority = val })\n    this.$on('Va@sidebarPriorityChange', (val) => { this.sidebarPriority = val })\n    this.$on('Va@windowWidthChange', (val) => { this.currentWindowWidth = val })\n    this.$on('Va@sidebarIsMobile', (val) => { this.isMobile = val })\n    this.$on('Va@reverseChange', (val) => { this.isReverse = val })\n    this.$on('Va@sidebarThemeChange', (val) => { this.th = val })\n    this.$on('Va@showToggleChange', (val) => { this.st = val })\n    this.$on('Va@splitChange', (val) => { this.isSplit = val })\n    this.$on('Va@compactChange', (val) => { this.comp = val })\n    this.$on('Va@rtlChange', (val) => { this.isRTL = val })\n  },\n  mounted () {\n    /**\n     * This needs to be wrapped in a short setTimeout to give\n     * LayoutManager time to call enableReceivers().\n     */\n    setTimeout(() => {\n      this.dispatch('VaLayoutManager', 'Va@configSidebarThemeChange', this.th)\n    }, 10)\n  },\n  beforeDestroy () {\n    this.dispatch('VaLayoutManager', 'Va@sidebarDisconnect', true)\n  },\n  computed: {\n    classObj () {\n      let {prefixCls, th, isMobile, comp, textLinks} = this\n      let klass = {}\n\n      klass[prefixCls + '-sidebar'] = true\n      klass[prefixCls + '-sidebar--theme-' + th] = true\n      klass[prefixCls + '-sidebar-mobile'] = isMobile\n      klass[prefixCls + '-sidebar-compact'] = comp\n      klass[prefixCls + '-sidebar-text-links'] = textLinks\n\n      return klass\n    },\n    styleObj () {\n      let dmw = parseInt(this.currentDesktopMinimumWidth)\n      let dm = parseInt(this.currentDesktopMargin)\n      let sw = parseInt(this.currentSidebarWidth)\n      let th = parseInt(this.currentTopbarHeight)\n      let cw = parseInt(this.currentContentWidth)\n      let mw = parseInt(this.currentMinibarWidth)\n      let sp = this.sidebarPriority\n      let mp = this.minibarPriority\n      let reverse = this.isReverse\n      let mobile = this.isMobile\n      let split = this.isSplit\n      let rtl = this.isRTL\n      let style = {}\n\n      style['width'] = sw + 'px'\n      style['min-width'] = sw + 'px'\n\n      if (sp) {\n        style['top'] = '0px'\n      } else {\n        style['top'] = th + 'px'\n      }\n\n      /**\n       * Adjust the margins if content width is smaller than\n       * desktop minimum width.\n       */\n      if (!mobile) {\n        if (cw < dmw) {\n          let x = dmw - cw\n          dm = dm - (x / 2)\n        }\n      } else {\n        dm = 0\n        dmw = 0\n      }\n\n      if (split) {\n        if (reverse) {\n          style['left'] = dm + 'px'\n        } else {\n          style['right'] = dm + 'px'\n        }\n      } else {\n        if (reverse) {\n          if (rtl) {\n            style['right'] = (dm + mw) + 'px'\n          } else {\n            style['left'] = dm + 'px'\n          }\n        } else {\n          if (rtl) {\n            style['right'] = dm + 'px'\n          } else {\n            style['left'] = (dm + mw) + 'px'\n          }\n        }\n      }\n\n      if (!sp && mp && reverse && !split && !rtl) {\n        style['top'] = '0px'\n      }\n\n      if (rtl && !split && !reverse && !sp && mp) {\n        style['top'] = '0px'\n      }\n\n      style['bottom'] = '0px'\n\n      return style\n    }\n  },\n  watch: {\n  }\n  // methods: {\n  //   initResize (e) {\n  //     /**\n  //      * Prevent text selection while dragging.\n  //      * https://stackoverflow.com/questions/5429827/how-can-i-prevent-text-element-selection-with-cursor-drag\n  //      */\n  //     if (e.stopPropagation) {\n  //       e.stopPropagation()\n  //     }\n  //     if (e.preventDefault) {\n  //       e.preventDefault()\n  //     }\n  //     e.cancelBubble = true\n  //     e.returnValue = false\n\n  //     window.addEventListener('mousemove', this.doResize, false)\n  //     window.addEventListener('mouseup', this.stopResize, false)\n  //   },\n  //   doResize (e) {\n  //     let el = this.$refs.sidebar\n  //     this.dispatch('VaLayoutManager', 'Va@sidebarWidthChange', e.clientX - el.offsetLeft)\n  //   },\n  //   stopResize () {\n  //     window.removeEventListener('mouseup', this.stopResize, false)\n  //     window.removeEventListener('mousemove', this.doResize, false)\n  //   }\n  // }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-atlas/src/Sidebar"}]}