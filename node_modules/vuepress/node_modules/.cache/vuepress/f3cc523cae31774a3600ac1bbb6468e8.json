{"remainingRequest":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/ProgressTracker/VaProgressTracker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-atlas/src/ProgressTracker/VaProgressTracker.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'VaProgressTracker',\n  props: {\n    labels: {\n      type: Array,\n      required: true\n    },\n    current: {\n      type: Number,\n      default: 1\n    },\n    round: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  methods: {\n    getClassFromIndex (index) {\n      let ret = ''\n\n      if (index === this.current - 1) {\n        ret = 'current'\n      } else if (index < this.current - 1) {\n        ret = 'finished'\n      } else {\n        ret = 'todo'\n      }\n\n      return this.prefixCls + '-steps-' + ret\n    }\n  }\n}\n",{"version":3,"sources":["VaProgressTracker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"VaProgressTracker.vue","sourceRoot":"node_modules/vue-atlas/src/ProgressTracker","sourcesContent":["<template>\n  <ul v-if=\"round\" :class=\"`${prefixCls}-steps-round-con`\">\n    <template v-for=\"(label, index) in labels\">\n      <li :class=\"[getClassFromIndex(index)]\" :key=\"index\">\n        <div :class=\"`${prefixCls}-steps-wrap`\">\n          <div :class=\"`${prefixCls}-steps-round`\">\n            <!-- {{index + 1}} -->\n          </div>\n        </div>\n        <label>{{label}}</label>\n      </li>\n    </template>\n  </ul>\n\n  <div v-else :class=\"`${prefixCls}-steps clearfix`\">\n    <template v-for=\"(label, index) in labels\">\n      <div :class=\"`${prefixCls}-steps-wrap`\" :key=\"index\">\n        <div :class=\"getClassFromIndex(index)\">\n          <label>\n            <span :class=\"`${prefixCls}-steps-round`\">\n              <!-- {{index + 1}} -->\n            </span>\n            <span>{{label}}</span>\n          </label>\n          <template v-if=\"index < labels.length - 1\">\n            <i :class=\"`${prefixCls}-steps-triangle-right-bg`\"></i>\n            <i :class=\"`${prefixCls}-steps-triangle-right`\"></i>\n          </template>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'VaProgressTracker',\n  props: {\n    labels: {\n      type: Array,\n      required: true\n    },\n    current: {\n      type: Number,\n      default: 1\n    },\n    round: {\n      type: Boolean,\n      default: false\n    },\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  methods: {\n    getClassFromIndex (index) {\n      let ret = ''\n\n      if (index === this.current - 1) {\n        ret = 'current'\n      } else if (index < this.current - 1) {\n        ret = 'finished'\n      } else {\n        ret = 'todo'\n      }\n\n      return this.prefixCls + '-steps-' + ret\n    }\n  }\n}\n</script>\n"]}]}