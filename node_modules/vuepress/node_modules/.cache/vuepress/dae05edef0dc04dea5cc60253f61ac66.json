{"remainingRequest":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Mobile/VaMobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-atlas/src/Mobile/VaMobile.vue","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/itsd/ITSD/Projects/wilfried/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaMobile',\n  mixins: [events],\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      isMobile: false\n    }\n  },\n  created () {\n    this.$on('Va@mobileIsMobile', (val) => { this.isMobile = val })\n\n    /**\n     * In case this component is instantiated after the LayoutManager\n     * has initially broadcasted isMobile, let's request it.\n     */\n    this.dispatch('VaLayoutManager', 'Va@requestIsMobile', true)\n  }\n}\n",{"version":3,"sources":["VaMobile.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VaMobile.vue","sourceRoot":"node_modules/vue-atlas/src/Mobile","sourcesContent":["<template>\n  <div>\n    <slot v-if=\"isMobile\"/>\n  </div>\n</template>\n\n<script>\nimport events from '../utils/events'\n\nexport default {\n  name: 'VaMobile',\n  mixins: [events],\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'va'\n    }\n  },\n  data () {\n    return {\n      isMobile: false\n    }\n  },\n  created () {\n    this.$on('Va@mobileIsMobile', (val) => { this.isMobile = val })\n\n    /**\n     * In case this component is instantiated after the LayoutManager\n     * has initially broadcasted isMobile, let's request it.\n     */\n    this.dispatch('VaLayoutManager', 'Va@requestIsMobile', true)\n  }\n}\n</script>\n"]}]}